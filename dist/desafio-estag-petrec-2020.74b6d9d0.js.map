{"version":3,"sources":["node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/render/EventType.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/flat.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/layer/Graticule.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Map.js","node_modules/ol/Overlay.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol/index.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/reproj/common.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","node_modules/ol/source/wms.js","node_modules/ol/uri.js","node_modules/ol/source/TileWMS.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/control/FullScreen.js","node_modules/ol/control/MousePosition.js","node_modules/ol/control/OverviewMap.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/control/ZoomSlider.js","node_modules/ol/control/ZoomToExtent.js","node_modules/ol/control.js","index.js"],"names":["messages","AssertionError","_Error","_inherits","_wrapNativeSuper","Error","_super","_createSuper","code","_this","_classCallCheck","message","call","name","_createClass","_default","exports","default","BaseEvent","type","propagationStopped","defaultPrevented","target","key","value","stopPropagation","evt","preventDefault","PROPERTYCHANGE","Disposable","disposed","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","arguments","arrayEquals","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","Number","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","e","valueOf","getPrototypeOf","Target","_Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","includes","push","event","isString","Event","propagate","dispatching","pendingRemovals","ii","handleEvent","pr","removeEventListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","addEventListener","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","dispatchEvent","EventType","len","ol_key","unByKey","abstract","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","_super2","values","_this2","values_","setProperties","hasOwnProperty","assign","eventType","concat","hasListener","ObjectEventType","silent","notify","set","source","ADD","REMOVE","_AssertionError","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","f","get","elem","CollectionEventType","removeAt","insertAt","prev","except","assert","assertion","errorCode","_asserts","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","changed","handleGeometryChange_","createStyleFunction","id","removeChangeListener","styles","getZIndex","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","error","transformStringDiv","_has","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","transformString","join","node","document","createElement","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","min","max","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport2","getRotatedViewport","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","METERS_PER_UNIT","PI","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","getCode","destinationCode","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_math","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","none","level","setLevel","args","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","forEach","projectionLike","getProj","pointResolution","getPointResolutionFunc","getUnits","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getRevision","closestPoint","minSquaredDistance","getClosestPoint","NaN","closestPointXY","computeExtent","isNaN","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","getStrideForLayout","nesting","getLayoutForStride","getStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","setLayout","Point","applyProperties","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","startAngle","_Polygon","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","GeolocationErrorType","GeolocationError","_BaseEvent","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Fill","color_","color","getColor","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","interpolate","lineStringLength","linearRingLength","perimeter","_interpolate","_length","LineString","flatMidpoint_","flatMidpointRevision_","lineString","getCoordinateAt","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","IDLE","LOADING","LOADED","EMPTY","num","hasArea","ratio","toSize","_size","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","pixelRatio","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","substr","startsWith","normalize","map","isStringColor","_color","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","_dom","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","_ImageState","_Image","_colorlike","_canvas","RegularShape","_ImageStyle","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","render","getFill","getPoints","getRadius2","getAngle","getStroke","setOpacity","getScaleArray","createHitDetectionCanvas_","image","renderOptions","draw_","ImageState","strokeWidth","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","strokeStyle","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","fillStyle","setLineDash","drawHitDetectionCanvas_","getImage","arc","step","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","_Circle","_Fill","_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","BaseLayer","background_","background","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","managed","state","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","states","zindex","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","newOptions","getZoom","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","animationCallback","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","constrainResolution","getResolutionForExtentInternal","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","viewState","getState","calculateExtent","nearest","baseLevel","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","rotatedExtentForGeometry","centerRot","centerX","centerY","getConstrainedCenter","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","adjustResolutionInternal","getInteracting","adjustResolution","adjustRotationInternal","newRotation","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","cancelAnimations","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getLayerState","getSource","handleSourceChange_","pixel","getFeatures","getData","view","frameState","layerState","_this3","getMapInternal","getView","layerStatesArray","getLayerGroup","getLayerStatesArray","find","layerExtent","inView","isVisible","getAttributions","attributions","getViewStateAndExtent","layerRenderer","prepareFrame","renderFrame","unrender","RenderEventType","some","arrayLayerState","createRenderer","dispose","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","src","crossOrigin","getKey","maxCacheSize","expire","shared","ImageBase","pixelRatio_","_ImageBase2","ImageWrapper","_ImageBase","imageLoadFunction","src_","context_","unlisten_","imageLoadFunction_","HTMLCanvasElement","unlistenImage_","listenImage","handleImageLoad_","handleImageError_","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","imageState_","tainted_","willReadFrequently","getImageData","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","fillRect","ctx","globalCompositeOperation","iconImageCache","_IconImage","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","listenImageChange","onload","unlistenImageChange","imageSize","setScale","getSrc","getPixelRatio","getImageState","getHitDetectionImage","iconImageSize","load","_Icon","_Style","_Text","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","_Layer2","_rbush","_interopRequireWildcard","_flat","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","has","newObj","hasPropertyDescriptor","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","declutterTree","RBush","renderDeclutter","renderOrder","styleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","declutterImageWithText","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","tmpCoord","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getEnds","appendFlatPointCoordinates","endGeometry","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","sharedData","getAnchor","origin","getOrigin","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice2","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","acos","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","setFillStrokeStyle","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","tile","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","hitTolerance","matches","renderIfReadyAndVisible","getLayer","getSourceState","RenderEvent","inversePixelTransform","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","getBackground","backgroundColor","layerClassName","getClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","textIsArray","_getTextDimensions","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","setStrokeStyle_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","contextScale","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","repeatSize","createLabel","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","insert","imageArgs","imageDeclutterBox","collides","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute_","_Executor","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","executor","zs","executeHitDetection","builderTypes","execute","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","simplifyTransformed","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","getGeometriesArray","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","_style","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","setImage","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","getBuilder","textReplay","drawText","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","drawCustom","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","_CanvasLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","executorGroup","vectorSource","viewHints","getWrapX","endWorld","world","getRenderTransform","compositionContext","setupCompositionContext_","renderWorlds","releaseCompositionContext_","layerIndex","transformToString","useContainer","preRender","clipped","intersectsExtent","clipUnrotated","postRender","lastIndexOf","executorGroups","forEachFeatureAtCoordinate","all","item","_this4","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","loadFeatures","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","_BaseVector","_VectorLayer","VectorLayer","_BaseVectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","uid","bbox","search","forEach_","getAll","getInExtent","toJSON","rbush","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","_Collection","_RBush","_Source2","_VectorEventType","_loadingstrategy","_featureloader","VectorSourceEvent","VectorSource","_Source","loader_","format_","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","getId","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","_this5","_ref","anExtent","closestFeature","previousMinSquaredDistance","minDistance","update","sid","removeFromIdIndex_","_this6","loadedExtentsRtree","extentsToLoad","_loop","extentToLoad","featureChangeKeys","removed","setLoader","toContext","scaleTransform","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","getRenderPixel","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","greatCircleArc","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","meridian","epsg4326Projection","parallel","_Feature","_LineString","_Vector","_Vector2","_render","_geodesic","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","setRenderOrder","realWorldExtent","removeLoadedExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","getFeaturesCollection","poolIndex","minLat","maxLat","getMeridian_","geom","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","drawFeature","getParallelPoint_","getInterval_","validCenterP","centerLonLat","cnt","centerLon","centerLat","validExtentP","validExtent","addMeridian_","addParallel_","clampedLat","bottom","top","clampedBottom","clampedTop","clampedLeft","clampedRight","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","error_","handleLoad_","_TileState","Tile","interimTile","transition_","transition","transitionStarts_","TileState","setState","time","_Tile2","ImageTile","_Tile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MapRenderer","map_","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","hasRenderer","order","postRenderFunctions","expireIconCache","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","getMap","calculateMatrices2D","dispatchRenderEvent","declutterLayers","previousElement","sourceState","scheduleExpireIconCache","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","getLayersArray","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","_PriorityQueue2","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","visibleAttributions","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","handleToggle_","classList","toggle","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","animate","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","ACTIVE","Interaction","setActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","scaleCoordinate","adjustCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","startPixel_","endPixel_","startPixel","endPixel","getOverlayContainer","createOrUpdateGeometry","render_","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","removeLayerMapProperty","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","getControls","getInteractions","overlay","getOverlays","disconnect","forEachFeatureAtPixel","addLayersFrom","layerGroup","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","group","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","tileQueue","lowOnFrameBudget","getTilesLoading","reprioritize","loadMoreTiles","unobserve","ShadowRoot","host","setSize","getTarget","observe","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","previousFrameState","getHints","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","setViewportSize","ELEMENT","OFFSET","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","getPosition","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","posX","posY","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","containsKey","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","release","peekLast","peekFirstKey","TileRange","VectorRenderTile","urlTileCoord","getSourceTiles","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","features_","setFeatures","_Geolocation","_Graticule","_ImageCanvas","_ImageTile","_Overlay","_TileCache","_TileRange","_VectorRenderTile","_VectorTile","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","ud","vd","steps","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","getRenderSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","toTransformString","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","_BaseTile","_TileLayer","TileLayer","_BaseTileLayer","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","_TileGrid","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_tilegrid","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","charCode","startCharCode","charCodeAt","stopCharCode","stop","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","imageTile","_TileImage2","XYZ","_TileImage","_XYZ2","ATTRIBUTION","OSM","_XYZ","DEFAULT_VERSION","appendParams","uri","params","keyParams","encodeURIComponent","qs","_wms","_uri","TileWMS","transparent","params_","v13_","serverType_","serverType","hidpi_","hidpi","updateV13_","getKeyForParams_","projectionObj","sourceProjectionObj","getTileGrid","tileExtent","bufferSize","baseParams","getRequestUrl_","mpu","dpi","getAxisOrientation","version","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","unlistenGeometriesChange_","clonedGeometries","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","setWorldExtent","adaptOptions","transformGeometryWithOptions","write","transformExtentWithOptions","JSONFeature","_FeatureFormat","readFeatureFromObject","getObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiPoint","multiPoint","_MultiPoint","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","_GeometryCollection","_JSONFeature2","_MultiLineString","_MultiPolygon","_Feature2","GeoJSON","_JSONFeature","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometry","setId","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","rightHanded","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","wasInFullscreen","fullscreen","_element$classList","_element$classList2","_element$classList3","_element$classList4","oldMap","handleFullScreenChange_","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","COORDINATE_FORMAT","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","updateHTML_","handleMouseMove","handleMouseOut","html","getCoordinateFormat","MAX_RATIO","MIN_RATIO","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","addLayer","boxSizing","boxOverlay_","addOverlay","scope","overlayBox","move","mousePosition","getEventCoordinateInternal","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","LN2","ovresolution","ovmapPostrenderKey_","updateBox_","validateExtent_","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","VERTICAL","HORIZONTAL","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","amount","getResolutionForValueFunction","getValueForResolutionFunction","initSlider_","setThumbPosition_","ZoomToExtent","handleZoomToExtent","_FullScreen","_MousePosition","_OverviewMap","_ScaleLine","_ZoomSlider","_ZoomToExtent","_ol","_OSM","_TileWMS","_GeoJSON","_control","basemapLayer","overviewLayer","overviewMapControl","zoomToExtentControl","getScaleControl","BrasilFrequencyLayer","TILES","BrasilVectorLayer"],"mappings":"AwHiBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAbD,IAAAe,EAGe,CACbsgC,KAAM,EACNC,QAAS,EACTC,OAAQ,EAKRv1B,MAAO,EACPw1B,MAAO,GACRxgC,QAAAC,QAAAF;AxHmF4B,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,WAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,YAAA,EAAA,QAAA,UAAA,EAAA,UAAA,QAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,IAAA,WAAA,EAAA,IAAA,mBAAA,GAAA,OAAA,EAAA,QAAA,IAAA,EAAA,MAAA,IAAA,UAAA,4DAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,QAAA,UAAA,QAAA,KAAA,QAAA,UAAA,QAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,OAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/F7B,IAAMf,EAAW,CACf,EAAG,iCACH,EAAG,qCACH,EAAG,mCACH,EAAG,wDACH,EAAG,iDACH,EAAG,yCACH,EAAG,kCACH,EAAG,oDACH,GAAI,oEACJ,GAAI,0CACJ,GAAI,0EACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,kEACJ,GAAI,sDACJ,GAAI,mDACJ,GAAI,8DACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,kEACJ,GAAI,oDACJ,GAAI,iDACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,gDACJ,GAAI,uDACJ,GAAI,oEACJ,GAAI,2CACJ,GAAI,gBACJ,GAAI,0BACJ,GAAI,mBACJ,GAAI,8BACJ,GAAI,sCACJ,GAAI,wBACJ,GAAI,wCACJ,GAAI,kEACJ,GAAI,qCACJ,GAAI,qDACJ,GAAI,2DACJ,GAAI,+DACJ,GAAI,2DACJ,GAAI,4CACJ,GAAI,sDACJ,GAAI,kCACJ,GAAI,2CACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,qCACJ,GAAI,mCACJ,GAAI,4BACJ,GAAI,+EACJ,GAAI,uFACJ,GAAI,iCACJ,GAAI,wPACJ,GAAI,uGACJ,GAAI,sGACJ,GAAI,gEAQAC,EAAcC,SAAAA,GAAAC,EAAAF,EA2BjBG,EA3B0BC,QAAT,IAAAC,EAAAC,EAAAN,GAIlB,SAAAA,EAAYO,GAAM,IAAAC,EAAAC,EAAAT,KAAAA,GAChB,IAAMU,EAAUX,EAASQ,GAqBF,OAnBvBC,EAAAH,EAAAM,KAAMD,KAAAA,IAWDH,KAAOA,EAKZC,EAAKI,KAAO,iBAGZJ,EAAKE,QAAUA,EAAQF,EACxB,OAAAK,EAAAb,GA3BiBC,GAAca,EA8BnBd,EAAce,QAAAC,QAAAF;;ACxBL,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,WAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,eAAA,EAAA,QAAA,gBAAA,EAxExB,IAUMG,EAAS,WAIb,SAAAA,EAAYC,GAAMT,EAAAQ,KAAAA,GAIhB,KAAKE,mBAKL,KAAKC,iBAOL,KAAKF,KAAOA,EAOZ,KAAKG,OAAS,KAkBf,OAfDR,EAAAI,EAAA,CAAA,CAAAK,IAAA,iBAAAC,MAKA,WACE,KAAKH,kBAAmB,IAG1B,CAAAE,IAAA,kBAAAC,MAIA,WACE,KAAKJ,oBAAqB,MAC3BF,EA7CY,GAmDR,SAASO,EAAgBC,GAC9BA,EAAID,kBAMC,SAASE,EAAeD,GAC7BA,EAAIC,iBACL,IAAAZ,EAEcG,EAASF,QAAAC,QAAAF;;AC5DxB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAZA,IAAAA,EAGe,CAMba,eAAgB,kBAGlBZ,QAAAC,QAAAF;;ACmByB,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,WAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/BzB,IAIMc,EAAU,WACd,SAAAA,IAAcnB,EAAAmB,KAAAA,GAMZ,KAAKC,UAAW,EAiBE,OAdpBhB,EAAAe,EAAA,CAAA,CAAAN,IAAA,UAAAC,MAGA,WACO,KAAKM,WACR,KAAKA,UAAW,EAChB,KAAKC,qBAIT,CAAAR,IAAA,kBAAAC,MAIA,gBAAoBK,EAxBN,GAwBMd,EAGPc,EAAUb,QAAAC,QAAAF;;ACmMzB,aAzNO,SAASiB,EAAaC,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAcG,EAK3B,IAJA,IAAIC,EAAM,EACNC,EAAOP,EAASQ,OAChBC,GAAQ,EAELH,EAAMC,IAIXH,GAAOF,EAAWF,EADlBG,EAAMG,GAAQC,EAAOD,GAAQ,IACIL,IAEvB,EAERK,EAAMH,EAAM,GAGZI,EAAOJ,EACPM,GAASL,GAKb,OAAOK,EAAQH,GAAOA,EAUjB,SAASD,EAAUK,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,EA0B3B,SAASC,EAAkBC,EAAKxB,EAAQyB,GAC7C,GAAID,EAAI,IAAMxB,EACZ,OAAO,EAGT,IAAM0B,EAAIF,EAAIL,OACd,GAAInB,GAAUwB,EAAIE,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAdD,EAA0B,CACnC,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,IAAMC,EAAYJ,EAAIG,GACtB,GAAIC,IAAc5B,EAChB,OAAO2B,EAET,GAAIC,EAAY5B,EACd,OAAIyB,EAAUzB,EAAQwB,EAAIG,EAAI,GAAIC,GAAa,EACtCD,EAAI,EAENA,EAGX,OAAOD,EAAI,EAGb,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIH,EAAIG,GAAK3B,EACX,OAAO2B,EAAI,EAGf,OAAOD,EAAI,EAGb,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIH,EAAIG,IAAM3B,EACZ,OAAO2B,EAGX,OAAOD,EAAI,EAGb,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,GAAIH,EAAIG,IAAM3B,EACZ,OAAO2B,EAET,GAAIH,EAAIG,GAAK3B,EACX,OAAIwB,EAAIG,EAAI,GAAK3B,EAASA,EAASwB,EAAIG,GAC9BA,EAAI,EAENA,EAGX,OAAOD,EAAI,EAQN,SAASG,EAAgBL,EAAKM,EAAOC,GAC1C,KAAOD,EAAQC,GAAK,CAClB,IAAMC,EAAMR,EAAIM,GAChBN,EAAIM,GAASN,EAAIO,GACjBP,EAAIO,GAAOC,IACTF,IACAC,GASC,SAASE,EAAOT,EAAKU,GAG1B,IAFA,IAAMC,EAAYC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,GAC1Cf,EAASgB,EAAUhB,OAChBQ,EAAI,EAAGA,EAAIR,EAAQQ,IAC1BH,EAAIA,EAAIL,QAAUgB,EAAUR,GAUzB,SAASW,EAAOd,EAAKe,GAC1B,IAAMZ,EAAIH,EAAIgB,QAAQD,GAChBnB,EAAQO,GAAK,EAInB,OAHIP,GACFI,EAAIiB,OAAOd,EAAG,GAETP,EAQF,SAASsB,EAAOC,EAAMC,GAC3B,IAAMC,EAAOF,EAAKxB,OAClB,GAAI0B,IAASD,EAAKzB,OAChB,OAAO,EAET,IAAK,IAAIQ,EAAI,EAAGA,EAAIkB,EAAMlB,IACxB,GAAIgB,EAAKhB,KAAOiB,EAAKjB,GACnB,OAAO,EAGX,OAAO,EAUF,SAASmB,EAAWtB,EAAKuB,GAC9B,IAEIpB,EAFER,EAASK,EAAIL,OACba,EAAMI,MAAMZ,EAAIL,QAEtB,IAAKQ,EAAI,EAAGA,EAAIR,EAAQQ,IACtBK,EAAIL,GAAK,CAACqB,MAAOrB,EAAGzB,MAAOsB,EAAIG,IAKjC,IAHAK,EAAIiB,KAAK,SAAU5B,EAAGC,GACpB,OAAOyB,EAAW1B,EAAEnB,MAAOoB,EAAEpB,QAAUmB,EAAE2B,MAAQ1B,EAAE0B,QAEhDrB,EAAI,EAAGA,EAAIH,EAAIL,OAAQQ,IAC1BH,EAAIG,GAAKK,EAAIL,GAAGzB,MAUb,SAASgD,EAAS1B,EAAK2B,EAAMC,GAClC,IAAMC,EAAUF,GAAQnC,EACxB,OAAOQ,EAAI8B,MAAM,SAAUC,EAAYP,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,IAAMQ,EAAMH,EAAQ7B,EAAIwB,EAAQ,GAAIO,GACpC,QAASC,EAAM,GAAMJ,GAAkB,IAARI,KAEnC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,aAAA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA,EAAA,QAAA,SAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,OAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,WAAA;;ACtJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,KAAA,EAAA,QAAA,KAAA,EAAA,QAAA,WAAA,EAAA,QAAA,UAAA,EA5EA,IAAAC,EAAAC,QAAA,cAMO,SAASC,IACd,OAAO,EAOF,SAASC,IACd,OAAO,EAQF,SAASC,KAWT,SAASC,EAAWC,GACzB,IAGIC,EAGAC,EAEAC,EARAC,GAAS,EAUb,OAAO,WACL,IAAMC,EAAWhC,MAAMiC,UAAUC,MAAMhF,KAAKiF,WAO5C,OANKJ,GAAU,OAASD,IAAa,EAAAM,EAAW,QAACJ,EAAUH,KACzDE,GAAS,EACTD,EAAW,KACXD,EAAWG,EACXJ,EAAaD,EAAGU,MAAM,KAAMF,YAEvBP,GASJ,SAASU,EAAUC,GAaxB,OAZA,WACE,IAAIzE,EACJ,IACEA,EAAQyE,IACR,MAAOC,GACP,OAAOC,QAAQC,OAAOF,GAExB,OAAI1E,aAAiB2E,QACZ3E,EAEF2E,QAAQE,QAAQ7E,GAElB8E;;ACtDT,aAjBO,SAASC,EAAMC,GACpB,IAAK,IAAMC,KAAYD,SACdA,EAAOC,GASX,SAASC,EAAQF,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,EACV,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,QAAA;;ACkKqB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxLrB,IAAAE,EAAAC,EAAA5B,QAAA,qBACA6B,EAAAD,EAAA5B,QAAA,eACA8B,EAAA9B,QAAA,mBACA+B,EAAA/B,QAAA,aAAgC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAMhC,IAeMyB,EAAMC,SAAAA,GAAAvK,EAAAsK,EAAS5I,EAAU,SAAnB,IAAAvB,EAAAC,EAAAkK,GAIV,SAAAA,EAAYnJ,GAAQ,IAAAb,EAyBK,OAzBLC,EAAA+J,KAAAA,IAClBhK,EAAAH,EAAAM,KAAA,OAMK+J,aAAerJ,EAMpBb,EAAKmK,iBAAmB,KAMxBnK,EAAKoK,aAAe,KAMpBpK,EAAKqK,WAAa,KAAKrK,EAgIxB,OA7HDK,EAAA2J,EAAA,CAAA,CAAAlJ,IAAA,mBAAAC,MAIA,SAAiBL,EAAM4J,GACrB,GAAK5J,GAAS4J,EAAd,CAGA,IAAMC,EAAY,KAAKF,aAAe,KAAKA,WAAa,IAClDG,EAAmBD,EAAU7J,KAAU6J,EAAU7J,GAAQ,IAC1D8J,EAAiBC,SAASH,IAC7BE,EAAiBE,KAAKJ,MAI1B,CAAAxJ,IAAA,gBAAAC,MAUA,SAAc4J,GACZ,IAAMC,EAA4B,iBAAVD,EAClBjK,EAAOkK,EAAWD,EAAQA,EAAMjK,KAChC6J,EAAY,KAAKF,YAAc,KAAKA,WAAW3J,GACrD,GAAK6J,EAAL,CAIA,IAAMtJ,EAAM2J,EAAW,IAAIC,EAAK,QAACF,GAA+BA,EAC3D1J,EAAIJ,SACPI,EAAIJ,OAAS,KAAKqJ,cAAgB,MAEpC,IAQIY,EAREC,EAAc,KAAKX,eAAiB,KAAKA,aAAe,IACxDY,EACJ,KAAKb,mBAAqB,KAAKA,iBAAmB,IAC9CzJ,KAAQqK,IACZA,EAAYrK,GAAQ,EACpBsK,EAAgBtK,GAAQ,KAExBqK,EAAYrK,GAEd,IAAK,IAAI8B,EAAI,EAAGyI,EAAKV,EAAUvI,OAAQQ,EAAIyI,IAAMzI,EAU/C,IAAkB,KARhBsI,EADE,gBAAiBP,EAAU/H,GAE3B+H,EAAU/H,GACV0I,YAAYjK,GAGZsJ,EAAU/H,GACVrC,KAAK,KAAMc,KAEYA,EAAIN,mBAAoB,CACjDmK,GAAY,EACZ,MAGJ,GAA4B,KAAtBC,EAAYrK,GAAa,CAC7B,IAAIyK,EAAKH,EAAgBtK,GAEzB,WADOsK,EAAgBtK,GAChByK,KACL,KAAKC,oBAAoB1K,EAAMgE,EAAI,aAE9BqG,EAAYrK,GAErB,OAAOoK,KAGT,CAAAhK,IAAA,kBAAAC,MAGA,WACE,KAAKsJ,aAAc,EAAAvE,EAAK,OAAC,KAAKuE,cAGhC,CAAAvJ,IAAA,eAAAC,MAOA,SAAaL,GACX,OAAQ,KAAK2J,YAAc,KAAKA,WAAW3J,SAAUuH,IAGvD,CAAAnH,IAAA,cAAAC,MAKA,SAAYL,GACV,QAAK,KAAK2J,aAGH3J,EACHA,KAAQ,KAAK2J,WACbhD,OAAOgE,KAAK,KAAKhB,YAAYrI,OAAS,KAG5C,CAAAlB,IAAA,sBAAAC,MAIA,SAAoBL,EAAM4J,GACxB,IAAMC,EAAY,KAAKF,YAAc,KAAKA,WAAW3J,GACrD,GAAI6J,EAAW,CACb,IAAM1G,EAAQ0G,EAAUlH,QAAQiH,IACjB,IAAXzG,IACE,KAAKsG,kBAAoBzJ,KAAQ,KAAKyJ,kBAExCI,EAAU1G,GAASa,EAAI,OACrB,KAAKyF,iBAAiBzJ,KAExB6J,EAAUjH,OAAOO,EAAO,GACC,IAArB0G,EAAUvI,eACL,KAAKqI,WAAW3J,UAKhCsJ,EA7JSC,GAAmB3J,EAgKhB0J,EAAMzJ,QAAAC,QAAAF;;ACrJpB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlCD,IAAAA,EAIe,CAMbgL,OAAQ,SAORC,MAAO,QAEPC,KAAM,OACNC,MAAO,QACPC,YAAa,cACbC,MAAO,QACPC,SAAU,WACVC,UAAW,YACXC,SAAU,WACVC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,UAAW,YACXC,MAAO,SACR/L,QAAAC,QAAAF;;ACkED,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,WAAA,EAAA,QAAA,cAAA,EArGA,IAAAgG,EAAA/B,QAAA,YA2CO,SAASgI,EAAO1L,EAAQH,EAAM4J,EAAUkC,EAASC,GAItD,GAHID,GAAWA,IAAY3L,IACzByJ,EAAWA,EAAS5B,KAAK8D,IAEvBC,EAAM,CACR,IAAMC,EAAmBpC,EACzBA,EAAW,WACTzJ,EAAOuK,oBAAoB1K,EAAM4J,GACjCoC,EAAiBpH,MAAM,KAAMF,YAGjC,IAAMuH,EAAY,CAChB9L,OAAQA,EACRH,KAAMA,EACN4J,SAAUA,GAGZ,OADAzJ,EAAO+L,iBAAiBlM,EAAM4J,GACvBqC,EAuBF,SAASE,EAAWhM,EAAQH,EAAM4J,EAAUkC,GACjD,OAAOD,EAAO1L,EAAQH,EAAM4J,EAAUkC,GAAS,GAY1C,SAASM,EAAchM,GACxBA,GAAOA,EAAID,SACbC,EAAID,OAAOuK,oBAAoBtK,EAAIJ,KAAMI,EAAIwJ,WAC7C,EAAAxE,EAAK,OAAChF;;ACwFe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,QAAA,EA3LzB,IAAAiM,EAAA5G,EAAA5B,QAAA,uBACAyI,EAAA7G,EAAA5B,QAAA,0BACA0I,EAAA1I,QAAA,eAA8D,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAwB9D,IAWM2E,EAAUC,SAAAA,GAAAzN,EAAAwN,EAASE,EAAW,SAApB,IAAAvN,EAAAC,EAAAoN,GACd,SAAAA,IAAc,IAAAlN,EAmBO,OAnBPC,EAAAiN,KAAAA,IACZlN,EAAAH,EAAAM,KAAA,OAEKkN,GAEDrN,EAAKsN,WAGTtN,EAAKyM,KAEDzM,EAAKuN,aAGTvN,EAAKwN,GAAiDxN,EAAKyN,WAM3DzN,EAAK0N,UAAY,EAAE1N,EA8EpB,OA3EDK,EAAA6M,EAAA,CAAA,CAAApM,IAAA,UAAAC,MAIA,aACI,KAAK2M,UACP,KAAKC,cAAcC,EAAS,QAACtC,UAG/B,CAAAxK,IAAA,cAAAC,MAMA,WACE,OAAO,KAAK2M,YAGd,CAAA5M,IAAA,aAAAC,MAMA,SAAWL,EAAM4J,GACf,GAAIrH,MAAMC,QAAQxC,GAAO,CAGvB,IAFA,IAAMmN,EAAMnN,EAAKsB,OACXqJ,EAAO,IAAIpI,MAAM4K,GACdrL,EAAI,EAAGA,EAAIqL,IAAOrL,EACzB6I,EAAK7I,IAAK,EAAA+J,EAAM,QAAC,KAAM7L,EAAK8B,GAAI8H,GAElC,OAAOe,EAET,OAAO,EAAAkB,EAAM,QAAC,KAA6B7L,EAAO4J,KAGpD,CAAAxJ,IAAA,eAAAC,MAMA,SAAaL,EAAM4J,GACjB,IAAIxJ,EACJ,GAAImC,MAAMC,QAAQxC,GAAO,CACvB,IAAMmN,EAAMnN,EAAKsB,OACjBlB,EAAM,IAAImC,MAAM4K,GAChB,IAAK,IAAIrL,EAAI,EAAGA,EAAIqL,IAAOrL,EACzB1B,EAAI0B,IAAK,EAAAqK,EAAU,YAAC,KAAMnM,EAAK8B,GAAI8H,QAGrCxJ,GAAM,EAAA+L,EAAU,YAAC,KAA6BnM,EAAO4J,GAGvD,OADuBA,EAAUwD,OAAShN,EACnCA,IAGT,CAAAA,IAAA,aAAAC,MAMA,SAAWL,EAAM4J,GACf,IAAMxJ,EAA6BwJ,EAAUwD,OAC7C,GAAIhN,EACFiN,EAAQjN,QACH,GAAImC,MAAMC,QAAQxC,GACvB,IAAK,IAAI8B,EAAI,EAAGyI,EAAKvK,EAAKsB,OAAQQ,EAAIyI,IAAMzI,EAC1C,KAAK4I,oBAAoB1K,EAAK8B,GAAI8H,QAGpC,KAAKc,oBAAoB1K,EAAM4J,OAElC4C,EAlGaC,GA4IT,SAASY,EAAQjN,GACtB,GAAImC,MAAMC,QAAQpC,GAChB,IAAK,IAAI0B,EAAI,EAAGyI,EAAKnK,EAAIkB,OAAQQ,EAAIyI,IAAMzI,GACzC,EAAAsK,EAAa,eAAChM,EAAI0B,SAGpB,EAAAsK,EAAa,eAAiDhM,GAnClEoM,EAAWhI,UAAUmI,GAYrBH,EAAWhI,UAAUuH,KASrBS,EAAWhI,UAAUsI,GAgBpB,IAAAlN,EAEc4M,EAAU3M,QAAAC,QAAAF;;AC3JM,aA5BxB,SAAS0N,IACd,MAAM,IAAIpO,MAAM,kCA2Ba,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,SAAA,EAAA,QAAA,OAAA,EAnB/B,IAAIqO,EAAc,EAWX,SAASC,EAAO9K,GACrB,OAAOA,EAAI+K,SAAW/K,EAAI+K,OAASvG,SAASqG,IAOvC,IAAMG,EAAU,QAAQ7N,QAAA6N,QAAAA;;ACqON,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,iBAAA,EArQzB,IAAAC,EAAAlI,EAAA5B,QAAA,sBACA+J,EAAAnI,EAAA5B,QAAA,yBACAgK,EAAApI,EAAA5B,QAAA,oBACAiK,EAAAjK,QAAA,aACA+B,EAAA/B,QAAA,YAAiC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAA2D,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAA5H,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAApH,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAEjC,IAIakG,EAAWrI,SAAAA,GAAA1G,EAAA+O,EAAS5D,EAAK,SAAd,IAAAhL,EAAAC,EAAA2O,GAMtB,SAAAA,EAAY/N,EAAMI,EAAK4N,GAAU,IAAA1O,EAgBN,OAhBMC,EAAAwO,KAAAA,IAC/BzO,EAAAH,EAAAM,KAAMO,KAAAA,IAODI,IAAMA,EAQXd,EAAK0O,SAAWA,EAAS1O,EAC1B,OAAAK,EAAAoO,GAvBqBrI,GAiCxB7F,QAAAkO,YAAAA,EAAA,IA2CME,EAAUC,SAAAA,GAAAlP,EAAAiP,EAASzB,EAAU,SAAnB,IAAA2B,EAAA/O,EAAA6O,GAId,SAAAA,EAAYG,GAAQ,IAAAC,EAgCjB,OAhCiB9O,EAAA0O,KAAAA,IAClBI,EAAAF,EAAA1O,KAAA,OAKKkN,GAKL0B,EAAKtC,KAKLsC,EAAKvB,IAML,EAAAU,EAAM,QAAA1E,EAAAuF,IAMNA,EAAKC,QAAU,UAEA/G,IAAX6G,GACFC,EAAKE,cAAcH,GACpBC,EAwIF,OArID1O,EAAAsO,EAAA,CAAA,CAAA7N,IAAA,MAAAC,MAMA,SAAID,GACF,IAAIC,EAIJ,OAHI,KAAKiO,SAAW,KAAKA,QAAQE,eAAepO,KAC9CC,EAAQ,KAAKiO,QAAQlO,IAEhBC,IAGT,CAAAD,IAAA,UAAAC,MAKA,WACE,OAAQ,KAAKiO,SAAW3H,OAAOgE,KAAK,KAAK2D,UAAa,KAGxD,CAAAlO,IAAA,gBAAAC,MAKA,WACE,OAAQ,KAAKiO,SAAW3H,OAAO8H,OAAO,GAAI,KAAKH,UAAa,KAG9D,CAAAlO,IAAA,gBAAAC,MAGA,WACE,QAAS,KAAKiO,UAGhB,CAAAlO,IAAA,SAAAC,MAIA,SAAOD,EAAK4N,GACV,IAAIU,EACJA,EAASC,UAAAA,OAAavO,GAClB,KAAKwO,YAAYF,IACnB,KAAKzB,cAAc,IAAIc,EAAYW,EAAWtO,EAAK4N,IAErDU,EAAYG,EAAe,QAACpO,eACxB,KAAKmO,YAAYF,IACnB,KAAKzB,cAAc,IAAIc,EAAYW,EAAWtO,EAAK4N,MAIvD,CAAA5N,IAAA,oBAAAC,MAIA,SAAkBD,EAAKwJ,GACrB,KAAKsC,iBAAgByC,UAAAA,OAAWvO,GAAOwJ,KAGzC,CAAAxJ,IAAA,uBAAAC,MAIA,SAAqBD,EAAKwJ,GACxB,KAAKc,oBAAmBiE,UAAAA,OAAWvO,GAAOwJ,KAG5C,CAAAxJ,IAAA,MAAAC,MAOA,SAAID,EAAKC,EAAOyO,GACd,IAAMV,EAAS,KAAKE,UAAY,KAAKA,QAAU,IAC/C,GAAIQ,EACFV,EAAOhO,GAAOC,MACT,CACL,IAAM2N,EAAWI,EAAOhO,GACxBgO,EAAOhO,GAAOC,EACV2N,IAAa3N,GACf,KAAK0O,OAAO3O,EAAK4N,MAKvB,CAAA5N,IAAA,gBAAAC,MAOA,SAAc+N,EAAQU,GACpB,IAAK,IAAM1O,KAAOgO,EAChB,KAAKY,IAAI5O,EAAKgO,EAAOhO,GAAM0O,KAI/B,CAAA1O,IAAA,kBAAAC,MAKA,SAAgB4O,GACTA,EAAOX,SAGZ3H,OAAO8H,OAAO,KAAKH,UAAY,KAAKA,QAAU,IAAKW,EAAOX,WAG5D,CAAAlO,IAAA,QAAAC,MAMA,SAAMD,EAAK0O,GACT,GAAI,KAAKR,SAAWlO,KAAO,KAAKkO,QAAS,CACvC,IAAMN,EAAW,KAAKM,QAAQlO,UACvB,KAAKkO,QAAQlO,IAChB,EAAAmF,EAAO,SAAC,KAAK+I,WACf,KAAKA,QAAU,MAEZQ,GACH,KAAKC,OAAO3O,EAAK4N,QAGtBC,EA5KaC,GAAmBtO,EA+KpBqO,EAAUpO,QAAAC,QAAAF;;ACpPxB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhBD,IAAAA,EAGe,CAMbsP,IAAK,MAMLC,OAAQ,UACTtP,QAAAC,QAAAF;;ACoTwB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,qBAAA,EArUzB,IAAAwP,EAAA3J,EAAA5B,QAAA,wBACAwL,EAAA5J,EAAA5B,QAAA,gBACAyL,EAAA7J,EAAA5B,QAAA,6BACA8J,EAAAlI,EAAA5B,QAAA,sBAAsC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAA2D,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAA5H,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAApH,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAMtC,IAAM0H,EAAW,CACfC,OAAQ,UASGC,EAAe/J,SAAAA,GAAA1G,EAAAyQ,EAAStF,EAAK,SAAd,IAAAhL,EAAAC,EAAAqQ,GAM1B,SAAAA,EAAYzP,EAAM0P,EAASvM,GAAO,IAAA7D,EAeb,OAfaC,EAAAkQ,KAAAA,IAChCnQ,EAAAH,EAAAM,KAAMO,KAAAA,IAOD0P,QAAUA,EAOfpQ,EAAK6D,MAAQA,EAAM7D,EACpB,OAAAK,EAAA8P,GAtByB/J,GAyC5B7F,QAAA4P,gBAAAA,EAAA,IAaME,EAAUC,SAAAA,GAAA5Q,EAAA2Q,EAAS1B,EAAU,SAAnB,IAAAE,EAAA/O,EAAAuQ,GAKd,SAAAA,EAAYE,EAAOC,GAAS,IAAAzB,EAgC1B,GAhC0B9O,EAAAoQ,KAAAA,IAC1BtB,EAAAF,EAAA1O,KAAA,OAKKkN,GAKL0B,EAAKtC,KAKLsC,EAAKvB,GAELgD,EAAUA,GAAW,GAMrBzB,EAAK0B,UAAYD,EAAQE,OAMzB3B,EAAK4B,OAASJ,GAAgB,GAE1BxB,EAAK0B,QACP,IAAK,IAAIjO,EAAI,EAAGyI,EAAK8D,EAAK4B,OAAO3O,OAAQQ,EAAIyI,IAAMzI,EACjDuM,EAAK6B,cAAc7B,EAAK4B,OAAOnO,GAAIA,GAIlB,OAArBuM,EAAK8B,gBAAgB9B,EA8MtB,OA3MD1O,EAAAgQ,EAAA,CAAA,CAAAvP,IAAA,QAAAC,MAIA,WACE,KAAO,KAAK+P,YAAc,GACxB,KAAKC,QAIT,CAAAjQ,IAAA,SAAAC,MAOA,SAAOsB,GACL,IAAK,IAAIG,EAAI,EAAGyI,EAAK5I,EAAIL,OAAQQ,EAAIyI,IAAMzI,EACzC,KAAKkI,KAAKrI,EAAIG,IAEhB,OAAO,OAGT,CAAA1B,IAAA,UAAAC,MAOA,SAAQiQ,GAEN,IADA,IAAMT,EAAQ,KAAKI,OACVnO,EAAI,EAAGyI,EAAKsF,EAAMvO,OAAQQ,EAAIyI,IAAMzI,EAC3CwO,EAAET,EAAM/N,GAAIA,EAAG+N,KAInB,CAAAzP,IAAA,WAAAC,MAQA,WACE,OAAO,KAAK4P,SAGd,CAAA7P,IAAA,OAAAC,MAMA,SAAK8C,GACH,OAAO,KAAK8M,OAAO9M,KAGrB,CAAA/C,IAAA,YAAAC,MAMA,WACE,OAAO,KAAKkQ,IAAIhB,EAASC,UAG3B,CAAApP,IAAA,WAAAC,MAMA,SAAS8C,EAAOqN,GACd,GAAIrN,EAAQ,GAAKA,EAAQ,KAAKiN,YAC5B,MAAM,IAAIlR,MAAM,wBAA0BiE,GAExC,KAAK4M,SACP,KAAKG,cAAcM,GAErB,KAAKP,OAAOrN,OAAOO,EAAO,EAAGqN,GAC7B,KAAKL,gBACL,KAAKlD,cACH,IAAIwC,EAAgBgB,EAAmB,QAACvB,IAAKsB,EAAMrN,MAIvD,CAAA/C,IAAA,MAAAC,MAMA,WACE,OAAO,KAAKqQ,SAAS,KAAKN,YAAc,KAG1C,CAAAhQ,IAAA,OAAAC,MAMA,SAAKmQ,GACC,KAAKT,SACP,KAAKG,cAAcM,GAErB,IAAM3O,EAAI,KAAKuO,YAEf,OADA,KAAKO,SAAS9O,EAAG2O,GACV,KAAKJ,cAGd,CAAAhQ,IAAA,SAAAC,MAMA,SAAOmQ,GAEL,IADA,IAAM7O,EAAM,KAAKsO,OACRnO,EAAI,EAAGyI,EAAK5I,EAAIL,OAAQQ,EAAIyI,IAAMzI,EACzC,GAAIH,EAAIG,KAAO0O,EACb,OAAO,KAAKE,SAAS5O,KAM3B,CAAA1B,IAAA,WAAAC,MAOA,SAAS8C,GACP,KAAIA,EAAQ,GAAKA,GAAS,KAAKiN,aAA/B,CAGA,IAAMQ,EAAO,KAAKX,OAAO9M,GAQzB,OAPA,KAAK8M,OAAOrN,OAAOO,EAAO,GAC1B,KAAKgN,gBACL,KAAKlD,cAED,IAAIwC,EAAgBgB,EAAmB,QAACtB,OAAQyB,EAAMzN,IAGnDyN,KAGT,CAAAxQ,IAAA,QAAAC,MAMA,SAAM8C,EAAOqN,GAEX,GAAIrN,GADM,KAAKiN,YAEb,KAAKO,SAASxN,EAAOqN,OADvB,CAIA,GAAIrN,EAAQ,EACV,MAAM,IAAIjE,MAAM,wBAA0BiE,GAExC,KAAK4M,SACP,KAAKG,cAAcM,EAAMrN,GAE3B,IAAMyN,EAAO,KAAKX,OAAO9M,GACzB,KAAK8M,OAAO9M,GAASqN,EACrB,KAAKvD,cAED,IAAIwC,EAAgBgB,EAAmB,QAACtB,OAAQyB,EAAMzN,IAG1D,KAAK8J,cAED,IAAIwC,EAAgBgB,EAAmB,QAACvB,IAAKsB,EAAMrN,OAKzD,CAAA/C,IAAA,gBAAAC,MAGA,WACE,KAAK2O,IAAIO,EAASC,OAAQ,KAAKS,OAAO3O,UAGxC,CAAAlB,IAAA,gBAAAC,MAKA,SAAcmQ,EAAMK,GAClB,IAAK,IAAI/O,EAAI,EAAGyI,EAAK,KAAK0F,OAAO3O,OAAQQ,EAAIyI,IAAMzI,EACjD,GAAI,KAAKmO,OAAOnO,KAAO0O,GAAQ1O,IAAM+O,EACnC,MAAM,IAAI/R,EAAc,QAAC,QAG9B6Q,EAzPaC,GAAmBhQ,EA4PpB+P,EAAU9P,QAAAC,QAAAF;;AC3TzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAVA,IAAAwP,EAAA3J,EAAA5B,QAAA,wBAAiD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAM1C,SAASoO,EAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAIjS,EAAc,QAACkS;;ACkUP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAAA,QAAA,aAAA,EA1UtB,IAAA3B,EAAA5J,EAAA5B,QAAA,gBACAyI,EAAA7G,EAAA5B,QAAA,0BACAoN,EAAApN,QAAA,gBACA0I,EAAA1I,QAAA,eAAkD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAuBlD,IA6CMqJ,EAAOtB,SAAAA,GAAA5Q,EAAAkS,EAASjD,EAAU,SAAnB,IAAA9O,EAAAC,EAAA8R,GAOX,SAAAA,EAAYC,GAAsB,IAAA7R,EAmDhC,GAnDgCC,EAAA2R,KAAAA,IAChC5R,EAAAH,EAAAM,KAAA,OAKKkN,GAKLrN,EAAKyM,KAKLzM,EAAKwN,GAMLxN,EAAK8R,SAAM7J,EAMXjI,EAAK+R,cAAgB,WAOrB/R,EAAKgS,OAAS,KAMdhS,EAAKiS,oBAAiBhK,EAMtBjI,EAAKkS,mBAAqB,KAE1BlS,EAAKmS,kBAAkBnS,EAAK+R,cAAe/R,EAAKoS,wBAE5CP,EACF,GAGQ,mBADcA,EAAsBQ,sBAE1C,CACA,IAAMC,EAAoCT,EAC1C7R,EAAKuS,YAAYD,OACZ,CAEL,IAAME,EAAaX,EACnB7R,EAAKiP,cAAcuD,GAEtB,OAAAxS,EA8JF,OA3JDK,EAAAuR,EAAA,CAAA,CAAA9Q,IAAA,QAAAC,MAMA,WACE,IAAM0R,EACJ,IAAIb,EAAQ,KAAKc,gBAAkB,KAAKC,gBAAkB,MAE5DF,EAAMG,gBAAgB,KAAKC,mBAC3B,IAAMP,EAAW,KAAKQ,cAClBR,GACFG,EAAMF,YAAqCD,EAASG,SAEtD,IAAMM,EAAQ,KAAKC,WAInB,OAHID,GACFN,EAAMQ,SAASF,GAEVN,IAGT,CAAA3R,IAAA,cAAAC,MAQA,WACE,OAA0C,KAAKkQ,IAAI,KAAKc,iBAG1D,CAAAjR,IAAA,QAAAC,MAOA,WACE,OAAO,KAAK+Q,MAGd,CAAAhR,IAAA,kBAAAC,MAOA,WACE,OAAO,KAAKgR,gBAGd,CAAAjR,IAAA,WAAAC,MAMA,WACE,OAAO,KAAKiR,SAGd,CAAAlR,IAAA,mBAAAC,MAMA,WACE,OAAO,KAAKkR,iBAGd,CAAAnR,IAAA,wBAAAC,MAGA,WACE,KAAKmS,YAGP,CAAApS,IAAA,yBAAAC,MAGA,WACM,KAAKmR,sBACP,EAAApF,EAAa,eAAC,KAAKoF,oBACnB,KAAKA,mBAAqB,MAE5B,IAAMI,EAAW,KAAKQ,cAClBR,IACF,KAAKJ,oBAAqB,EAAA3F,EAAM,QAC9B+F,EACA1E,EAAS,QAACtC,OACV,KAAK6H,sBACL,OAGJ,KAAKD,YAGP,CAAApS,IAAA,cAAAC,MAOA,SAAYuR,GACV,KAAK5C,IAAI,KAAKqC,cAAeO,KAG/B,CAAAxR,IAAA,WAAAC,MASA,SAASgS,GACP,KAAKf,OAASe,EACd,KAAKd,eAAkBc,EAAoBK,EAAoBL,QAAhC9K,EAC/B,KAAKiL,YAGP,CAAApS,IAAA,QAAAC,MASA,SAAMsS,GACJ,KAAKvB,IAAMuB,EACX,KAAKH,YAGP,CAAApS,IAAA,kBAAAC,MAOA,SAAgBX,GACd,KAAKkT,qBAAqB,KAAKvB,cAAe,KAAKK,wBACnD,KAAKL,cAAgB3R,EACrB,KAAK+R,kBAAkB,KAAKJ,cAAe,KAAKK,wBAChD,KAAKA,6BACNR,EArOUtB,GAgPN,SAAS8C,EAAoBhQ,GAClC,GAAmB,mBAARA,EACT,OAAOA,EAKT,IAAImQ,EACAtQ,MAAMC,QAAQE,GAChBmQ,EAASnQ,IAET,EAAAoO,EAAM,QAA+C,mBAApBpO,EAAKoQ,UAA2B,IAEjED,EAAS,CADwDnQ,IAGnE,OAAO,WACL,OAAOmQ,GAEV,IAAAjT,EACcsR,EAAOrR,QAAAC,QAAAF;;ACtPjB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,QAAA,OAAA,QAAA,kBAAA,QAAA,OAAA,QAAA,wBAAA,QAAA,IAAA,QAAA,aAAA,QAAA,QAAA,QAAA,wBAAA,EAnFL,IAAMmT,EACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,EAAUJ,EAAGhJ,SAAS,WAEnClK,QAAAsT,QAAAA,EAIO,IAAMC,EAASL,EAAGhJ,SAAS,YAAcgJ,EAAGhJ,SAAS,SAE5DlK,QAAAuT,OAAAA,EAIO,IAAMC,EACXD,IACCL,EAAGhJ,SAAS,iBACX,wCAAwCuJ,KAAKP,IAEjDlT,QAAAwT,kBAAAA,EAIO,IAAME,EAASR,EAAGhJ,SAAS,YAAcgJ,EAAGhJ,SAAS,QAE5DlK,QAAA0T,OAAAA,EAIO,IAAMC,EAAMT,EAAGhJ,SAAS,aAE/BlK,QAAA2T,IAAAA,EAOO,IAAMC,EACiB,oBAArBC,iBAAmCA,iBAAmB,EAE/D7T,QAAA4T,mBAAAA,EAKO,IAAME,EACkB,oBAAtBC,mBACoB,oBAApBC,iBACPhL,gBAAgB+K,kBAElB/T,QAAA8T,wBAAAA,EAIO,IAAMG,EACM,oBAAVC,OAAyBA,MAAMvP,UAAUwP,OAElDnU,QAAAiU,aAAAA,EAGO,IAAMG,EAA2B,WACtC,IAAIC,GAAU,EACd,IACE,IAAMpE,EAAUnJ,OAAOC,eAAe,GAAI,UAAW,CACnD2J,IAAK,WACH2D,GAAU,KAIdC,OAAOjI,iBAAiB,IAAK,KAAM4D,GACnCqE,OAAOzJ,oBAAoB,IAAK,KAAMoF,GACtC,MAAOsE,IAGT,OAAOF,EAd+B,GAenCrU,QAAAoU,wBAAAA;;ACyML,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,QAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,OAAA,EAAA,QAAA,YAAA,EAAA,QAAA,OAAA,EAAA,QAAA,YAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,EAAA,QAAA,MAAA,EAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EAAA,QAAA,aAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EA7RA,IA4QII,EA5QJC,EAAAzQ,QAAA,YACAoN,EAAApN,QAAA,gBAyBM0Q,EAAO,IAAIhS,MAAM,GAMhB,SAASoF,IACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAQlB,SAAS6M,EAAMC,GACpB,OAAOzF,EAAIyF,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GAUhC,SAASC,EAASC,EAAYC,GACnC,IAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,EAcF,SAAS3F,EAAIyF,EAAWjT,EAAGC,EAAGgU,EAAGC,EAAGvM,EAAGmH,GAO5C,OANAmE,EAAU,GAAKjT,EACfiT,EAAU,GAAKhT,EACfgT,EAAU,GAAKgB,EACfhB,EAAU,GAAKiB,EACfjB,EAAU,GAAKtL,EACfsL,EAAU,GAAKnE,EACRmE,EASF,SAASkB,EAAahB,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,EAYF,SAAS/P,EAAM6P,EAAWmB,GAC/B,IAAMC,EAAID,EAAW,GACfE,EAAIF,EAAW,GAGrB,OAFAA,EAAW,GAAKnB,EAAU,GAAKoB,EAAIpB,EAAU,GAAKqB,EAAIrB,EAAU,GAChEmB,EAAW,GAAKnB,EAAU,GAAKoB,EAAIpB,EAAU,GAAKqB,EAAIrB,EAAU,GACzDmB,EASF,SAASG,EAAOtB,EAAWuB,GAChC,IAAMC,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,GACrB,OAAOtB,EAASD,EAAWzF,EAAIuF,EAAM0B,EAAKE,GAAMA,EAAKF,EAAK,EAAG,IAUxD,SAASG,EAAM3B,EAAWoB,EAAGC,GAClC,OAAOpB,EAASD,EAAWzF,EAAIuF,EAAMsB,EAAG,EAAG,EAAGC,EAAG,EAAG,IAU/C,SAASO,EAAUlW,EAAQ0V,EAAGC,GACnC,OAAO9G,EAAI7O,EAAQ0V,EAAG,EAAG,EAAGC,EAAG,EAAG,GAU7B,SAASQ,EAAU7B,EAAW8B,EAAIC,GACvC,OAAO9B,EAASD,EAAWzF,EAAIuF,EAAM,EAAG,EAAG,EAAG,EAAGgC,EAAIC,IAgBhD,SAASC,EAAQhC,EAAWiC,EAAKC,EAAKC,EAAIC,EAAIb,EAAOc,EAAKC,GAC/D,IAAMZ,EAAMD,KAAKC,IAAIH,GACfC,EAAMC,KAAKD,IAAID,GAOrB,OANAvB,EAAU,GAAKmC,EAAKX,EACpBxB,EAAU,GAAKoC,EAAKV,EACpB1B,EAAU,IAAMmC,EAAKT,EACrB1B,EAAU,GAAKoC,EAAKZ,EACpBxB,EAAU,GAAKqC,EAAMF,EAAKX,EAAMc,EAAMH,EAAKT,EAAMO,EACjDjC,EAAU,GAAKqC,EAAMD,EAAKV,EAAMY,EAAMF,EAAKZ,EAAMU,EAC1ClC,EAiBF,SAASuC,EAAoBN,EAAKC,EAAKC,EAAIC,EAAIb,EAAOc,EAAKC,GAChE,OAAOE,EAASR,EAAQ9O,IAAU+O,EAAKC,EAAKC,EAAIC,EAAIb,EAAOc,EAAKC,IAQ3D,SAASG,EAAOjI,GACrB,OAAOkI,EAAYlI,EAAQA,GAUtB,SAASkI,EAAYhX,EAAQ8O,GAClC,IAAMmI,EAAMC,EAAYpI,IACxB,EAAA6B,EAAM,QAAS,IAARsG,EAAW,IAElB,IAAM5V,EAAIyN,EAAO,GACXxN,EAAIwN,EAAO,GACXwG,EAAIxG,EAAO,GACXyG,EAAIzG,EAAO,GACX9F,EAAI8F,EAAO,GACXqB,EAAIrB,EAAO,GASjB,OAPA9O,EAAO,GAAKuV,EAAI0B,EAChBjX,EAAO,IAAMsB,EAAI2V,EACjBjX,EAAO,IAAMsV,EAAI2B,EACjBjX,EAAO,GAAKqB,EAAI4V,EAChBjX,EAAO,IAAMsV,EAAInF,EAAIoF,EAAIvM,GAAKiO,EAC9BjX,EAAO,KAAOqB,EAAI8O,EAAI7O,EAAI0H,GAAKiO,EAExBjX,EAQF,SAASkX,EAAYC,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAejC,SAASL,EAASK,GACvB,IAAMC,EAAkB,UAAYD,EAAIE,KAAK,MAAQ,IACrD,GAAI7D,EAAuB,wBACzB,OAAO4D,EAET,IAAME,EACJpD,IAAuBA,EAAqBqD,SAASC,cAAc,QAErE,OADAF,EAAKpF,MAAMoC,UAAY8C,EAChBE,EAAKpF,MAAMoC;;AChRnB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAXD,IAAA7U,EAIe,CACbgY,QAAS,EACTC,aAAc,EACdC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAM,IACPpY,QAAAC,QAAAF;;AC24BD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,GAAA,QAAA,oBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,WAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,YAAA,EAAA,QAAA,eAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,6BAAA,EAAA,QAAA,8BAAA,EAAA,QAAA,kCAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,sBAAA,EAAA,QAAA,YAAA,EAAA,QAAA,SAAA,EAAA,QAAA,cAAA,EAAA,QAAA,QAAA,EAAA,QAAA,cAAA,EAAA,QAAA,eAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,QAAA,EAAA,QAAA,WAAA,EAAA,QAAA,YAAA,EAAA,QAAA,SAAA,EAAA,QAAA,WAAA,EAAA,QAAA,kBAAA,GAAA,QAAA,QAAA,EAAA,QAAA,eAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,cAAA,GAAA,QAAA,MAAA,GAv5BA,IAAAsY,EAAAzS,EAAA5B,QAAA,6BACAoN,EAAApN,QAAA,gBAAoC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAyV,EAAAxW,EAAAG,GAAAsW,OAAAA,EAAAzW,IAAA0W,EAAA1W,EAAAG,IAAAwW,EAAA3W,EAAAG,IAAAyW,IAAA,SAAAA,IAAAnS,MAAAA,IAAAA,UAAA,6IAAA,SAAAkS,EAAAzQ,EAAA2Q,GAAA3Q,GAAAA,EAAAA,CAAAA,GAAA4Q,iBAAA5Q,EAAA4Q,OAAAA,EAAA5Q,EAAA2Q,GAAA3W,IAAAA,EAAA8E,OAAAnC,UAAAyS,SAAAxX,KAAAoI,GAAApD,MAAA5C,GAAAA,GAAAA,MAAAgG,WAAAhG,GAAAgG,EAAA5B,cAAApE,EAAAgG,EAAA5B,YAAAvG,MAAAmC,QAAAA,GAAAU,QAAAV,EAAAU,MAAAmW,KAAA7Q,GAAAyL,cAAAzR,GAAAyR,2CAAAA,KAAAzR,GAAA4W,EAAA5Q,EAAA2Q,QAAA3W,GAAA,SAAA4W,EAAA9W,EAAAwL,IAAAA,MAAAA,GAAAA,EAAAxL,EAAAL,UAAA6L,EAAAxL,EAAAL,QAAAQ,IAAAA,IAAAA,EAAAiB,EAAAA,EAAAR,IAAAA,MAAA4K,GAAArL,EAAAqL,EAAArL,IAAAiB,EAAAjB,GAAAH,EAAAG,GAAAiB,OAAAA,EAAA,SAAAsV,EAAA1W,EAAAG,GAAA6W,IAAAA,EAAAhX,MAAAA,EAAAoE,KAAAA,oBAAAA,QAAApE,EAAAoE,OAAAC,WAAArE,EAAAgX,cAAAA,GAAAA,MAAAA,EAAAC,CAAAA,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAA,GAAAC,EAAAA,GAAAJ,EAAAA,IAAAA,GAAAA,GAAAH,EAAAA,EAAAlZ,KAAAkC,IAAAwX,KAAArX,IAAAA,EAAA6E,CAAAA,GAAAA,OAAAgS,KAAAA,EAAAM,OAAAA,GAAAA,OAAAA,OAAAA,GAAAL,EAAAE,EAAArZ,KAAAkZ,IAAAS,QAAAJ,EAAAhP,KAAA4O,EAAAvY,OAAA2Y,EAAA1X,SAAAQ,GAAAmX,GAAAlU,IAAAA,MAAAA,GAAAmU,GAAAL,EAAAA,EAAA9T,EAAAkU,QAAAA,IAAAA,IAAAA,GAAAN,MAAAA,EAAAU,SAAAN,EAAAJ,EAAAU,SAAA1S,OAAAoS,KAAAA,GAAAG,OAAAA,QAAAA,GAAAA,EAAAL,MAAAA,GAAAG,OAAAA,GAAA,SAAAZ,EAAAzW,GAAAY,GAAAA,MAAAC,QAAAb,GAAAA,OAAAA,EAoB7B,SAAS2X,EAAeC,GAE7B,IADA,IAAMC,EAASC,IACN3X,EAAI,EAAGyI,EAAKgP,EAAYjY,OAAQQ,EAAIyI,IAAMzI,EACjD4X,EAAiBF,EAAQD,EAAYzX,IAEvC,OAAO0X,EAUT,SAASG,EAAmBC,EAAIC,EAAIC,GAKlC,OAAOC,EAJM7D,KAAK8D,IAAIpV,MAAM,KAAMgV,GACrB1D,KAAK8D,IAAIpV,MAAM,KAAMiV,GACrB3D,KAAK+D,IAAIrV,MAAM,KAAMgV,GACrB1D,KAAK+D,IAAIrV,MAAM,KAAMiV,GACYC,GAWzC,SAASI,EAAOV,EAAQnZ,EAAOyZ,GACpC,OAAIA,GACFA,EAAK,GAAKN,EAAO,GAAKnZ,EACtByZ,EAAK,GAAKN,EAAO,GAAKnZ,EACtByZ,EAAK,GAAKN,EAAO,GAAKnZ,EACtByZ,EAAK,GAAKN,EAAO,GAAKnZ,EACfyZ,GAEF,CACLN,EAAO,GAAKnZ,EACZmZ,EAAO,GAAKnZ,EACZmZ,EAAO,GAAKnZ,EACZmZ,EAAO,GAAKnZ,GAWT,SAAS0R,EAAMyH,EAAQM,GAC5B,OAAIA,GACFA,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACVM,GAEFN,EAAO/U,QAST,SAAS0V,EAAyBX,EAAQ3D,EAAGC,GAClD,IAAIS,EAAIC,EAeR,OAbED,EADEV,EAAI2D,EAAO,GACRA,EAAO,GAAK3D,EACR2D,EAAO,GAAK3D,EAChBA,EAAI2D,EAAO,GAEX,GASKjD,GANVC,EADEV,EAAI0D,EAAO,GACRA,EAAO,GAAK1D,EACR0D,EAAO,GAAK1D,EAChBA,EAAI0D,EAAO,GAEX,GAEehD,EAWjB,SAAS4D,EAAmBZ,EAAQ5D,GACzC,OAAOyE,EAAWb,EAAQ5D,EAAW,GAAIA,EAAW,IAe/C,SAAS0E,EAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,GAanB,SAASF,EAAWb,EAAQ3D,EAAGC,GACpC,OAAO0D,EAAO,IAAM3D,GAAKA,GAAK2D,EAAO,IAAMA,EAAO,IAAM1D,GAAKA,GAAK0D,EAAO,GAUpE,SAASiB,EAAuBjB,EAAQ5D,GAC7C,IAAM8E,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACd3D,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjBkF,EAAeC,EAAY,QAACnD,QAchC,OAbI/B,EAAI6E,EACNI,GAA8BC,EAAY,QAAC9C,KAClCpC,EAAI+E,IACbE,GAA8BC,EAAY,QAAChD,OAEzCjC,EAAI6E,EACNG,GAA8BC,EAAY,QAAC/C,MAClClC,EAAI+E,IACbC,GAA8BC,EAAY,QAACjD,OAEzCgD,IAAiBC,EAAY,QAACnD,UAChCkD,EAAeC,EAAY,QAAClD,cAEvBiD,EAQF,SAASrB,IACd,MAAO,CAACuB,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,GAYnC,SAASjB,EAAeW,EAAMC,EAAMC,EAAMC,EAAMf,GACrD,OAAIA,GACFA,EAAK,GAAKY,EACVZ,EAAK,GAAKa,EACVb,EAAK,GAAKc,EACVd,EAAK,GAAKe,EACHf,GAEF,CAACY,EAAMC,EAAMC,EAAMC,GAQrB,SAASI,EAAoBnB,GAClC,OAAOC,EAAeiB,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUlB,GAQ3D,SAASoB,EAA6BtF,EAAYkE,GACvD,IAAMjE,EAAID,EAAW,GACfE,EAAIF,EAAW,GACrB,OAAOmE,EAAelE,EAAGC,EAAGD,EAAGC,EAAGgE,GAQ7B,SAASqB,EAA8B5B,EAAaO,GAEzD,OAAOsB,EADQH,EAAoBnB,GACFP,GAW5B,SAAS8B,EACdC,EACAC,EACArZ,EACAsZ,EACA1B,GAGA,OAAO2B,EADQR,EAAoBnB,GACEwB,EAAiBC,EAAQrZ,EAAKsZ,GAQ9D,SAASE,EAAwBC,EAAO7B,GAE7C,OAAO8B,EADQX,EAAoBnB,GACR6B,GAUtB,SAAS9Y,EAAO0X,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GAWnB,SAASqB,EAAoBtB,EAASC,EAASsB,GACpD,OACE5F,KAAK6F,IAAIxB,EAAQ,GAAKC,EAAQ,IAAMsB,GACpC5F,KAAK6F,IAAIxB,EAAQ,GAAKC,EAAQ,IAAMsB,GACpC5F,KAAK6F,IAAIxB,EAAQ,GAAKC,EAAQ,IAAMsB,GACpC5F,KAAK6F,IAAIxB,EAAQ,GAAKC,EAAQ,IAAMsB,EAWjC,SAAS1Z,EAAOmY,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,EAOF,SAASb,EAAiBF,EAAQ5D,GACnCA,EAAW,GAAK4D,EAAO,KACzBA,EAAO,GAAK5D,EAAW,IAErBA,EAAW,GAAK4D,EAAO,KACzBA,EAAO,GAAK5D,EAAW,IAErBA,EAAW,GAAK4D,EAAO,KACzBA,EAAO,GAAK5D,EAAW,IAErBA,EAAW,GAAK4D,EAAO,KACzBA,EAAO,GAAK5D,EAAW,IASpB,SAASwF,EAAkB5B,EAAQD,GACxC,IAAK,IAAIzX,EAAI,EAAGyI,EAAKgP,EAAYjY,OAAQQ,EAAIyI,IAAMzI,EACjD4X,EAAiBF,EAAQD,EAAYzX,IAEvC,OAAO0X,EAWF,SAASiC,EACdjC,EACA8B,EACAC,EACArZ,EACAsZ,GAEA,KAAOD,EAASrZ,EAAKqZ,GAAUC,EAC7BQ,EAASxC,EAAQ8B,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAO/B,EAQF,SAASoC,EAAYpC,EAAQmC,GAClC,IAAK,IAAI7Z,EAAI,EAAGyI,EAAKoR,EAAMra,OAAQQ,EAAIyI,IAAMzI,EAC3CsZ,EAAkB5B,EAAQmC,EAAM7Z,IAElC,OAAO0X,EAQF,SAASwC,EAASxC,EAAQ3D,EAAGC,GAClC0D,EAAO,GAAKtD,KAAK8D,IAAIR,EAAO,GAAI3D,GAChC2D,EAAO,GAAKtD,KAAK8D,IAAIR,EAAO,GAAI1D,GAChC0D,EAAO,GAAKtD,KAAK+D,IAAIT,EAAO,GAAI3D,GAChC2D,EAAO,GAAKtD,KAAK+D,IAAIT,EAAO,GAAI1D,GAY3B,SAASmG,EAAczC,EAAQ0C,GACpC,IAAIC,EAEJ,OADAA,EAAMD,EAASE,EAAc5C,KAEpB2C,GAETA,EAAMD,EAASG,EAAe7C,KAErB2C,GAETA,EAAMD,EAASI,EAAY9C,KAElB2C,GAETA,EAAMD,EAASK,EAAW/C,OAInB,EASF,SAASgD,EAAQhD,GACtB,IAAIiD,EAAO,EAIX,OAHKlX,EAAQiU,KACXiD,EAAOC,EAASlD,GAAUmD,EAAUnD,IAE/BiD,EASF,SAASL,EAAc5C,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,IASrB,SAAS6C,EAAe7C,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,IASrB,SAASoD,EAAUpD,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GAS1D,SAASqD,EAAUrD,EAAQsD,GAChC,IAAIlH,EAYJ,MAXe,gBAAXkH,EACFlH,EAAawG,EAAc5C,GACP,iBAAXsD,EACTlH,EAAayG,EAAe7C,GACR,aAAXsD,EACTlH,EAAa2G,EAAW/C,GACJ,cAAXsD,EACTlH,EAAa0G,EAAY9C,IAEzB,EAAA1I,EAAM,SAAC,EAAO,IAET8E,EAQF,SAASmH,EAAgBxC,EAASC,GACvC,IAAME,EAAOxE,KAAK8D,IAAIO,EAAQ,GAAIC,EAAQ,IACpCG,EAAOzE,KAAK8D,IAAIO,EAAQ,GAAIC,EAAQ,IAG1C,OAFatE,KAAK+D,IAAIM,EAAQ,GAAIC,EAAQ,IAE3BE,IADFxE,KAAK+D,IAAIM,EAAQ,GAAIC,EAAQ,IACXG,GAW1B,SAASqC,EAAkBC,EAAQC,EAAYC,EAAUC,EAAMtD,GACpE,IAKCuD,EAAAlF,EALwCmF,EACvCL,EACAC,EACAC,EACAC,GACD,GALMG,EAAEF,EAAA,GAAEG,EAAEH,EAAA,GAAEI,EAAEJ,EAAA,GAAEK,EAAEL,EAAA,GAAEM,EAAEN,EAAA,GAAEO,EAAEP,EAAA,GAAEQ,EAAER,EAAA,GAAES,EAAET,EAAA,GAMrC,OAAOtD,EACL7D,KAAK8D,IAAIuD,EAAIE,EAAIE,EAAIE,GACrB3H,KAAK8D,IAAIwD,EAAIE,EAAIE,EAAIE,GACrB5H,KAAK+D,IAAIsD,EAAIE,EAAIE,EAAIE,GACrB3H,KAAK+D,IAAIuD,EAAIE,EAAIE,EAAIE,GACrBhE,GAWG,SAASwD,EAAmBL,EAAQC,EAAYC,EAAUC,GAC/D,IAAM7G,EAAM2G,EAAaE,EAAK,GAAM,EAC9B5G,EAAM0G,EAAaE,EAAK,GAAM,EAC9BW,EAAc7H,KAAKD,IAAIkH,GACvBa,EAAc9H,KAAKC,IAAIgH,GACvBc,EAAO1H,EAAKwH,EACZG,EAAO3H,EAAKyH,EACZG,EAAO3H,EAAKuH,EACZK,EAAO5H,EAAKwH,EACZnI,EAAIoH,EAAO,GACXnH,EAAImH,EAAO,GACjB,MAAO,CACLpH,EAAIoI,EAAOG,EACXtI,EAAIoI,EAAOC,EACXtI,EAAIoI,EAAOG,EACXtI,EAAIoI,EAAOC,EACXtI,EAAIoI,EAAOG,EACXtI,EAAIoI,EAAOC,EACXtI,EAAIoI,EAAOG,EACXtI,EAAIoI,EAAOC,EACXtI,EAAIoI,EAAOG,EACXtI,EAAIoI,EAAOC,GAUR,SAASxB,EAAUnD,GACxB,OAAOA,EAAO,GAAKA,EAAO,GAQrB,SAAS6E,EAAoB9D,EAASC,GAE3C,OAAOgC,EADc8B,EAAgB/D,EAASC,IAYzC,SAAS8D,EAAgB/D,EAASC,EAASV,GAChD,IAAMyE,EAAezE,GAAcL,IAyBnC,OAxBI+E,EAAWjE,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB+D,EAAa,GAAKhE,EAAQ,GAE1BgE,EAAa,GAAK/D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB+D,EAAa,GAAKhE,EAAQ,GAE1BgE,EAAa,GAAK/D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB+D,EAAa,GAAKhE,EAAQ,GAE1BgE,EAAa,GAAK/D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB+D,EAAa,GAAKhE,EAAQ,GAE1BgE,EAAa,GAAK/D,EAAQ,IAG5BS,EAAoBsD,GAEfA,EAOF,SAASE,EAAUjF,GACxB,OAAOkD,EAASlD,GAAUmD,EAAUnD,GAS/B,SAASkF,EAAQlF,GACtB,MAAO,CAACA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,IAS7C,SAAS+C,EAAW/C,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,IASrB,SAAS8C,EAAY9C,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,IASrB,SAASkD,EAASlD,GACvB,OAAOA,EAAO,GAAKA,EAAO,GAUrB,SAASgF,EAAWjE,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GAUnB,SAASjV,EAAQiU,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAQ9C,SAASmF,EAAenF,EAAQM,GACrC,OAAIA,GACFA,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACjBM,EAAK,GAAKN,EAAO,GACVM,GAEFN,EAOF,SAASoF,EAAgBpF,EAAQnZ,GACtC,IAAMwe,GAAWrF,EAAO,GAAKA,EAAO,IAAM,GAAMnZ,EAAQ,GAClDye,GAAWtF,EAAO,GAAKA,EAAO,IAAM,GAAMnZ,EAAQ,GACxDmZ,EAAO,IAAMqF,EACbrF,EAAO,IAAMqF,EACbrF,EAAO,IAAMsF,EACbtF,EAAO,IAAMsF,EAWR,SAASC,GAAkBvF,EAAQwF,EAAO9c,GAC/C,IAAIsc,GAAa,EACXS,EAAWxE,EAAuBjB,EAAQwF,GAC1CE,EAASzE,EAAuBjB,EAAQtX,GAC9C,GACE+c,IAAalE,EAAY,QAAClD,cAC1BqH,IAAWnE,EAAY,QAAClD,aAExB2G,GAAa,MACR,CACL,IASI3I,EAAGC,EATD4E,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACd2F,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAOnd,EAAI,GACXod,EAAOpd,EAAI,GACXqd,GAASD,EAAOF,IAAWC,EAAOF,GAEjCD,EAASnE,EAAY,QAACjD,SAAYmH,EAAWlE,EAAY,QAACjD,SAG/D0G,GADA3I,EAAIwJ,GAAQC,EAAOzE,GAAQ0E,IACT7E,GAAQ7E,GAAK+E,GAG9B4D,KACEU,EAASnE,EAAY,QAAChD,QACvBkH,EAAWlE,EAAY,QAAChD,QAI1ByG,GADA1I,EAAIwJ,GAAQD,EAAOzE,GAAQ2E,IACT5E,GAAQ7E,GAAK+E,GAG9B2D,KACEU,EAASnE,EAAY,QAAC/C,QACvBiH,EAAWlE,EAAY,QAAC/C,QAI1BwG,GADA3I,EAAIwJ,GAAQC,EAAO3E,GAAQ4E,IACT7E,GAAQ7E,GAAK+E,GAG9B4D,KACEU,EAASnE,EAAY,QAAC9C,OACvBgH,EAAWlE,EAAY,QAAC9C,OAI1BuG,GADA1I,EAAIwJ,GAAQD,EAAO3E,GAAQ6E,IACT5E,GAAQ7E,GAAK+E,GAGnC,OAAO2D,EAcF,SAASgB,GAAehG,EAAQiG,EAAa3F,EAAM4F,GACxD,GAAIna,EAAQiU,GACV,OAAOyB,EAAoBnB,GAE7B,IAAIP,EAAc,GAClB,GAAImG,EAAQ,EAGV,IAFA,IAAMC,EAAQnG,EAAO,GAAKA,EAAO,GAC3BoG,EAASpG,EAAO,GAAKA,EAAO,GACzB1X,EAAI,EAAGA,EAAI4d,IAAS5d,EAC3ByX,EAAYvP,KACVwP,EAAO,GAAMmG,EAAQ7d,EAAK4d,EAC1BlG,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMoG,EAAS9d,EAAK4d,EAC3BlG,EAAO,GAAMmG,EAAQ7d,EAAK4d,EAC1BlG,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMoG,EAAS9d,EAAK4d,QAI/BnG,EAAc,CACZC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXiG,EAAYlG,EAAaA,EAAa,GAGtC,IAFA,IAAMK,EAAK,GACLC,EAAK,GACF/X,EAAI,EAAG+d,EAAItG,EAAYjY,OAAQQ,EAAI+d,EAAG/d,GAAK,EAClD8X,EAAG5P,KAAKuP,EAAYzX,IACpB+X,EAAG7P,KAAKuP,EAAYzX,EAAI,IAE1B,OAAO6X,EAAmBC,EAAIC,EAAIC,GAW7B,SAASgG,GAAMtG,EAAQuG,GAC5B,IAAMC,EAAmBD,EAAWE,YAC9BhD,EAASL,EAAUpD,GACzB,GACEuG,EAAWG,aACVjD,EAAO,GAAK+C,EAAiB,IAAM/C,EAAO,IAAM+C,EAAiB,IAClE,CACA,IAAMG,EAAazD,EAASsD,GAItBzE,EAHarF,KAAKkK,OACrBnD,EAAO,GAAK+C,EAAiB,IAAMG,GAEVA,EAC5B3G,EAAO,IAAM+B,EACb/B,EAAO,IAAM+B,EAEf,OAAO/B,EAeF,SAAS6G,GAAc7G,EAAQuG,GACpC,GAAIA,EAAWG,WAAY,CACzB,IAAMF,EAAmBD,EAAWE,YAEpC,IAAKK,SAAS9G,EAAO,MAAQ8G,SAAS9G,EAAO,IAC3C,MAAO,CAAC,CAACwG,EAAiB,GAAIxG,EAAO,GAAIwG,EAAiB,GAAIxG,EAAO,KAGvEsG,GAAMtG,EAAQuG,GACd,IAAMI,EAAazD,EAASsD,GAE5B,GAAItD,EAASlD,GAAU2G,EAErB,MAAO,CAAC,CAACH,EAAiB,GAAIxG,EAAO,GAAIwG,EAAiB,GAAIxG,EAAO,KAEvE,GAAIA,EAAO,GAAKwG,EAAiB,GAE/B,MAAO,CACL,CAACxG,EAAO,GAAK2G,EAAY3G,EAAO,GAAIwG,EAAiB,GAAIxG,EAAO,IAChE,CAACwG,EAAiB,GAAIxG,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAGvD,GAAIA,EAAO,GAAKwG,EAAiB,GAE/B,MAAO,CACL,CAACxG,EAAO,GAAIA,EAAO,GAAIwG,EAAiB,GAAIxG,EAAO,IACnD,CAACwG,EAAiB,GAAIxG,EAAO,GAAIA,EAAO,GAAK2G,EAAY3G,EAAO,KAKtE,MAAO,CAACA;;ACt2BR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,QAAA,SAAA,EAtCF,IAAM+G,EAAa,CACjB,KAAQ,IACR,KAAQ,KACR,KAAQ,QACR,KAAQ,UACR,KAAQ,WAOH,SAASC,EAASnhB,GACvB,OAAOkhB,EAAWlhB,GAkBb,IAAMohB,EAAkB,CAE7B,QAAW,SAAW,EAAIvK,KAAKwK,IAC/B,QAAY,EAAIxK,KAAKwK,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,MAChB7gB,QAAA4gB,gBAAAA;;;AC2NuB,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA3QzB,IAAAE,EAAA9c,QAAA,cAA2C,SAAAiC,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAqB3C,IA2BMyZ,EAAU,WAId,SAAAA,EAAY9Q,GAASvQ,EAAAqhB,KAAAA,GAKnB,KAAKC,MAAQ/Q,EAAQzQ,KASrB,KAAKyhB,OAAoDhR,EAAQiR,MASjE,KAAKC,aAA6BzZ,IAAnBuI,EAAQ0J,OAAuB1J,EAAQ0J,OAAS,KAS/D,KAAKyH,kBACqB1Z,IAAxBuI,EAAQoR,YAA4BpR,EAAQoR,YAAc,KAM5D,KAAKC,sBACyB5Z,IAA5BuI,EAAQsR,gBAAgCtR,EAAQsR,gBAAkB,MAMpE,KAAKC,aAA6B9Z,IAAnBuI,EAAQwR,QAAuBxR,EAAQwR,OAMtD,KAAKC,aAAe,KAAKF,UAAW,KAAKL,SAMzC,KAAKQ,wBAA0B1R,EAAQ2R,mBAMvC,KAAKC,iBAAmB,KAMxB,KAAKC,eAAiB7R,EAAQ8R,cA8I/B,OA3IDjiB,EAAAihB,EAAA,CAAA,CAAAxgB,IAAA,WAAAC,MAGA,WACE,OAAO,KAAKkhB,YAGd,CAAAnhB,IAAA,UAAAC,MAKA,WACE,OAAO,KAAKwgB,QAGd,CAAAzgB,IAAA,YAAAC,MAKA,WACE,OAAO,KAAK2gB,UAGd,CAAA5gB,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKygB,SAGd,CAAA1gB,IAAA,mBAAAC,MAOA,WACE,OAAO,KAAKshB,gBAAkBlB,EAAe,gBAAC,KAAKK,UAGrD,CAAA1gB,IAAA,iBAAAC,MAKA,WACE,OAAO,KAAK4gB,eAGd,CAAA7gB,IAAA,qBAAAC,MAWA,WACE,OAAO,KAAK8gB,mBAGd,CAAA/gB,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKghB,UAGd,CAAAjhB,IAAA,YAAAC,MAKA,SAAUihB,GACR,KAAKD,QAAUC,EACf,KAAKC,aAAeD,IAAU,KAAKN,WAGrC,CAAA5gB,IAAA,qBAAAC,MAGA,WACE,OAAO,KAAKqhB,mBAGd,CAAAthB,IAAA,qBAAAC,MAGA,SAAmBwhB,GACjB,KAAKH,iBAAmBG,IAG1B,CAAAzhB,IAAA,YAAAC,MAKA,SAAUmZ,GACR,KAAKwH,QAAUxH,EACf,KAAK+H,aAAe,KAAKF,UAAW7H,KAGtC,CAAApZ,IAAA,iBAAAC,MAMA,SAAe6gB,GACb,KAAKD,aAAeC,IAGtB,CAAA9gB,IAAA,wBAAAC,MAMA,SAAsBiD,GACpB,KAAKke,wBAA0Ble,IAGjC,CAAAlD,IAAA,yBAAAC,MAKA,WACE,OAAO,KAAKmhB,4BACbZ,EAxNa,GAwNbhhB,EAGYghB,EAAU/gB,QAAAC,QAAAF;;AC1IzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,QAAA,OAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,YAAA,EAAA,QAAA,aAAA,EAAA,QAAA,WAAA,EAjIA,IAAAkiB,EAAArc,EAAA5B,QAAA,oBAAyC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAA2D,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAA5H,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAApH,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAQlC,IAAMka,EAAS,QAEtBliB,QAAAkiB,OAAAA,EAIO,IAAMC,EAAY9L,KAAKwK,GAAKqB,EAEnCliB,QAAAmiB,UAAAA,EAIO,IAAMC,EAAS,EAAED,GAAYA,EAAWA,EAAWA,GAE1DniB,QAAAoiB,OAAAA,EAIO,IAAMC,EAAe,EAAE,KAAM,GAAI,IAAK,IAE7CriB,QAAAqiB,aAAAA,EAKO,IAAMC,EAAaJ,EAAS7L,KAAKkM,IAAIlM,KAAKmM,IAAInM,KAAKwK,GAAK,IAE/D7gB,QAAAsiB,WAAAA,EAAA,IAIMG,EAAkBC,SAAAA,GAAAvjB,EAAAsjB,EAAS1B,EAAU,SAAnB,IAAAzhB,EAAAC,EAAAkjB,GAItB,SAAAA,EAAYjjB,GAAM,OAAAE,EAAA+iB,KAAAA,GAAAnjB,EAAAM,KACV,KAAA,CACJJ,KAAMA,EACN0hB,MAAO,IACPvH,OAAQyI,EACRX,QAAQ,EACRJ,YAAagB,EACbT,mBAAoB,SAAUvE,EAAYsF,GACxC,OAAOtF,EAAahH,KAAKuM,KAAKD,EAAM,GAAKT,MAG9C,OAAApiB,EAAA2iB,GAfqBC,GAwBXG,EAAc,CACzB,IAAIJ,EAAmB,aACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,8CACvB,IAAIA,EAAmB,iDAWlB,SAASK,EAAaxb,EAAOyb,EAAQC,GAC1C,IAAMvhB,EAAS6F,EAAM7F,OACrBuhB,EAAYA,EAAY,EAAIA,EAAY,OACzBtb,IAAXqb,IAGAA,EAFEC,EAAY,EAEL1b,EAAM1C,QAEN,IAAIlC,MAAMjB,IAGvB,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAQQ,GAAK+gB,EAAW,CAC1CD,EAAO9gB,GAAMkgB,EAAY7a,EAAMrF,GAAM,IACrC,IAAIgU,EAAIiM,EAAS7L,KAAKkM,IAAIlM,KAAKmM,IAAKnM,KAAKwK,KAAOvZ,EAAMrF,EAAI,GAAK,IAAO,MAClEgU,EAAIqM,EACNrM,EAAIqM,EACKrM,GAAKqM,IACdrM,GAAKqM,GAEPS,EAAO9gB,EAAI,GAAKgU,EAElB,OAAO8M,EAWF,SAASE,EAAW3b,EAAOyb,EAAQC,GACxC,IAAMvhB,EAAS6F,EAAM7F,OACrBuhB,EAAYA,EAAY,EAAIA,EAAY,OACzBtb,IAAXqb,IAGAA,EAFEC,EAAY,EAEL1b,EAAM1C,QAEN,IAAIlC,MAAMjB,IAGvB,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAQQ,GAAK+gB,EAC/BD,EAAO9gB,GAAM,IAAMqF,EAAMrF,GAAMkgB,EAC/BY,EAAO9gB,EAAI,GACR,IAAMoU,KAAK6M,KAAK7M,KAAK8M,IAAI7b,EAAMrF,EAAI,GAAKigB,IAAY7L,KAAKwK,GAAK,GAEnE,OAAOkC,EAxDT/iB,QAAA6iB,YAAAA;;ACRE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,YAAA,QAAA,gBAAA,QAAA,YAAA,EAhEF,IAAAZ,EAAArc,EAAA5B,QAAA,oBAAyC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAA2D,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAA5H,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAApH,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAQlC,IAAMka,EAAS,QAEtBliB,QAAAkiB,OAAAA,EAMO,IAAME,EAAS,EAAE,KAAM,GAAI,IAAK,IAEvCpiB,QAAAoiB,OAAAA,EAIO,IAAMxB,EAAmBvK,KAAKwK,GAAKqB,EAAU,IAEpDliB,QAAA4gB,gBAAAA,EAAA,IAQMwC,EAAkBV,SAAAA,GAAAvjB,EAAAikB,EAASrC,EAAU,SAAnB,IAAAzhB,EAAAC,EAAA6jB,GAKtB,SAAAA,EAAY5jB,EAAM+hB,GAAiB,OAAA7hB,EAAA0jB,KAAAA,GAAA9jB,EAAAM,KAC3B,KAAA,CACJJ,KAAMA,EACN0hB,MAAO,UACPvH,OAAQyI,EACRb,gBAAiBA,EACjBE,QAAQ,EACRM,cAAenB,EACfS,YAAae,IAEhB,OAAAtiB,EAAAsjB,GAfqBV,GAwBXG,EAAc,CACzB,IAAIO,EAAmB,UACvB,IAAIA,EAAmB,YAAa,OACpC,IAAIA,EAAmB,iCACvB,IAAIA,EAAmB,4BACvB,IAAIA,EAAmB,gDACvB,IAAIA,EAAmB,+CAAgD,OACvE,IAAIA,EAAmB,6CAA8C,QACrEpjB,QAAA6iB,YAAAA;;AC/BF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EA7BA,IAAIQ,EAAQ,GAKL,SAAS9d,IACd8d,EAAQ,GAQH,SAAS3S,EAAIlR,GAClB,OACE6jB,EAAM7jB,IACN6jB,EAAM7jB,EAAK8jB,QAAQ,yCAA0C,aAC7D,KASG,SAASC,EAAI/jB,EAAM0gB,GACxBmD,EAAM7jB,GAAQ0gB;;ACgChB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EAAA,QAAA,OAAA,EAhEA,IAAAna,EAAA/B,QAAA,aAMIwf,EAAa,GAKV,SAASje,IACdie,EAAa,GAWR,SAASD,EAAInU,EAAQqU,EAAa7D,GACvC,IAAM8D,EAAatU,EAAOuU,UACpBC,EAAkBH,EAAYE,UAC9BD,KAAcF,IAClBA,EAAWE,GAAc,IAE3BF,EAAWE,GAAYE,GAAmBhE,EAYrC,SAAShd,EAAOwM,EAAQqU,GAC7B,IAAMC,EAAatU,EAAOuU,UACpBC,EAAkBH,EAAYE,UAC9B/O,EAAY4O,EAAWE,GAAYE,GAKzC,cAJOJ,EAAWE,GAAYE,IAC1B,EAAAle,EAAO,SAAC8d,EAAWE,YACdF,EAAWE,GAEb9O,EASF,SAASlE,EAAIgT,EAAYE,GAC9B,IAAIhP,EAIJ,OAHI8O,KAAcF,GAAcI,KAAmBJ,EAAWE,KAC5D9O,EAAY4O,EAAWE,GAAYE,IAE9BhP;;ACoIT,aA1LO,SAASiP,EAAMrjB,EAAO2Z,EAAKC,GAChC,OAAO/D,KAAK8D,IAAI9D,KAAK+D,IAAI5Z,EAAO2Z,GAAMC,GAcjC,SAAS0J,EAAuB9N,EAAGC,EAAG2H,EAAIC,EAAIC,EAAIC,GACvD,IAAMrH,EAAKoH,EAAKF,EACVjH,EAAKoH,EAAKF,EAChB,GAAW,IAAPnH,GAAmB,IAAPC,EAAU,CACxB,IAAMoN,IAAM/N,EAAI4H,GAAMlH,GAAMT,EAAI4H,GAAMlH,IAAOD,EAAKA,EAAKC,EAAKA,GACxDoN,EAAI,GACNnG,EAAKE,EACLD,EAAKE,GACIgG,EAAI,IACbnG,GAAMlH,EAAKqN,EACXlG,GAAMlH,EAAKoN,GAGf,OAAOC,EAAgBhO,EAAGC,EAAG2H,EAAIC,GAW5B,SAASmG,EAAgBpG,EAAIC,EAAIC,EAAIC,GAC1C,IAAMrH,EAAKoH,EAAKF,EACVjH,EAAKoH,EAAKF,EAChB,OAAOnH,EAAKA,EAAKC,EAAKA,EAUjB,SAASsN,EAAkBxM,GAGhC,IAFA,IAAMzV,EAAIyV,EAAIhW,OAELQ,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAI1B,IAFA,IAAIiiB,EAASjiB,EACTkiB,EAAQ9N,KAAK6F,IAAIzE,EAAIxV,GAAGA,IACnBmiB,EAAIniB,EAAI,EAAGmiB,EAAIpiB,EAAGoiB,IAAK,CAC9B,IAAMC,EAAWhO,KAAK6F,IAAIzE,EAAI2M,GAAGniB,IAC7BoiB,EAAWF,IACbA,EAAQE,EACRH,EAASE,GAIb,GAAc,IAAVD,EACF,OAAO,KAIT,IAAM7hB,EAAMmV,EAAIyM,GAChBzM,EAAIyM,GAAUzM,EAAIxV,GAClBwV,EAAIxV,GAAKK,EAGT,IAAK,IAAIgiB,EAAIriB,EAAI,EAAGqiB,EAAItiB,EAAGsiB,IAEzB,IADA,IAAMC,GAAQ9M,EAAI6M,GAAGriB,GAAKwV,EAAIxV,GAAGA,GACxBuiB,EAAIviB,EAAGuiB,EAAIxiB,EAAI,EAAGwiB,IACrBviB,GAAKuiB,EACP/M,EAAI6M,GAAGE,GAAK,EAEZ/M,EAAI6M,GAAGE,IAAMD,EAAO9M,EAAIxV,GAAGuiB,GAQnC,IADA,IAAMxO,EAAI,IAAItT,MAAMV,GACXge,EAAIhe,EAAI,EAAGge,GAAK,EAAGA,IAAK,CAC/BhK,EAAEgK,GAAKvI,EAAIuI,GAAGhe,GAAKyV,EAAIuI,GAAGA,GAC1B,IAAK,IAAIyE,EAAIzE,EAAI,EAAGyE,GAAK,EAAGA,IAC1BhN,EAAIgN,GAAGziB,IAAMyV,EAAIgN,GAAGzE,GAAKhK,EAAEgK,GAG/B,OAAOhK,EASF,SAAS0O,EAAUC,GACxB,OAAyB,IAAjBA,EAAwBtO,KAAKwK,GAShC,SAAS+D,EAAUC,GACxB,OAAQA,EAAiBxO,KAAKwK,GAAM,IAU/B,SAASiE,EAAOnjB,EAAGC,GACxB,IAAMwiB,EAAIziB,EAAIC,EACd,OAAOwiB,EAAIxiB,EAAI,EAAIwiB,EAAIxiB,EAAIwiB,EAWtB,SAASW,EAAKpjB,EAAGC,EAAGoU,GACzB,OAAOrU,EAAIqU,GAAKpU,EAAID,GASf,SAASqjB,EAAQhjB,EAAGijB,GACzB,IAAMC,EAAS7O,KAAK8O,IAAI,GAAIF,GAC5B,OAAO5O,KAAK+O,MAAMpjB,EAAIkjB,GAAUA,EAU3B,SAASE,EAAMpjB,EAAGijB,GACvB,OAAO5O,KAAK+O,MAAMJ,EAAQhjB,EAAGijB,IAUxB,SAAS1E,EAAMve,EAAGijB,GACvB,OAAO5O,KAAKkK,MAAMyE,EAAQhjB,EAAGijB,IAUxB,SAASI,EAAKrjB,EAAGijB,GACtB,OAAO5O,KAAKgP,KAAKL,EAAQhjB,EAAGijB,IAC9B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,MAAA,EAAA,QAAA,MAAA,EAAA,QAAA,KAAA,EAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,QAAA,EAAA,QAAA,UAAA;;AC3JA,aAjCO,SAASK,EAAUC,EAAQzF,EAAO0F,GACvC,IAAMC,OACU/d,IAAd8d,EAA0BD,EAAOP,QAAQQ,GAAa,GAAKD,EACzDG,EAAUD,EAAa3iB,QAAQ,KAEnC,OADA4iB,GAAuB,IAAbA,EAAiBD,EAAahkB,OAASikB,GAChC5F,EACb2F,EACA,IAAI/iB,MAAM,EAAIod,EAAQ4F,GAAS/N,KAAK,KAAO8N,EAS1C,SAASE,EAAgBC,EAAIC,GAIlC,IAHA,IAAMC,GAAM,GAAKF,GAAIG,MAAM,KACrBC,GAAM,GAAKH,GAAIE,MAAM,KAElB9jB,EAAI,EAAGA,EAAIoU,KAAK+D,IAAI0L,EAAGrkB,OAAQukB,EAAGvkB,QAASQ,IAAK,CACvD,IAAMgkB,EAAKC,SAASJ,EAAG7jB,IAAM,IAAK,IAC5BkkB,EAAKD,SAASF,EAAG/jB,IAAM,IAAK,IAElC,GAAIgkB,EAAKE,EACP,OAAO,EAET,GAAIA,EAAKF,EACP,OAAQ,EAIZ,OAAO,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAA,QAAA,UAAA;;AC0YA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA,EAAA,QAAA,cAAA,EAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,WAAA,EAAA,QAAA,MAAA,EAlbA,IAAAG,EAAApiB,QAAA,eACAqiB,EAAAriB,QAAA,aACAsiB,EAAAtiB,QAAA,eAkCO,SAASuf,EAAIxN,EAAYwQ,GAG9B,OAFAxQ,EAAW,KAAOwQ,EAAM,GACxBxQ,EAAW,KAAOwQ,EAAM,GACjBxQ,EAUF,SAASyQ,EAAgBzQ,EAAY0Q,GAC1C,IAAMrC,EAAIqC,EAAOC,YACXtJ,EAASqJ,EAAO1J,YAChBW,EAAKN,EAAO,GACZO,EAAKP,EAAO,GAId1G,EAHOX,EAAW,GAGR2H,EACR/G,EAHKZ,EAAW,GAGN4H,EACL,IAAPjH,GAAmB,IAAPC,IACdD,EAAK,GAEP,IAAMb,EAAIQ,KAAKsQ,KAAKjQ,EAAKA,EAAKC,EAAKA,GAKnC,MAAO,CAHG+G,EAAM0G,EAAI1N,EAAMb,EAChB8H,EAAMyG,EAAIzN,EAAMd,GAiBrB,SAAS+Q,EAAiB7Q,EAAY8Q,GAC3C,IAcI7Q,EAAGC,EAdDyH,EAAK3H,EAAW,GAChB4H,EAAK5H,EAAW,GAChBoJ,EAAQ0H,EAAQ,GAChBxkB,EAAMwkB,EAAQ,GACdjJ,EAAKuB,EAAM,GACXtB,EAAKsB,EAAM,GACXrB,EAAKzb,EAAI,GACT0b,EAAK1b,EAAI,GACTqU,EAAKoH,EAAKF,EACVjH,EAAKoH,EAAKF,EACViJ,EACG,IAAPpQ,GAAmB,IAAPC,EACR,GACCD,GAAMgH,EAAKE,GAAMjH,GAAMgH,EAAKE,KAAQnH,EAAKA,EAAKC,EAAKA,GAAM,GAYhE,OAVImQ,GAAS,GACX9Q,EAAI4H,EACJ3H,EAAI4H,GACKiJ,GAAS,GAClB9Q,EAAI8H,EACJ7H,EAAI8H,IAEJ/H,EAAI4H,EAAKkJ,EAAQpQ,EACjBT,EAAI4H,EAAKiJ,EAAQnQ,GAEZ,CAACX,EAAGC,GA+BN,SAAS8Q,EAAeC,GAC7B,OAAA,SAKYjR,GACR,OAAOkR,EAAWlR,EAAYiR,IAY7B,SAASE,EAAoBC,EAAaC,EAASJ,GACxD,IAAMK,GAAoB,EAAAvC,EAAM,QAACsC,EAAU,IAAK,KAAO,IACjDpR,EAAIK,KAAK6F,IAAI,KAAOmL,GACpBpC,EAAW+B,GAAkB,EAE/BM,EAAMjR,KAAKkK,MAAMvK,EAAI,MACrBmE,EAAM9D,KAAKkK,OAAOvK,EAAU,KAANsR,GAAc,IACpCC,GAAM,EAAAvC,EAAO,SAAChP,EAAU,KAANsR,EAAmB,GAANnN,EAAU8K,GAEzCsC,GAAO,KACTA,EAAM,EACNpN,GAAO,GAGLA,GAAO,KACTA,EAAM,EACNmN,GAAO,GAGT,IAAIE,EAAOF,EAAM,IAWjB,OAVY,IAARnN,GAAqB,IAARoN,IACfC,GAAQ,KAAM,EAAAlC,EAAS,WAACnL,EAAK,GAAK,KAExB,IAARoN,IACFC,GAAQ,KAAM,EAAAlC,EAAS,WAACiC,EAAK,EAAGtC,GAAY,KAEpB,IAAtBoC,IACFG,GAAQ,IAAML,EAAYM,OAAOJ,EAAoB,EAAI,EAAI,IAGxDG,EAkCF,SAASE,EAAO3R,EAAY4R,EAAUX,GAC3C,OAAIjR,EACK4R,EACJrE,QAAQ,MAAOvN,EAAW,GAAGiP,QAAQgC,IACrC1D,QAAQ,MAAOvN,EAAW,GAAGiP,QAAQgC,IAEnC,GAQF,SAAShkB,EAAO4kB,EAAaC,GAElC,IADA,IAAI7kB,GAAS,EACJf,EAAI2lB,EAAYnmB,OAAS,EAAGQ,GAAK,IAAKA,EAC7C,GAAI2lB,EAAY3lB,IAAM4lB,EAAY5lB,GAAI,CACpCe,GAAS,EACT,MAGJ,OAAOA,EAqBF,SAASkT,EAAOH,EAAYI,GACjC,IAAM2R,EAAWzR,KAAKD,IAAID,GACpB4R,EAAW1R,KAAKC,IAAIH,GACpBH,EAAID,EAAW,GAAK+R,EAAW/R,EAAW,GAAKgS,EAC/C9R,EAAIF,EAAW,GAAK+R,EAAW/R,EAAW,GAAKgS,EAGrD,OAFAhS,EAAW,GAAKC,EAChBD,EAAW,GAAKE,EACTF,EAoBF,SAASQ,EAAMR,EAAYQ,GAGhC,OAFAR,EAAW,IAAMQ,EACjBR,EAAW,IAAMQ,EACVR,EAQF,SAASiO,EAAgBgE,EAAQC,GACtC,IAAMvR,EAAKsR,EAAO,GAAKC,EAAO,GACxBtR,EAAKqR,EAAO,GAAKC,EAAO,GAC9B,OAAOvR,EAAKA,EAAKC,EAAKA,EAQjB,SAASuR,EAASF,EAAQC,GAC/B,OAAO5R,KAAKsQ,KAAK3C,EAAgBgE,EAAQC,IAWpC,SAASE,EAAyBpS,EAAY8Q,GACnD,OAAO7C,EAAgBjO,EAAY6Q,EAAiB7Q,EAAY8Q,IA6B3D,SAASuB,EAAarS,EAAYiR,GACvC,OAAIjR,EAEAmR,EAAoB,KAAMnR,EAAW,GAAIiR,GACzC,IACAE,EAAoB,KAAMnR,EAAW,GAAIiR,GAGtC,GA4BF,SAASC,EAAWlR,EAAYiR,GACrC,OAAOU,EAAO3R,EAAY,WAAYiR,GAYjC,SAAS/G,EAAMlK,EAAYmK,GAChC,GAAIA,EAAWG,WAAY,CACzB,IAAMC,GAAa,EAAAzD,EAAQ,UAACqD,EAAWE,aACjCiI,EAAaC,EAAcvS,EAAYmK,EAAYI,GACrD+H,IACFtS,EAAW,IAAMsS,EAAa/H,GAGlC,OAAOvK,EAQF,SAASuS,EAAcvS,EAAYmK,EAAYqI,GACpD,IAAMpI,EAAmBD,EAAWE,YAChCiI,EAAa,EAUjB,OAREnI,EAAWG,aACVtK,EAAW,GAAKoK,EAAiB,IAAMpK,EAAW,GAAKoK,EAAiB,MAEzEoI,EAAoBA,IAAqB,EAAA1L,EAAQ,UAACsD,GAClDkI,EAAahS,KAAKkK,OACfxK,EAAW,GAAKoK,EAAiB,IAAMoI,IAGrCF;;AC9KT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAAA,QAAA,QAAA,EAAA,QAAA,YAAA,EAAA,QAAA,UAAA,EAAA,QAAA,OAAA,EAnQA,IAAAhC,EAAAriB,QAAA,aAmBawkB,EAAiB,UAWvB,SAASC,EAAYvT,EAAIM,EAAIkT,GAClCA,EAASA,GAAUF,EACnB,IAAMG,GAAO,EAAA/D,EAAS,WAAC1P,EAAG,IACpB0T,GAAO,EAAAhE,EAAS,WAACpP,EAAG,IACpBqT,GAAeD,EAAOD,GAAQ,EAC9BG,GAAc,EAAAlE,EAAS,WAACpP,EAAG,GAAKN,EAAG,IAAM,EACzCvT,EACJ0U,KAAKC,IAAIuS,GAAexS,KAAKC,IAAIuS,GACjCxS,KAAKC,IAAIwS,GACPzS,KAAKC,IAAIwS,GACTzS,KAAKD,IAAIuS,GACTtS,KAAKD,IAAIwS,GACb,OAAO,EAAIF,EAASrS,KAAK0S,MAAM1S,KAAKsQ,KAAKhlB,GAAI0U,KAAKsQ,KAAK,EAAIhlB,IAS7D,SAASqnB,EAAkBtP,EAAagP,GAEtC,IADA,IAAIjnB,EAAS,EACJQ,EAAI,EAAGyI,EAAKgP,EAAYjY,OAAQQ,EAAIyI,EAAK,IAAKzI,EACrDR,GAAUgnB,EAAY/O,EAAYzX,GAAIyX,EAAYzX,EAAI,GAAIymB,GAE5D,OAAOjnB,EAeF,SAAS8O,EAAUwB,EAAU9B,GAElC,IAAMyY,GADNzY,EAAUA,GAAW,IACEyY,QAAUF,EAC3BtI,EAAajQ,EAAQiQ,YAAc,YACnC/f,EAAO4R,EAASkX,UACT,uBAAT9oB,IACF4R,EAAWA,EAASG,QAAQ0C,UAAUsL,EAAY,cAEpD,IACIxG,EAAawP,EAAQjnB,EAAGyI,EAAI4Z,EAAG6E,EAD/B1nB,EAAS,EAEb,OAAQtB,GACN,IAAK,QACL,IAAK,aACH,MAEF,IAAK,aACL,IAAK,aAIHsB,EAASunB,EAHTtP,EACE3H,EACAqX,iBACsCV,GACxC,MAEF,IAAK,kBACL,IAAK,UAIH,IAAKzmB,EAAI,EAAGyI,GAHZgP,EACE3H,EACAqX,kBAC2B3nB,OAAQQ,EAAIyI,IAAMzI,EAC7CR,GAAUunB,EAAkBtP,EAAYzX,GAAIymB,GAE9C,MAEF,IAAK,eAIH,IAAKzmB,EAAI,EAAGyI,GAHZgP,EACE3H,EACAqX,kBAC2B3nB,OAAQQ,EAAIyI,IAAMzI,EAE7C,IAAKqiB,EAAI,EAAG6E,GADZD,EAASxP,EAAYzX,IACGR,OAAQ6iB,EAAI6E,IAAM7E,EACxC7iB,GAAUunB,EAAkBE,EAAO5E,GAAIoE,GAG3C,MAEF,IAAK,qBACH,IAAMW,EAEFtX,EACAuX,gBACJ,IAAKrnB,EAAI,EAAGyI,EAAK2e,EAAW5nB,OAAQQ,EAAIyI,IAAMzI,EAC5CR,GAAU8O,EAAU8Y,EAAWpnB,GAAIgO,GAErC,MAEF,QACE,MAAM,IAAI5Q,MAAM,8BAAgCc,GAGpD,OAAOsB,EAiBT,SAAS8nB,EAAgB7P,EAAagP,GAKpC,IAJA,IAAI9L,EAAO,EACLtP,EAAMoM,EAAYjY,OACpBmc,EAAKlE,EAAYpM,EAAM,GAAG,GAC1BuQ,EAAKnE,EAAYpM,EAAM,GAAG,GACrBrL,EAAI,EAAGA,EAAIqL,EAAKrL,IAAK,CAC5B,IAAM6b,EAAKpE,EAAYzX,GAAG,GACpB8b,EAAKrE,EAAYzX,GAAG,GAC1B2a,IACE,EAAAgI,EAAS,WAAC9G,EAAKF,IACd,EAAIvH,KAAKC,KAAI,EAAAsO,EAAS,WAAC/G,IAAOxH,KAAKC,KAAI,EAAAsO,EAAS,WAAC7G,KACpDH,EAAKE,EACLD,EAAKE,EAEP,OAAQnB,EAAO8L,EAASA,EAAU,EAa7B,SAAS/L,EAAQ5K,EAAU9B,GAEhC,IAAMyY,GADNzY,EAAUA,GAAW,IACEyY,QAAUF,EAC3BtI,EAAajQ,EAAQiQ,YAAc,YACnC/f,EAAO4R,EAASkX,UACT,uBAAT9oB,IACF4R,EAAWA,EAASG,QAAQ0C,UAAUsL,EAAY,cAEpD,IACIxG,EAAawP,EAAQjnB,EAAGyI,EAAI4Z,EAAG6E,EAD/BvM,EAAO,EAEX,OAAQzc,GACN,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACL,IAAK,aACH,MAEF,IAAK,UAKH,IAJAuZ,EACE3H,EACAqX,iBACFxM,EAAOvG,KAAK6F,IAAIqN,EAAgB7P,EAAY,GAAIgP,IAC3CzmB,EAAI,EAAGyI,EAAKgP,EAAYjY,OAAQQ,EAAIyI,IAAMzI,EAC7C2a,GAAQvG,KAAK6F,IAAIqN,EAAgB7P,EAAYzX,GAAIymB,IAEnD,MAEF,IAAK,eAIH,IAAKzmB,EAAI,EAAGyI,GAHZgP,EACE3H,EACAqX,kBAC2B3nB,OAAQQ,EAAIyI,IAAMzI,EAG7C,IAFAinB,EAASxP,EAAYzX,GACrB2a,GAAQvG,KAAK6F,IAAIqN,EAAgBL,EAAO,GAAIR,IACvCpE,EAAI,EAAG6E,EAAKD,EAAOznB,OAAQ6iB,EAAI6E,IAAM7E,EACxC1H,GAAQvG,KAAK6F,IAAIqN,EAAgBL,EAAO5E,GAAIoE,IAGhD,MAEF,IAAK,qBACH,IAAMW,EAEFtX,EACAuX,gBACJ,IAAKrnB,EAAI,EAAGyI,EAAK2e,EAAW5nB,OAAQQ,EAAIyI,IAAMzI,EAC5C2a,GAAQD,EAAQ0M,EAAWpnB,GAAIgO,GAEjC,MAEF,QACE,MAAM,IAAI5Q,MAAM,8BAAgCc,GAGpD,OAAOyc,EAcF,SAASlB,EAAOxG,EAAIgT,EAAUsB,EAASd,GAC5CA,EAASA,GAAUF,EACnB,IAAMG,GAAO,EAAA/D,EAAS,WAAC1P,EAAG,IACpBuU,GAAO,EAAA7E,EAAS,WAAC1P,EAAG,IACpBwU,EAAOxB,EAAWQ,EAClBiB,EAAMtT,KAAKuT,KACfvT,KAAKC,IAAIqS,GAAQtS,KAAKD,IAAIsT,GACxBrT,KAAKD,IAAIuS,GAAQtS,KAAKC,IAAIoT,GAAQrT,KAAKD,IAAIoT,IAEzCK,EACJJ,EACApT,KAAK0S,MACH1S,KAAKC,IAAIkT,GAAWnT,KAAKC,IAAIoT,GAAQrT,KAAKD,IAAIuS,GAC9CtS,KAAKD,IAAIsT,GAAQrT,KAAKC,IAAIqS,GAAQtS,KAAKC,IAAIqT,IAE/C,MAAO,EAAC,EAAAjF,EAAS,WAACmF,IAAM,EAAAnF,EAAS,WAACiF,IA7OpC3pB,QAAAwoB,eAAAA;;AC6BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EAAA,QAAA,SAAA,EAAA,QAAA,KAAA,EA1CA,IAAMsB,EAAS,CACbC,KAAM,EACNC,KAAM,EACNzV,MAAO,EACP0V,KAAM,GAMJC,EAAQJ,EAAOC,KASZ,SAASI,EAASnK,GACvBkK,EAAQJ,EAAO9J,GAGV,SAASuC,KAAO6H,GAAM,IAAAC,EACvBH,EAAQJ,EAAOC,OAGnBM,EAAAC,SAAQ/H,IAAGxd,MAAAslB,EAAID,GAGV,SAASJ,KAAQI,GAAM,IAAAG,EACxBL,EAAQJ,EAAOE,OAGnBO,EAAAD,SAAQN,KAAIjlB,MAAAwlB,EAAIH,GAGX,SAAS7V,KAAS6V,GAAM,IAAAI,EACzBN,EAAQJ,EAAOvV,QAGnBiW,EAAAF,SAAQ/V,MAAKxP,MAAAylB,EAAIJ;;AC0rBR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,kBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,mBAAA,OAAA,eAAA,QAAA,aAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,QAAA,UAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,cAAA,EAAA,QAAA,eAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,8BAAA,EAAA,QAAA,uCAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,WAAA,EAAA,QAAA,WAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,IAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,4BAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,cAAA,EAvrBX,IAAA1H,EAAA9c,EAAA5B,QAAA,yBACAymB,EAAAzmB,QAAA,sBAKA0mB,EAAA1mB,QAAA,sBACA8c,EAAA9c,QAAA,mBACA2mB,EAAA3mB,QAAA,yBAKA4mB,EAAA5mB,QAAA,wBAKAoiB,EAAApiB,QAAA,eACAqiB,EAAAriB,QAAA,aACA6mB,EAAA7mB,QAAA,mBACA8mB,EAAA9mB,QAAA,eACAqmB,EAAArmB,QAAA,gBAAkC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAuBlC,IAAIkoB,GAAwB,EAKrB,SAASC,EAAyBC,GAEvCF,SADyBrjB,IAAZujB,GAA+BA,GAUvC,SAASC,EAAe5jB,EAAOyb,GACpC,QAAerb,IAAXqb,EAAsB,CACxB,IAAK,IAAI9gB,EAAI,EAAGyI,EAAKpD,EAAM7F,OAAQQ,EAAIyI,IAAMzI,EAC3C8gB,EAAO9gB,GAAKqF,EAAMrF,GAEpB8gB,EAASA,OAETA,EAASzb,EAAM1C,QAEjB,OAAOme,EAQF,SAASoI,EAAkB7jB,EAAOyb,GACvC,QAAerb,IAAXqb,GAAwBzb,IAAUyb,EAAQ,CAC5C,IAAK,IAAI9gB,EAAI,EAAGyI,EAAKpD,EAAM7F,OAAQQ,EAAIyI,IAAMzI,EAC3C8gB,EAAO9gB,GAAKqF,EAAMrF,GAEpBqF,EAAQyb,EAEV,OAAOzb,EAUF,SAAS8jB,EAAclL,IAC5B,EAAAmL,EAAO,KAACnL,EAAWyD,UAAWzD,IAC9B,EAAAoL,EAAgB,KAACpL,EAAYA,EAAYgL,GAMpC,SAASK,EAAeC,GAC7BA,EAAYC,QAAQL,GAYf,SAAS1a,EAAIgb,GAClB,MAAiC,iBAAnBA,GACV,EAAAC,EAAO,KAAwBD,GACJA,GAAmB,KAuB7C,SAAS9J,EAAmB1B,EAAY7C,EAAYsF,EAAOzB,GAEhE,IAAI0K,EACE3mB,GAFNib,EAAaxP,EAAIwP,IAES2L,yBAC1B,GAAI5mB,GAEF,GADA2mB,EAAkB3mB,EAAOoY,EAAYsF,GACjCzB,GAASA,IAAUhB,EAAW4L,WAAY,CAC5C,IAAM/J,EAAgB7B,EAAW6L,mBAC7BhK,IACF6J,EACGA,EAAkB7J,EAAiBnB,EAAe,gBAACM,SAGrD,CACL,IAAM8K,EAAY9L,EAAW4L,WAC7B,GAAkB,WAAbE,IAA2B9K,GAAmB,WAATA,EACxC0K,EAAkBvO,MACb,CAIL,IAAM4F,EAAagJ,EACjB/L,EACAxP,EAAI,cAEN,GAAIuS,IAAekI,GAAmC,YAAda,EAEtCJ,EAAkBvO,EAAa6C,EAAW6L,uBACrC,CACL,IAAIG,EAAW,CACbvJ,EAAM,GAAKtF,EAAa,EACxBsF,EAAM,GACNA,EAAM,GAAKtF,EAAa,EACxBsF,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKtF,EAAa,EACxBsF,EAAM,GACNA,EAAM,GAAKtF,EAAa,GAE1B6O,EAAWjJ,EAAWiJ,EAAUA,EAAU,GAG1CN,IAFc,EAAAnD,EAAW,aAACyD,EAAStnB,MAAM,EAAG,GAAIsnB,EAAStnB,MAAM,EAAG,KACnD,EAAA6jB,EAAW,aAACyD,EAAStnB,MAAM,EAAG,GAAIsnB,EAAStnB,MAAM,EAAG,KAC9B,EAEvC,IAAMmd,EAAgBb,EAClBN,EAAe,gBAACM,GAChBhB,EAAW6L,wBACOrkB,IAAlBqa,IACF6J,GAAmB7J,IAIzB,OAAO6J,EAUF,SAASO,EAAyBX,GACvCD,EAAeC,GACfA,EAAYC,QAAQ,SAAUrc,GAC5Boc,EAAYC,QAAQ,SAAUhI,GACxBrU,IAAWqU,IACb,EAAA6H,EAAgB,KAAClc,EAAQqU,EAAayH,OAmBvC,SAASkB,EACdC,EACAC,EACAC,EACAC,GAEAH,EAAaZ,QAAQ,SAAUgB,GAC7BH,EAAab,QAAQ,SAAUiB,IAC7B,EAAApB,EAAgB,KAACmB,EAAaC,EAAaH,IAC3C,EAAAjB,EAAgB,KAACoB,EAAaD,EAAaD,OAQ1C,SAASG,KACd,EAAAC,EAAS,UACT,EAAAC,EAAmB,SAQd,SAASC,EAAiB5M,EAAY6M,GAC3C,OAAK7M,EAGqB,iBAAfA,EACFxP,EAAIwP,GAEN,EALExP,EAAIqc,GAeR,SAASC,EAAuCC,GACrD,OAAA,SAOY3lB,EAAOyb,EAAQC,GACvB,IAAMvhB,EAAS6F,EAAM7F,OACrBuhB,OAA0Btb,IAAdsb,EAA0BA,EAAY,EAClDD,OAAoBrb,IAAXqb,EAAuBA,EAAS,IAAIrgB,MAAMjB,GACnD,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAQQ,GAAK+gB,EAG/B,IAFA,IAAML,EAAQsK,EAAe3lB,EAAM1C,MAAM3C,EAAGA,EAAI+gB,IAC1CkK,EAAcvK,EAAMlhB,OACjB6iB,EAAI,EAAG6E,EAAKnG,EAAWsB,EAAI6E,IAAM7E,EACxCvB,EAAO9gB,EAAIqiB,GAAKA,GAAK4I,EAAc5lB,EAAMrF,EAAIqiB,GAAK3B,EAAM2B,GAG5D,OAAOvB,GA2BN,SAASoK,EAAwB/d,EAAQqU,EAAa2J,EAASC,GACpE,IAAMC,EAAa5c,EAAItB,GACjBme,EAAW7c,EAAI+S,IACrB,EAAA6H,EAAgB,KACdgC,EACAC,EACAP,EAAuCI,KAEzC,EAAA9B,EAAgB,KACdiC,EACAD,EACAN,EAAuCK,IAapC,SAASG,EAAWzX,EAAYmK,GAErC,OADA8K,IACOpW,EACLmB,EACA,iBACerO,IAAfwY,EAA2BA,EAAa,aAarC,SAASuN,EAAS1X,EAAYmK,GACnC,IAAMwN,EAAS9Y,EACbmB,OACerO,IAAfwY,EAA2BA,EAAa,YACxC,aAEI2J,EAAM6D,EAAO,GAInB,OAHI7D,GAAO,KAAOA,EAAM,OACtB6D,EAAO,IAAK,EAAA5I,EAAM,QAAC+E,EAAM,IAAK,KAAO,KAEhC6D,EAaF,SAASC,EAAWlB,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,IAAMkB,EAAanB,EAAYX,aAAeY,EAAYZ,WAC1D,OAAIW,EAAY9I,YAAc+I,EAAY/I,UACjCiK,EAEa3B,EAA4BQ,EAAaC,KACtCxB,GAAkB0C,EAYtC,SAAS3B,EACd4B,EACAC,GAEA,IAAMpK,EAAamK,EAAiBlK,UAC9BC,EAAkBkK,EAAsBnK,UAC1CoK,GAAgB,EAAAC,EAAgB,KAACtK,EAAYE,GAIjD,OAHKmK,IACHA,EAAgB5C,GAEX4C,EAaF,SAASE,EAAa7e,EAAQqU,GAGnC,OAAOwI,EAFkBvb,EAAItB,GACCsB,EAAI+S,IAkB7B,SAAS7O,EAAUmB,EAAY3G,EAAQqU,GAE5C,OADsBwK,EAAa7e,EAAQqU,EACpCsK,CAAchY,OAAYrO,EAAWqO,EAAWtU,QAelD,SAASysB,EAAgBvU,EAAQvK,EAAQqU,EAAa5D,GAC3D,IAAMkO,EAAgBE,EAAa7e,EAAQqU,GAC3C,OAAO,EAAA9D,EAAc,gBAAChG,EAAQoU,OAAermB,EAAWmY,GAWnD,SAASsO,EACdxL,EACAkL,EACAC,GAMA,OAJsB7B,EACpB4B,EACAC,EAEKC,CAAcpL,GAMvB,IAAIyL,EAAiB,KASd,SAASC,EAAkBnO,GAChCkO,EAAiB1d,EAAIwP,GAOhB,SAASoO,IACdF,EAAiB,KAQZ,SAASG,IACd,OAAOH,EASF,SAASI,IACdH,EAAkB,aAUb,SAASI,EAAiB1Y,EAAY8X,GAC3C,OAAKO,EAGExZ,EAAUmB,EAAY8X,EAAkBO,GAFtCrY,EAYJ,SAAS2Y,EAAmB3Y,EAAY4Y,GAC7C,OAAKP,EAgBExZ,EAAUmB,EAAYqY,EAAgBO,IAdzC5D,KACC,EAAA/nB,EAAM,QAAC+S,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjBgV,GAAwB,GACxB,EAAAf,EAAI,MACF,2FAGGjU,GAYJ,SAAS6Y,EAAajV,EAAQkU,GACnC,OAAKO,EAGEF,EAAgBvU,EAAQkU,EAAkBO,GAFxCzU,EAYJ,SAASkV,EAAelV,EAAQgV,GACrC,OAAKP,EAGEF,EAAgBvU,EAAQyU,EAAgBO,GAFtChV,EAaJ,SAASmV,EAAiBzR,EAAYwQ,GAC3C,IAAKO,EACH,OAAO/Q,EAET,IAAM0R,EAAcre,EAAImd,GAAkB/B,WACpCkD,EAAYZ,EAAetC,WACjC,OAAOiD,GAAeC,EACjB3R,EAAauD,EAAe,gBAACmO,GAAgBnO,EAAe,gBAACoO,GAC9D3R,EAWC,SAAS4R,EAAmB5R,EAAYsR,GAC7C,IAAKP,EACH,OAAO/Q,EAET,IAAM0R,EAAcre,EAAIie,GAAgB7C,WAClCkD,EAAYZ,EAAetC,WACjC,OAAOiD,GAAeC,EACjB3R,EAAauD,EAAe,gBAACoO,GAAcpO,EAAe,gBAACmO,GAC5D1R,EAaC,SAAS6R,EAA8B5B,EAAYC,EAAU3Y,GAClE,OAAO,SAAUua,GACf,IAAIC,EAAa/G,EACjB,GAAIiF,EAAWjN,WAAY,CACzB,IAAMgP,EAAe/B,EAAWlN,YAC1BmI,GAAoB,EAAA1L,EAAQ,UAACwS,GACnCF,EAAQA,EAAMvqB,MAAM,IACpByjB,GAAa,EAAAC,EAAa,eAAC6G,EAAO7B,EAAY/E,MAG5C4G,EAAM,GAAKA,EAAM,GAAK9G,EAAaE,GAErC4G,EAAM,IAAK,EAAAtL,EAAK,OAACsL,EAAM,GAAIE,EAAa,GAAIA,EAAa,IACzDF,EAAM,IAAK,EAAAtL,EAAK,OAACsL,EAAM,GAAIE,EAAa,GAAIA,EAAa,IACzDD,EAAcxa,EAAUua,QAExBC,EAAcxa,EAAUua,GAM1B,OAJI9G,GAAckF,EAASlN,aAEzB+O,EAAY,IAAM/G,GAAa,EAAAxL,EAAQ,UAAC0Q,EAASnN,cAE5CgP,GASJ,SAASE,IAGdnD,EAAyBoD,EAAoB,aAC7CpD,EAAyBqD,EAAoB,aAG7CpD,EACEoD,EAAoB,YACpBD,EAAoB,YACpBzM,EAAY,aACZG,EACF,YAGFqM;;AC1lBA,aAvIO,SAASG,EACdhU,EACAC,EACArZ,EACAsZ,EACA/G,EACAqF,GAEAA,EAAOA,GAAc,GAErB,IADA,IAAIhY,EAAI,EACCqiB,EAAI5I,EAAQ4I,EAAIjiB,EAAKiiB,GAAK3I,EAAQ,CACzC,IAAM3F,EAAIyF,EAAgB6I,GACpBrO,EAAIwF,EAAgB6I,EAAI,GAC9BrK,EAAKhY,KAAO2S,EAAU,GAAKoB,EAAIpB,EAAU,GAAKqB,EAAIrB,EAAU,GAC5DqF,EAAKhY,KAAO2S,EAAU,GAAKoB,EAAIpB,EAAU,GAAKqB,EAAIrB,EAAU,GAK9D,OAHIqF,GAAQA,EAAKxY,QAAUQ,IACzBgY,EAAKxY,OAASQ,GAETgY,EAaF,SAAS/D,EACduF,EACAC,EACArZ,EACAsZ,EACAxF,EACAuZ,EACAzV,GAEAA,EAAOA,GAAc,GAMrB,IALA,IAAM7D,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,GACfwZ,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBztB,EAAI,EACCqiB,EAAI5I,EAAQ4I,EAAIjiB,EAAKiiB,GAAK3I,EAAQ,CACzC,IAAMqD,EAASvD,EAAgB6I,GAAKqL,EAC9B1Q,EAASxD,EAAgB6I,EAAI,GAAKsL,EACxC3V,EAAKhY,KAAO0tB,EAAU3Q,EAAS5I,EAAM6I,EAAS3I,EAC9C2D,EAAKhY,KAAO2tB,EAAU5Q,EAAS1I,EAAM2I,EAAS7I,EAC9C,IAAK,IAAIoO,EAAIF,EAAI,EAAGE,EAAIF,EAAI3I,IAAU6I,EACpCvK,EAAKhY,KAAOwZ,EAAgB+I,GAMhC,OAHIvK,GAAQA,EAAKxY,QAAUQ,IACzBgY,EAAKxY,OAASQ,GAETgY,EAeF,SAAS1D,EACdkF,EACAC,EACArZ,EACAsZ,EACA5E,EACAC,EACA0Y,EACAzV,GAEAA,EAAOA,GAAc,GAIrB,IAHA,IAAM0V,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBztB,EAAI,EACCqiB,EAAI5I,EAAQ4I,EAAIjiB,EAAKiiB,GAAK3I,EAAQ,CACzC,IAAMqD,EAASvD,EAAgB6I,GAAKqL,EAC9B1Q,EAASxD,EAAgB6I,EAAI,GAAKsL,EACxC3V,EAAKhY,KAAO0tB,EAAU5Y,EAAKiI,EAC3B/E,EAAKhY,KAAO2tB,EAAU5Y,EAAKiI,EAC3B,IAAK,IAAIuF,EAAIF,EAAI,EAAGE,EAAIF,EAAI3I,IAAU6I,EACpCvK,EAAKhY,KAAOwZ,EAAgB+I,GAMhC,OAHIvK,GAAQA,EAAKxY,QAAUQ,IACzBgY,EAAKxY,OAASQ,GAETgY,EAaF,SAASxD,EACdgF,EACAC,EACArZ,EACAsZ,EACAqD,EACAC,EACAhF,GAEAA,EAAOA,GAAc,GAErB,IADA,IAAIhY,EAAI,EACCqiB,EAAI5I,EAAQ4I,EAAIjiB,EAAKiiB,GAAK3I,EAAQ,CACzC1B,EAAKhY,KAAOwZ,EAAgB6I,GAAKtF,EACjC/E,EAAKhY,KAAOwZ,EAAgB6I,EAAI,GAAKrF,EACrC,IAAK,IAAIuF,EAAIF,EAAI,EAAGE,EAAIF,EAAI3I,IAAU6I,EACpCvK,EAAKhY,KAAOwZ,EAAgB+I,GAMhC,OAHIvK,GAAQA,EAAKxY,QAAUQ,IACzBgY,EAAKxY,OAASQ,GAETgY,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,YAAA,EAAA,QAAA,UAAA;;ACsMuB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAvVvB,IAAAzK,EAAA5J,EAAA5B,QAAA,iBACAiK,EAAAjK,QAAA,cACA6rB,EAAA7rB,QAAA,mBAIA8rB,EAAA9rB,QAAA,gBAMA+rB,EAAA/rB,QAAA,cACA8B,EAAA9B,QAAA,mBACAgsB,EAAAhsB,QAAA,uBAAgD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAkBhD,IAAMioB,GAAe,EAAAC,EAAe,UAc9BC,EAAQpgB,SAAAA,GAAA5Q,EAAAgxB,EAAS/hB,EAAU,SAAnB,IAAA9O,EAAAC,EAAA4wB,GACZ,SAAAA,IAAc,IAAA1wB,EA8CT,OA9CSC,EAAAywB,KAAAA,IACZ1wB,EAAAH,EAAAM,KAAA,OAMKuhB,SAAU,EAAAvH,EAAW,eAM1Bna,EAAK2wB,iBAAmB,EAMxB3wB,EAAK4wB,yCAA2C,EAMhD5wB,EAAK6wB,2BAA6B,EAUlC7wB,EAAK8wB,6BAA8B,EAAAnsB,EAAU,YAAC,SAC5CosB,EACAC,EACA7b,GAEA,IAAKA,EACH,OAAO,KAAK9C,sBAAsB2e,GAEpC,IAAMve,EAAQ,KAAKA,QAEnB,OADAA,EAAMyN,eAAe/K,GACd1C,EAAMJ,sBAAsB2e,KAClChxB,EAuPJ,OApPDK,EAAAqwB,EAAA,CAAA,CAAA5vB,IAAA,sBAAAC,MAOA,SAAoBiwB,EAAkB7b,GACpC,OAAO,KAAK2b,4BACV,KAAKG,cACLD,EACA7b,KAIJ,CAAArU,IAAA,QAAAC,MAKA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,iBAAAC,MAQA,SAAewV,EAAGC,EAAG0a,EAAcC,GACjC,OAAO,EAAAnjB,EAAQ,cAGjB,CAAAlN,IAAA,aAAAC,MAKA,SAAWwV,EAAGC,GACZ,IAAMkZ,EAAQ,KAAK0B,gBAAgB,CAAC7a,EAAGC,IACvC,OAAOkZ,EAAM,KAAOnZ,GAAKmZ,EAAM,KAAOlZ,IAGxC,CAAA1V,IAAA,kBAAAC,MAQA,SAAgBmiB,EAAOgO,GAGrB,OAFAA,EAAeA,GAA8B,CAACG,IAAKA,KACnD,KAAKC,eAAepO,EAAM,GAAIA,EAAM,GAAIgO,EAAcxV,EAAAA,GAC/CwV,IAGT,CAAApwB,IAAA,uBAAAC,MAOA,SAAqBuV,GACnB,OAAO,KAAKyE,WAAWzE,EAAW,GAAIA,EAAW,MAGnD,CAAAxV,IAAA,gBAAAC,MAMA,SAAcmZ,GACZ,OAAO,EAAAlM,EAAQ,cAGjB,CAAAlN,IAAA,YAAAC,MAMA,SAAUmZ,GACR,GAAI,KAAKyW,iBAAmB,KAAKM,cAAe,CAC9C,IAAM/W,EAAS,KAAKqX,cAAc,KAAK7P,UACnC8P,MAAMtX,EAAO,KAAOsX,MAAMtX,EAAO,OACnC,EAAAyB,EAAmB,qBAACzB,GAEtB,KAAKyW,gBAAkB,KAAKM,cAE9B,OAAO,EAAA5R,EAAc,gBAAC,KAAKqC,QAASxH,KAGtC,CAAApZ,IAAA,SAAAC,MAQA,SAAO2V,EAAOuZ,IACZ,EAAAjiB,EAAQ,cAGV,CAAAlN,IAAA,QAAAC,MAUA,SAAMuW,EAAIC,EAAI0Y,IACZ,EAAAjiB,EAAQ,cAGV,CAAAlN,IAAA,WAAAC,MASA,SAASyb,GACP,OAAO,KAAKnK,sBAAsBmK,EAAYA,KAGhD,CAAA1b,IAAA,wBAAAC,MAQA,SAAsBiwB,GACpB,OAAO,EAAAhjB,EAAQ,cAGjB,CAAAlN,IAAA,UAAAC,MAKA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,iBAAAC,MASA,SAAeof,IACb,EAAAnS,EAAQ,cAGV,CAAAlN,IAAA,mBAAAC,MAMA,SAAiBmZ,GACf,OAAO,EAAAlM,EAAQ,cAGjB,CAAAlN,IAAA,YAAAC,MAQA,SAAUwe,EAAQC,IAChB,EAAAxR,EAAQ,cAGV,CAAAlN,IAAA,YAAAC,MAeA,SAAU4O,EAAQqU,GAEhB,IAAM6J,GAAa,EAAA4D,EAAa,KAAC9hB,GAC3BwQ,EACqB,eAAzB0N,EAAWxB,WACP,SAAUqF,EAAeC,EAAgBzV,GACvC,IAAM0V,EAAc/D,EAAWlN,YACzBkR,EAAkBhE,EAAWiE,iBAC7Bhb,GAAQ,EAAAuG,EAAS,WAACwU,IAAmB,EAAAxU,EAAS,WAACuU,GAmBrD,OAlBA,EAAAG,EAAgB,SACdvB,EACAqB,EAAgB,GAChBA,EAAgB,GAChB/a,GACCA,EACD,EACA,EACA,IAEF,EAAAkZ,EAAW,aACT0B,EACA,EACAA,EAAc1vB,OACdka,EACAsU,EACAmB,IAEK,EAAAnD,EAAY,cAACX,EAAY7J,EAAzB,CACL0N,EACAC,EACAzV,KAGJ,EAAAsS,EAAY,cAACX,EAAY7J,GAE/B,OADA,KAAK9D,eAAeC,GACb,SACRuQ,EAtSWpgB,GAAmBhQ,EAySlBowB,EAAQnwB,QAAAC,QAAAF;;ACEM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,gBAAA,EAzV7B,IAAA0xB,EAAA7rB,EAAA5B,QAAA,kBACAiK,EAAAjK,QAAA,cACAoiB,EAAApiB,QAAA,gBACA6rB,EAAA7rB,QAAA,uBAA0E,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAE1E,IAQM0pB,EAAcC,SAAAA,GAAAxyB,EAAAuyB,EAASvB,EAAQ,SAAjB,IAAA7wB,EAAAC,EAAAmyB,GAClB,SAAAA,IAAc,IAAAjyB,EAmBgB,OAnBhBC,EAAAgyB,KAAAA,IACZjyB,EAAAH,EAAAM,KAAA,OAMKgyB,OAAS,KAMdnyB,EAAKkc,OAAS,EAMdlc,EAAKgc,gBAAkB,KAAKhc,EA+P7B,OA5PDK,EAAA4xB,EAAA,CAAA,CAAAnxB,IAAA,gBAAAC,MAKA,SAAcmZ,GACZ,OAAO,EAAA6B,EAAiC,mCACtC,KAAKC,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACLhC,KAIJ,CAAApZ,IAAA,iBAAAC,MAIA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,qBAAAC,MAKA,WACE,OAAO,KAAKib,gBAAgB7W,MAAM,EAAG,KAAK+W,UAG5C,CAAApb,IAAA,qBAAAC,MAGA,WACE,OAAO,KAAKib,kBAGd,CAAAlb,IAAA,oBAAAC,MAKA,WACE,OAAO,KAAKib,gBAAgB7W,MAC1B,KAAK6W,gBAAgBha,OAAS,KAAKka,UAIvC,CAAApb,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKoxB,SAGd,CAAArxB,IAAA,wBAAAC,MAKA,SAAsBiwB,GAOpB,GANI,KAAKH,6BAA+B,KAAKI,gBAC3C,KAAKL,yCAA2C,EAChD,KAAKC,2BAA6B,KAAKI,eAKvCD,EAAmB,GACgC,IAAlD,KAAKJ,0CACJI,GAAoB,KAAKJ,yCAE3B,OAAO,KAGT,IAAMwB,EACJ,KAAKC,8BAA8BrB,GAErC,OADkCoB,EAAmBE,qBACvBtwB,OAAS,KAAKga,gBAAgBha,OACnDowB,GAQT,KAAKxB,yCAA2CI,EACzC,QAGT,CAAAlwB,IAAA,gCAAAC,MAKA,SAA8BiwB,GAC5B,OAAO,OAGT,CAAAlwB,IAAA,YAAAC,MAGA,WACE,OAAO,KAAKmb,SAGd,CAAApb,IAAA,qBAAAC,MAIA,SAAmBoxB,EAAQnW,GACzB,KAAKE,OAASqW,EAAmBJ,GACjC,KAAKA,OAASA,EACd,KAAKnW,gBAAkBA,IAGzB,CAAAlb,IAAA,iBAAAC,MAKA,SAAekZ,EAAakY,IAC1B,EAAAnkB,EAAQ,cAGV,CAAAlN,IAAA,YAAAC,MAMA,SAAUoxB,EAAQlY,EAAauY,GAE7B,IAAItW,EACJ,GAAIiW,EACFjW,EAASqW,EAAmBJ,OACvB,CACL,IAAK,IAAI3vB,EAAI,EAAGA,EAAIgwB,IAAWhwB,EAAG,CAChC,GAA2B,IAAvByX,EAAYjY,OAGd,OAFA,KAAKmwB,OAAS,UACd,KAAKjW,OAAS,GAGhBjC,EAAoCA,EAAY,GAGlDkY,EAASM,EADTvW,EAASjC,EAAYjY,QAGvB,KAAKmwB,OAASA,EACd,KAAKjW,OAASA,IAGhB,CAAApb,IAAA,iBAAAC,MASA,SAAeof,GACT,KAAKnE,kBACPmE,EAAY,KAAKnE,gBAAiB,KAAKA,gBAAiB,KAAKE,QAC7D,KAAKhJ,aAIT,CAAApS,IAAA,SAAAC,MAOA,SAAO2V,EAAOuZ,GACZ,IAAMjU,EAAkB,KAAKsW,qBAC7B,GAAItW,EAAiB,CACnB,IAAME,EAAS,KAAKwW,aACpB,EAAAjc,EAAM,QACJuF,EACA,EACAA,EAAgBha,OAChBka,EACAxF,EACAuZ,EACAjU,GAEF,KAAK9I,aAIT,CAAApS,IAAA,QAAAC,MASA,SAAMuW,EAAIC,EAAI0Y,QACDhoB,IAAPsP,IACFA,EAAKD,GAEF2Y,IACHA,GAAS,EAAA3S,EAAS,WAAC,KAAKqD,cAE1B,IAAM3E,EAAkB,KAAKsW,qBAC7B,GAAItW,EAAiB,CACnB,IAAME,EAAS,KAAKwW,aACpB,EAAA5b,EAAK,OACHkF,EACA,EACAA,EAAgBha,OAChBka,EACA5E,EACAC,EACA0Y,EACAjU,GAEF,KAAK9I,aAIT,CAAApS,IAAA,YAAAC,MAOA,SAAUwe,EAAQC,GAChB,IAAMxD,EAAkB,KAAKsW,qBAC7B,GAAItW,EAAiB,CACnB,IAAME,EAAS,KAAKwW,aACpB,EAAA1b,EAAS,WACPgF,EACA,EACAA,EAAgBha,OAChBka,EACAqD,EACAC,EACAxD,GAEF,KAAK9I,eAER+e,EAnRiBC,GA0RpB,SAASO,EAAmBvW,GAC1B,IAAIiW,EAQJ,OAPc,GAAVjW,EACFiW,EAAS,KACU,GAAVjW,EACTiW,EAAS,MACU,GAAVjW,IACTiW,EAAS,QAEJ,EAOF,SAASI,EAAmBJ,GACjC,IAAIjW,EAQJ,MAPc,MAAViW,EACFjW,EAAS,EACU,OAAViW,GAA6B,OAAVA,EAC5BjW,EAAS,EACU,QAAViW,IACTjW,EAAS,GAEJ,EASF,SAASyW,EAAgBC,EAAgBzd,EAAWqF,GACzD,IAAMwB,EAAkB4W,EAAeN,qBACvC,IAAKtW,EACH,OAAO,KAET,IAAME,EAAS0W,EAAeF,YAC9B,OAAO,EAAA1C,EAAW,aAChBhU,EACA,EACAA,EAAgBha,OAChBka,EACA/G,EACAqF,GAEH,IAAAla,EAEc2xB,EAAc1xB,QAAAC,QAAAF;;ACb7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,6BAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,0BAAA,EA5UA,IAAAsmB,EAAAriB,QAAA,iBAcA,SAASsuB,EACP7W,EACA8W,EACAC,EACA7W,EACA3F,EACAC,EACA0a,GAEA,IAIIjV,EAJEkC,EAAKnC,EAAgB8W,GACrB1U,EAAKpC,EAAgB8W,EAAU,GAC/B7b,EAAK+E,EAAgB+W,GAAW5U,EAChCjH,EAAK8E,EAAgB+W,EAAU,GAAK3U,EAE1C,GAAW,IAAPnH,GAAmB,IAAPC,EACd+E,EAAS6W,MACJ,CACL,IAAMxO,IAAM/N,EAAI4H,GAAMlH,GAAMT,EAAI4H,GAAMlH,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAIoN,EAAI,EACNrI,EAAS8W,MACJ,CAAA,GAAIzO,EAAI,EAAG,CAChB,IAAK,IAAI9hB,EAAI,EAAGA,EAAI0Z,IAAU1Z,EAC5B0uB,EAAa1uB,IAAK,EAAA8iB,EAAI,MACpBtJ,EAAgB8W,EAAUtwB,GAC1BwZ,EAAgB+W,EAAUvwB,GAC1B8hB,GAIJ,YADA4M,EAAalvB,OAASka,GAGtBD,EAAS6W,GAGb,IAAK,IAAItwB,EAAI,EAAGA,EAAI0Z,IAAU1Z,EAC5B0uB,EAAa1uB,GAAKwZ,EAAgBC,EAASzZ,GAE7C0uB,EAAalvB,OAASka,EAajB,SAAS8W,EAAgBhX,EAAiBC,EAAQrZ,EAAKsZ,EAAQvB,GACpE,IAAIwD,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAClC,IAAKA,GAAUC,EAAQD,EAASrZ,EAAKqZ,GAAUC,EAAQ,CACrD,IAAMmC,EAAKrC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GAC9BgX,GAAe,EAAAC,EAAS,iBAAC/U,EAAIC,EAAIC,EAAIC,GACvC2U,EAAetY,IACjBA,EAAMsY,GAER9U,EAAKE,EACLD,EAAKE,EAEP,OAAO3D,EAWF,SAASwY,EACdnX,EACAC,EACAmX,EACAlX,EACAvB,GAEA,IAAK,IAAInY,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjBmY,EAAMqY,EAAgBhX,EAAiBC,EAAQrZ,EAAKsZ,EAAQvB,GAC5DsB,EAASrZ,EAEX,OAAO+X,EAWF,SAAS0Y,EACdrX,EACAC,EACAqX,EACApX,EACAvB,GAEA,IAAK,IAAInY,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnBmY,EAAMwY,EAAqBnX,EAAiBC,EAAQmX,EAAMlX,EAAQvB,GAClEsB,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAO2Y,EAiBF,SAAS4Y,EACdvX,EACAC,EACArZ,EACAsZ,EACAsX,EACAC,EACAld,EACAC,EACA0a,EACAC,EACAuC,GAEA,GAAIzX,GAAUrZ,EACZ,OAAOuuB,EAET,IAAI3uB,EAAG+hB,EACP,GAAiB,IAAbiP,EAAgB,CAQlB,IANAjP,GAAkB,EAAA2O,EAAS,iBACzB3c,EACAC,EACAwF,EAAgBC,GAChBD,EAAgBC,EAAS,KAELkV,EAAoB,CACxC,IAAK3uB,EAAI,EAAGA,EAAI0Z,IAAU1Z,EACxB0uB,EAAa1uB,GAAKwZ,EAAgBC,EAASzZ,GAG7C,OADA0uB,EAAalvB,OAASka,EACfqI,EAET,OAAO4M,EAETuC,EAAWA,GAAsB,CAACrC,IAAKA,KAEvC,IADA,IAAIxtB,EAAQoY,EAASC,EACdrY,EAAQjB,GAWb,GAVAiwB,EACE7W,EACAnY,EAAQqY,EACRrY,EACAqY,EACA3F,EACAC,EACAkd,IAEFnP,GAAkB,EAAA2O,EAAS,iBAAC3c,EAAGC,EAAGkd,EAAS,GAAIA,EAAS,KAClCvC,EAAoB,CAExC,IADAA,EAAqB5M,EAChB/hB,EAAI,EAAGA,EAAI0Z,IAAU1Z,EACxB0uB,EAAa1uB,GAAKkxB,EAASlxB,GAE7B0uB,EAAalvB,OAASka,EACtBrY,GAASqY,OAYTrY,GACEqY,EACAtF,KAAK+D,KACD/D,KAAKsQ,KAAK3C,GAAmB3N,KAAKsQ,KAAKiK,IACvCqC,EACA,EACF,GAIR,GAAIC,IAEFZ,EACE7W,EACApZ,EAAMsZ,EACND,EACAC,EACA3F,EACAC,EACAkd,IAEFnP,GAAkB,EAAA2O,EAAS,iBAAC3c,EAAGC,EAAGkd,EAAS,GAAIA,EAAS,KAClCvC,GAAoB,CAExC,IADAA,EAAqB5M,EAChB/hB,EAAI,EAAGA,EAAI0Z,IAAU1Z,EACxB0uB,EAAa1uB,GAAKkxB,EAASlxB,GAE7B0uB,EAAalvB,OAASka,EAG1B,OAAOiV,EAiBF,SAASwC,EACd3X,EACAC,EACAmX,EACAlX,EACAsX,EACAC,EACAld,EACAC,EACA0a,EACAC,EACAuC,GAEAA,EAAWA,GAAsB,CAACrC,IAAKA,KACvC,IAAK,IAAI7uB,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjB2uB,EAAqBoC,EACnBvX,EACAC,EACArZ,EACAsZ,EACAsX,EACAC,EACAld,EACAC,EACA0a,EACAC,EACAuC,GAEFzX,EAASrZ,EAEX,OAAOuuB,EAiBF,SAASyC,EACd5X,EACAC,EACAqX,EACApX,EACAsX,EACAC,EACAld,EACAC,EACA0a,EACAC,EACAuC,GAEAA,EAAWA,GAAsB,CAACrC,IAAKA,KACvC,IAAK,IAAI7uB,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnB2uB,EAAqBwC,EACnB3X,EACAC,EACAmX,EACAlX,EACAsX,EACAC,EACAld,EACAC,EACA0a,EACAC,EACAuC,GAEFzX,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAOmvB;;ACtOT,aA7FO,SAAS0C,EAAkB7X,EAAiBC,EAAQ3F,EAAY4F,GACrE,IAAK,IAAI1Z,EAAI,EAAGyI,EAAKqL,EAAWtU,OAAQQ,EAAIyI,IAAMzI,EAChDwZ,EAAgBC,KAAY3F,EAAW9T,GAEzC,OAAOyZ,EAUF,SAAS6X,EACd9X,EACAC,EACAhC,EACAiC,GAEA,IAAK,IAAI1Z,EAAI,EAAGyI,EAAKgP,EAAYjY,OAAQQ,EAAIyI,IAAMzI,EAEjD,IADA,IAAM8T,EAAa2D,EAAYzX,GACtBqiB,EAAI,EAAGA,EAAI3I,IAAU2I,EAC5B7I,EAAgBC,KAAY3F,EAAWuO,GAG3C,OAAO5I,EAWF,SAAS8X,EACd/X,EACAC,EACA+X,EACA9X,EACAkX,GAEAA,EAAOA,GAAc,GAErB,IADA,IAAI5wB,EAAI,EACCqiB,EAAI,EAAG6E,EAAKsK,EAAahyB,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CACrD,IAAMjiB,EAAMkxB,EACV9X,EACAC,EACA+X,EAAanP,GACb3I,GAEFkX,EAAK5wB,KAAOI,EACZqZ,EAASrZ,EAGX,OADAwwB,EAAKpxB,OAASQ,EACP4wB,EAWF,SAASa,EACdjY,EACAC,EACAiY,EACAhY,EACAoX,GAEAA,EAAQA,GAAgB,GAExB,IADA,IAAI9wB,EAAI,EACCqiB,EAAI,EAAG6E,EAAKwK,EAAclyB,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CACtD,IAAMuO,EAAOW,EACX/X,EACAC,EACAiY,EAAcrP,GACd3I,EACAoX,EAAM9wB,IAEY,IAAhB4wB,EAAKpxB,SACPoxB,EAAK,GAAKnX,GAEZqX,EAAM9wB,KAAO4wB,EACbnX,EAASmX,EAAKA,EAAKpxB,OAAS,GAG9B,OADAsxB,EAAMtxB,OAASQ,EACR8wB,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,6BAAA;;ACmXA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,cAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,KAAA,EA9bA,IAAA1M,EAAAriB,QAAA,iBAaO,SAAS4vB,EACdnY,EACAC,EACArZ,EACAsZ,EACA8U,EACAoD,EACAC,GA2BA,OAzBAA,OACgCpsB,IAA9BosB,EAA0CA,EAA4B,GACnED,IACHxxB,EAAM0xB,EACJtY,EACAC,EACArZ,EACAsZ,EACA8U,EACAqD,EACA,GAEFrY,EAAkBqY,EAClBpY,EAAS,EACTC,EAAS,GAEXmY,EAA0BryB,OAASuyB,EACjCvY,EACAC,EACArZ,EACAsZ,EACA8U,EACAqD,EACA,GAEKA,EAcF,SAASE,EACdvY,EACAC,EACArZ,EACAsZ,EACA8U,EACAqD,EACAG,GAEA,IAAMjyB,GAAKK,EAAMqZ,GAAUC,EAC3B,GAAI3Z,EAAI,EAAG,CACT,KAAO0Z,EAASrZ,EAAKqZ,GAAUC,EAC7BmY,EAA0BG,KAAsBxY,EAAgBC,GAChEoY,EAA0BG,KACxBxY,EAAgBC,EAAS,GAE7B,OAAOuY,EAGT,IAAMC,EAAU,IAAIxxB,MAAMV,GAC1BkyB,EAAQ,GAAK,EACbA,EAAQlyB,EAAI,GAAK,EAIjB,IAFA,IAAMmyB,EAAQ,CAACzY,EAAQrZ,EAAMsZ,GACzBrY,EAAQ,EACL6wB,EAAM1yB,OAAS,GAAG,CAQvB,IAPA,IAAM2yB,EAAOD,EAAM3jB,MACb6jB,EAAQF,EAAM3jB,MAChB8jB,EAAqB,EACnB1W,EAAKnC,EAAgB4Y,GACrBxW,EAAKpC,EAAgB4Y,EAAQ,GAC7BvW,EAAKrC,EAAgB2Y,GACrBrW,EAAKtC,EAAgB2Y,EAAO,GACzBnyB,EAAIoyB,EAAQ1Y,EAAQ1Z,EAAImyB,EAAMnyB,GAAK0Z,EAAQ,CAClD,IAAM3F,EAAIyF,EAAgBxZ,GACpBgU,EAAIwF,EAAgBxZ,EAAI,GACxB+hB,GAAkB,EAAAF,EAAsB,wBAAC9N,EAAGC,EAAG2H,EAAIC,EAAIC,EAAIC,GAC7DiG,EAAkBsQ,IACpBhxB,EAAQrB,EACRqyB,EAAqBtQ,GAGrBsQ,EAAqB7D,IACvByD,GAAS5wB,EAAQoY,GAAUC,GAAU,EACjC0Y,EAAQ1Y,EAASrY,GACnB6wB,EAAMhqB,KAAKkqB,EAAO/wB,GAEhBA,EAAQqY,EAASyY,GACnBD,EAAMhqB,KAAK7G,EAAO8wB,IAIxB,IAAK,IAAInyB,EAAI,EAAGA,EAAID,IAAKC,EACnBiyB,EAAQjyB,KACV6xB,EAA0BG,KACxBxY,EAAgBC,EAASzZ,EAAI0Z,GAC/BmY,EAA0BG,KACxBxY,EAAgBC,EAASzZ,EAAI0Z,EAAS,IAG5C,OAAOsY,EAeF,SAASM,EACd9Y,EACAC,EACAmX,EACAlX,EACA8U,EACAqD,EACAG,EACAO,GAEA,IAAK,IAAIvyB,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjBgyB,EAAmBD,EACjBvY,EACAC,EACArZ,EACAsZ,EACA8U,EACAqD,EACAG,GAEFO,EAAerqB,KAAK8pB,GACpBvY,EAASrZ,EAEX,OAAO4xB,EAeF,SAASQ,EACdhZ,EACAC,EACAqX,EACApX,EACA8U,EACAqD,EACAG,EACAS,GAEA,IAAK,IAAIzyB,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACbuyB,EAAiB,GACvBP,EAAmBM,EACjB9Y,EACAC,EACAmX,EACAlX,EACA8U,EACAqD,EACAG,EACAO,GAEFE,EAAgBvqB,KAAKqqB,GACrB9Y,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAOwyB,EAcF,SAASF,EACdtY,EACAC,EACArZ,EACAsZ,EACA8U,EACAqD,EACAG,GAEA,GAAI5xB,GAAOqZ,EAASC,EAAQ,CAE1B,KAAOD,EAASrZ,EAAKqZ,GAAUC,EAC7BmY,EAA0BG,KAAsBxY,EAAgBC,GAChEoY,EAA0BG,KACxBxY,EAAgBC,EAAS,GAE7B,OAAOuY,EAET,IAAIrW,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAElCoY,EAA0BG,KAAsBrW,EAChDkW,EAA0BG,KAAsBpW,EAChD,IAAIC,EAAKF,EACLG,EAAKF,EACT,IAAKnC,GAAUC,EAAQD,EAASrZ,EAAKqZ,GAAUC,EAC7CmC,EAAKrC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,IAC1B,EAAAsI,EAAe,iBAACpG,EAAIC,EAAIC,EAAIC,GAAM0S,IAEpCqD,EAA0BG,KAAsBnW,EAChDgW,EAA0BG,KAAsBlW,EAChDH,EAAKE,EACLD,EAAKE,GAQT,OALID,GAAMF,GAAMG,GAAMF,IAEpBiW,EAA0BG,KAAsBnW,EAChDgW,EAA0BG,KAAsBlW,GAE3CkW,EAQF,SAASU,EAAKn0B,EAAOyb,GAC1B,OAAOA,EAAY5F,KAAK+O,MAAM5kB,EAAQyb,GAsBjC,SAAS2Y,EACdnZ,EACAC,EACArZ,EACAsZ,EACAM,EACA6X,EACAG,GAGA,GAAIvY,GAAUrZ,EACZ,OAAO4xB,EAGT,IAQInW,EAAIC,EARJH,EAAK+W,EAAKlZ,EAAgBC,GAASO,GACnC4B,EAAK8W,EAAKlZ,EAAgBC,EAAS,GAAIO,GAC3CP,GAAUC,EAEVmY,EAA0BG,KAAsBrW,EAChDkW,EAA0BG,KAAsBpW,EAIhD,GAIE,GAHAC,EAAK6W,EAAKlZ,EAAgBC,GAASO,GACnC8B,EAAK4W,EAAKlZ,EAAgBC,EAAS,GAAIO,IACvCP,GAAUC,IACItZ,EAOZ,OAFAyxB,EAA0BG,KAAsBnW,EAChDgW,EAA0BG,KAAsBlW,EACzCkW,QAEFnW,GAAMF,GAAMG,GAAMF,GAC3B,KAAOnC,EAASrZ,GAAK,CAEnB,IAAM2b,EAAK2W,EAAKlZ,EAAgBC,GAASO,GACnCgC,EAAK0W,EAAKlZ,EAAgBC,EAAS,GAAIO,GAG7C,GAFAP,GAAUC,EAENqC,GAAMF,GAAMG,GAAMF,EAAtB,CAIA,IAAMlH,EAAMiH,EAAKF,EACX9G,EAAMiH,EAAKF,EAEX5G,EAAM+G,EAAKJ,EACX1G,EAAM+G,EAAKJ,EAKfhH,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3DgH,EAAKE,EACLD,EAAKE,IAMP6V,EAA0BG,KAAsBnW,EAChDgW,EAA0BG,KAAsBlW,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACLD,EAAKE,IAKP,OAFA6V,EAA0BG,KAAsBnW,EAChDgW,EAA0BG,KAAsBlW,EACzCkW,EAeF,SAASY,EACdpZ,EACAC,EACAmX,EACAlX,EACAM,EACA6X,EACAG,EACAO,GAEA,IAAK,IAAIvyB,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjBgyB,EAAmBW,EACjBnZ,EACAC,EACArZ,EACAsZ,EACAM,EACA6X,EACAG,GAEFO,EAAerqB,KAAK8pB,GACpBvY,EAASrZ,EAEX,OAAO4xB,EAeF,SAASa,EACdrZ,EACAC,EACAqX,EACApX,EACAM,EACA6X,EACAG,EACAS,GAEA,IAAK,IAAIzyB,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACbuyB,EAAiB,GACvBP,EAAmBY,EACjBpZ,EACAC,EACAmX,EACAlX,EACAM,EACA6X,EACAG,EACAO,GAEFE,EAAgBvqB,KAAKqqB,GACrB9Y,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAOwyB;;AC5XT,aAlFO,SAASc,EACdtZ,EACAC,EACArZ,EACAsZ,EACAjC,GAEAA,OAA8BhS,IAAhBgS,EAA4BA,EAAc,GAExD,IADA,IAAIzX,EAAI,EACCqiB,EAAI5I,EAAQ4I,EAAIjiB,EAAKiiB,GAAK3I,EACjCjC,EAAYzX,KAAOwZ,EAAgB7W,MAAM0f,EAAGA,EAAI3I,GAGlD,OADAjC,EAAYjY,OAASQ,EACdyX,EAWF,SAASsb,EACdvZ,EACAC,EACAmX,EACAlX,EACA8X,GAEAA,OAAgC/rB,IAAjB+rB,EAA6BA,EAAe,GAE3D,IADA,IAAIxxB,EAAI,EACCqiB,EAAI,EAAG6E,EAAK0J,EAAKpxB,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CAC7C,IAAMjiB,EAAMwwB,EAAKvO,GACjBmP,EAAaxxB,KAAO8yB,EAClBtZ,EACAC,EACArZ,EACAsZ,EACA8X,EAAaxxB,IAEfyZ,EAASrZ,EAGX,OADAoxB,EAAahyB,OAASQ,EACfwxB,EAYF,SAASwB,EACdxZ,EACAC,EACAqX,EACApX,EACAgY,GAEAA,OAAkCjsB,IAAlBisB,EAA8BA,EAAgB,GAE9D,IADA,IAAI1xB,EAAI,EACCqiB,EAAI,EAAG6E,EAAK4J,EAAMtxB,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CAC9C,IAAMuO,EAAOE,EAAMzO,GACnBqP,EAAc1xB,KACI,IAAhB4wB,EAAKpxB,QAAgBoxB,EAAK,KAAOnX,EAC7B,GACAsZ,EACEvZ,EACAC,EACAmX,EACAlX,EACAgY,EAAc1xB,IAEtByZ,EAASmX,EAAKA,EAAKpxB,OAAS,GAG9B,OADAkyB,EAAclyB,OAASQ,EAChB0xB,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,6BAAA;;ACrCA,aA9CO,SAASuB,EAAWzZ,EAAiBC,EAAQrZ,EAAKsZ,GAIvD,IAHA,IAAIwZ,EAAY,EACZvX,EAAKnC,EAAgBpZ,EAAMsZ,GAC3BkC,EAAKpC,EAAgBpZ,EAAMsZ,EAAS,GACjCD,EAASrZ,EAAKqZ,GAAUC,EAAQ,CACrC,IAAMmC,EAAKrC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GACpCyZ,GAAatX,EAAKC,EAAKF,EAAKG,EAC5BH,EAAKE,EACLD,EAAKE,EAEP,OAAOoX,EAAY,EAUd,SAASC,EAAY3Z,EAAiBC,EAAQmX,EAAMlX,GAEzD,IADA,IAAIiB,EAAO,EACF3a,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjB2a,GAAQsY,EAAWzZ,EAAiBC,EAAQrZ,EAAKsZ,GACjDD,EAASrZ,EAEX,OAAOua,EAUF,SAASyY,EAAa5Z,EAAiBC,EAAQqX,EAAOpX,GAE3D,IADA,IAAIiB,EAAO,EACF3a,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnB2a,GAAQwY,EAAY3Z,EAAiBC,EAAQmX,EAAMlX,GACnDD,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAOmb,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,YAAA,EAAA,QAAA,aAAA;;ACkIyB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxLzB,IAAA0Y,EAAA1vB,EAAA5B,QAAA,wBACAuxB,EAAAvxB,QAAA,qBACAoiB,EAAApiB,QAAA,gBACAwxB,EAAAxxB,QAAA,qBACAyxB,EAAAzxB,QAAA,sBACA0xB,EAAA1xB,QAAA,qBACA2xB,EAAA3xB,QAAA,kBAA4D,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAE5D,IAOM4tB,EAAUC,SAAAA,GAAA12B,EAAAy2B,EAASlE,EAAc,SAAvB,IAAApyB,EAAAC,EAAAq2B,GAMd,SAAAA,EAAYlc,EAAakY,GAAQ,IAAAnyB,EA2B9B,OA3B8BC,EAAAk2B,KAAAA,IAC/Bn2B,EAAAH,EAAAM,KAAA,OAMKk2B,WAAa,EAMlBr2B,EAAKs2B,mBAAqB,OAEXruB,IAAXkqB,GAAyBlvB,MAAMC,QAAQ+W,EAAY,IAMrDja,EAAKu2B,eAEDtc,EAEFkY,GATFnyB,EAAKw2B,mBACHrE,EAC8BlY,GASjCja,EAqIF,OAlIDK,EAAA81B,EAAA,CAAA,CAAAr1B,IAAA,QAAAC,MAKA,WACE,OAAO,IAAIo1B,EAAW,KAAKna,gBAAgB7W,QAAS,KAAKgtB,UAG3D,CAAArxB,IAAA,iBAAAC,MAOA,SAAewV,EAAGC,EAAG0a,EAAcC,GACjC,OAAIA,GAAqB,EAAAtW,EAAwB,0BAAC,KAAK8F,YAAapK,EAAGC,GAC9D2a,GAEL,KAAKmF,mBAAqB,KAAKrF,gBACjC,KAAKoF,UAAYzf,KAAKsQ,MACpB,EAAA8L,EAAe,iBACb,KAAKhX,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL,IAGJ,KAAKoa,kBAAoB,KAAKrF,gBAEzB,EAAAsC,EAAkB,oBACvB,KAAKvX,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL,KAAKma,WACL,EACA9f,EACAC,EACA0a,EACAC,MAIJ,CAAArwB,IAAA,UAAAC,MAKA,WACE,OAAO,EAAA01B,EAAc,YACnB,KAAKza,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,UAIT,CAAApb,IAAA,iBAAAC,MAKA,WACE,OAAO,EAAAu0B,EAAkB,oBACvB,KAAKtZ,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,UAIT,CAAApb,IAAA,gCAAAC,MAKA,SAA8BiwB,GAC5B,IAAMqD,EAA4B,GAUlC,OATAA,EAA0BryB,QAAS,EAAAuyB,EAAc,gBAC/C,KAAKvY,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL8U,EACAqD,EACA,GAEK,IAAI8B,EAAW9B,EAA2B,QAGnD,CAAAvzB,IAAA,UAAAC,MAKA,WACE,MAAO,eAGT,CAAAD,IAAA,mBAAAC,MAMA,SAAiBmZ,GACf,OAAO,IAGT,CAAApZ,IAAA,iBAAAC,MAMA,SAAekZ,EAAakY,GAC1B,KAAKuE,UAAUvE,EAAQlY,EAAa,GAC/B,KAAK+B,kBACR,KAAKA,gBAAkB,IAEzB,KAAKA,gBAAgBha,QAAS,EAAA8xB,EAAkB,oBAC9C,KAAK9X,gBACL,EACA/B,EACA,KAAKiC,QAEP,KAAKhJ,cACNijB,EAtKaC,GAAuB91B,EAyKxB61B,EAAU51B,QAAAC,QAAAF;;ACrEL,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnHpB,IAAAu1B,EAAA1vB,EAAA5B,QAAA,wBACAoiB,EAAApiB,QAAA,gBACAwxB,EAAAxxB,QAAA,qBACAqiB,EAAAriB,QAAA,cAAwD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAExD,IAMMouB,EAAKP,SAAAA,GAAA12B,EAAAi3B,EAAS1E,EAAc,SAAvB,IAAApyB,EAAAC,EAAA62B,GAKT,SAAAA,EAAY1c,EAAakY,GAAQ,IAAAnyB,EAEU,OAFVC,EAAA02B,KAAAA,IAC/B32B,EAAAH,EAAAM,KAAA,OACKo2B,eAAetc,EAAakY,GAAQnyB,EA8F1C,OA3FDK,EAAAs2B,EAAA,CAAA,CAAA71B,IAAA,QAAAC,MAKA,WACE,IAAMmiB,EAAQ,IAAIyT,EAAM,KAAK3a,gBAAgB7W,QAAS,KAAKgtB,QAE3D,OADAjP,EAAM0T,gBAAgB,MACf1T,IAGT,CAAApiB,IAAA,iBAAAC,MAOA,SAAewV,EAAGC,EAAG0a,EAAcC,GACjC,IAAMnV,EAAkB,KAAKA,gBACvBuI,GAAkB,EAAA2O,EAAS,iBAC/B3c,EACAC,EACAwF,EAAgB,GAChBA,EAAgB,IAElB,GAAIuI,EAAkB4M,EAAoB,CAExC,IADA,IAAMjV,EAAS,KAAKA,OACX1Z,EAAI,EAAGA,EAAI0Z,IAAU1Z,EAC5B0uB,EAAa1uB,GAAKwZ,EAAgBxZ,GAGpC,OADA0uB,EAAalvB,OAASka,EACfqI,EAET,OAAO4M,IAGT,CAAArwB,IAAA,iBAAAC,MAKA,WACE,OAAQ,KAAKib,gBAAuB,KAAKA,gBAAgB7W,QAA1B,KAGjC,CAAArE,IAAA,gBAAAC,MAKA,SAAcmZ,GACZ,OAAO,EAAA0B,EAA4B,8BAAC,KAAKI,gBAAiB9B,KAG5D,CAAApZ,IAAA,UAAAC,MAKA,WACE,MAAO,UAGT,CAAAD,IAAA,mBAAAC,MAMA,SAAiBmZ,GACf,OAAO,EAAAa,EAAU,YAACb,EAAQ,KAAK8B,gBAAgB,GAAI,KAAKA,gBAAgB,MAG1E,CAAAlb,IAAA,iBAAAC,MAKA,SAAekZ,EAAakY,GAC1B,KAAKuE,UAAUvE,EAAQlY,EAAa,GAC/B,KAAK+B,kBACR,KAAKA,gBAAkB,IAEzB,KAAKA,gBAAgBha,QAAS,EAAA6xB,EAAiB,mBAC7C,KAAK7X,gBACL,EACA/B,EACA,KAAKiC,QAEP,KAAKhJ,cACNyjB,EArGQP,GAAuB91B,EAwGnBq2B,EAAKp2B,QAAAC,QAAAF;;AC0BpB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,yBAAA,EAAA,QAAA,qBAAA,EAAA,QAAA,sBAAA,EAAA,QAAA,uBAAA,EA7IA,IAAAqmB,EAAApiB,QAAA,mBAUO,SAASsyB,EACd7a,EACAC,EACArZ,EACAsZ,EACAhC,GAmBA,QAjBgB,EAAAyC,EAAa,eAC3BzC,EAKA,SAAU5D,GACR,OAAQwgB,EACN9a,EACAC,EACArZ,EACAsZ,EACA5F,EAAW,GACXA,EAAW,MAgBZ,SAASwgB,EACd9a,EACAC,EACArZ,EACAsZ,EACA3F,EACAC,GAYA,IAHA,IAAIugB,EAAK,EACL5Y,EAAKnC,EAAgBpZ,EAAMsZ,GAC3BkC,EAAKpC,EAAgBpZ,EAAMsZ,EAAS,GACjCD,EAASrZ,EAAKqZ,GAAUC,EAAQ,CACrC,IAAMmC,EAAKrC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GAChCmC,GAAM5H,EACJ8H,EAAK9H,IAAM6H,EAAKF,IAAO3H,EAAI4H,IAAO7H,EAAI4H,IAAOG,EAAKF,GAAM,GAC1D2Y,IAEOzY,GAAM9H,IAAM6H,EAAKF,IAAO3H,EAAI4H,IAAO7H,EAAI4H,IAAOG,EAAKF,GAAM,GAClE2Y,IAEF5Y,EAAKE,EACLD,EAAKE,EAEP,OAAc,IAAPyY,EAYF,SAASC,EACdhb,EACAC,EACAmX,EACAlX,EACA3F,EACAC,GAEA,GAAoB,IAAhB4c,EAAKpxB,OACP,OAAO,EAET,IAAK80B,EAAqB9a,EAAiBC,EAAQmX,EAAK,GAAIlX,EAAQ3F,EAAGC,GACrE,OAAO,EAET,IAAK,IAAIhU,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAC1C,GACEs0B,EAAqB9a,EAAiBoX,EAAK5wB,EAAI,GAAI4wB,EAAK5wB,GAAI0Z,EAAQ3F,EAAGC,GAEvE,OAAO,EAGX,OAAO,EAYF,SAASygB,EACdjb,EACAC,EACAqX,EACApX,EACA3F,EACAC,GAEA,GAAqB,IAAjB8c,EAAMtxB,OACR,OAAO,EAET,IAAK,IAAIQ,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnB,GAAIw0B,EAAsBhb,EAAiBC,EAAQmX,EAAMlX,EAAQ3F,EAAGC,GAClE,OAAO,EAETyF,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAO;;AClCT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,EAAA,QAAA,8BAAA,EA1GA,IAAAsC,EAAAC,QAAA,kBACA2yB,EAAA3yB,QAAA,iBAeO,SAAS4yB,EACdnb,EACAC,EACAmX,EACAlX,EACAkb,EACAC,EACA7c,GAOA,IALA,IAAIhY,EAAGyI,EAAIsL,EAAG4H,EAAIE,EAAID,EAAIE,EACpB9H,EAAI4gB,EAAYC,EAAoB,GAEpCC,EAAgB,GAEb3S,EAAI,EAAG4S,EAAKnE,EAAKpxB,OAAQ2iB,EAAI4S,IAAM5S,EAAG,CAC7C,IAAM/hB,EAAMwwB,EAAKzO,GAGjB,IAFAxG,EAAKnC,EAAgBpZ,EAAMsZ,GAC3BkC,EAAKpC,EAAgBpZ,EAAMsZ,EAAS,GAC/B1Z,EAAIyZ,EAAQzZ,EAAII,EAAKJ,GAAK0Z,EAC7BmC,EAAKrC,EAAgBxZ,GACrB8b,EAAKtC,EAAgBxZ,EAAI,IACpBgU,GAAK4H,GAAME,GAAM9H,GAAO4H,GAAM5H,GAAKA,GAAK8H,KAC3C/H,GAAMC,EAAI4H,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCmZ,EAAc5sB,KAAK6L,IAErB4H,EAAKE,EACLD,EAAKE,EAKT,IAAIkZ,EAASnG,IACToG,GAAoB/b,EAAAA,EAGxB,IAFA4b,EAAcxzB,KAAKjC,EAAS,WAC5Bsc,EAAKmZ,EAAc,GACd90B,EAAI,EAAGyI,EAAKqsB,EAAct1B,OAAQQ,EAAIyI,IAAMzI,EAAG,CAClD6b,EAAKiZ,EAAc90B,GACnB,IAAMk1B,EAAgB9gB,KAAK6F,IAAI4B,EAAKF,GAChCuZ,EAAgBD,IAClBlhB,GAAK4H,EAAKE,GAAM,GACZ,EAAA2Y,EAAqB,uBAAChb,EAAiBC,EAAQmX,EAAMlX,EAAQ3F,EAAGC,KAClEghB,EAASjhB,EACTkhB,EAAmBC,IAGvBvZ,EAAKE,EAOP,OALImT,MAAMgG,KAGRA,EAASJ,EAAYC,IAEnB7c,GACFA,EAAK9P,KAAK8sB,EAAQhhB,EAAGihB,GACdjd,GAEF,CAACgd,EAAQhhB,EAAGihB,GAYd,SAASE,EACd3b,EACAC,EACAqX,EACApX,EACAkb,GAGA,IADA,IAAIQ,EAAiB,GACZp1B,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnBo1B,EAAiBT,EACfnb,EACAC,EACAmX,EACAlX,EACAkb,EACA,EAAI50B,EACJo1B,GAEF3b,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAO41B;;AC9ET,aAbO,SAAS5L,EAAQhQ,EAAiBC,EAAQrZ,EAAKsZ,EAAQU,GAC5D,IAAIib,EAEJ,IADA5b,GAAUC,EACHD,EAASrZ,EAAKqZ,GAAUC,EAK7B,GAJA2b,EAAMjb,EACJZ,EAAgB7W,MAAM8W,EAASC,EAAQD,GACvCD,EAAgB7W,MAAM8W,EAAQA,EAASC,IAGvC,OAAO2b,EAGX,OAAO,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACyMA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,QAAA,0BAAA,EAAA,QAAA,qBAAA,EAAA,QAAA,0BAAA,EAAA,QAAA,+BAAA,EApOA,IAAAlR,EAAApiB,QAAA,mBAOAuzB,EAAAvzB,QAAA,iBACA2yB,EAAA3yB,QAAA,iBAUO,SAASwzB,EACd/b,EACAC,EACArZ,EACAsZ,EACAhC,GAEA,IAAM8d,GAAoB,EAAA7b,EAAqB,wBAC7C,EAAAhC,EAAW,eACX6B,EACAC,EACArZ,EACAsZ,GAEF,SAAK,EAAAgD,EAAU,YAAChF,EAAQ8d,QAGpB,EAAAhd,EAAc,gBAACd,EAAQ8d,KAGvBA,EAAkB,IAAM9d,EAAO,IAAM8d,EAAkB,IAAM9d,EAAO,KAGpE8d,EAAkB,IAAM9d,EAAO,IAAM8d,EAAkB,IAAM9d,EAAO,KAGjE,EAAA+d,EAAc,SACnBjc,EACAC,EACArZ,EACAsZ,EAOA,SAAUgc,EAAQC,GAChB,OAAO,EAAA1Y,EAAiB,mBAACvF,EAAQge,EAAQC,QAaxC,SAASC,EACdpc,EACAC,EACAmX,EACAlX,EACAhC,GAEA,IAAK,IAAI1X,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,GACEu1B,EAAqB/b,EAAiBC,EAAQmX,EAAK5wB,GAAI0Z,EAAQhC,GAE/D,OAAO,EAET+B,EAASmX,EAAK5wB,GAEhB,OAAO,EAWF,SAAS61B,EACdrc,EACAC,EACArZ,EACAsZ,EACAhC,GAEA,QAAI6d,EAAqB/b,EAAiBC,EAAQrZ,EAAKsZ,EAAQhC,QAI7D,EAAA4c,EAAoB,sBAClB9a,EACAC,EACArZ,EACAsZ,EACAhC,EAAO,GACPA,EAAO,SAMT,EAAA4c,EAAoB,sBAClB9a,EACAC,EACArZ,EACAsZ,EACAhC,EAAO,GACPA,EAAO,SAMT,EAAA4c,EAAoB,sBAClB9a,EACAC,EACArZ,EACAsZ,EACAhC,EAAO,GACPA,EAAO,QAMT,EAAA4c,EAAoB,sBAClB9a,EACAC,EACArZ,EACAsZ,EACAhC,EAAO,GACPA,EAAO,OAgBN,SAASoe,EACdtc,EACAC,EACAmX,EACAlX,EACAhC,GAEA,IAAKme,EAAqBrc,EAAiBC,EAAQmX,EAAK,GAAIlX,EAAQhC,GAClE,OAAO,EAET,GAAoB,IAAhBkZ,EAAKpxB,OACP,OAAO,EAET,IAAK,IAAIQ,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAC1C,IACE,EAAAq0B,EAAwB,0BACtB7a,EACAoX,EAAK5wB,EAAI,GACT4wB,EAAK5wB,GACL0Z,EACAhC,KAIC6d,EACC/b,EACAoX,EAAK5wB,EAAI,GACT4wB,EAAK5wB,GACL0Z,EACAhC,GAGF,OAAO,EAIb,OAAO,EAWF,SAASqe,EACdvc,EACAC,EACAqX,EACApX,EACAhC,GAEA,IAAK,IAAI1X,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnB,GACE81B,EAA0Btc,EAAiBC,EAAQmX,EAAMlX,EAAQhC,GAEjE,OAAO,EAET+B,EAASmX,EAAKA,EAAKpxB,OAAS,GAE9B,OAAO;;AClNT,aAVO,SAASiY,EAAY+B,EAAiBC,EAAQrZ,EAAKsZ,GACxD,KAAOD,EAASrZ,EAAMsZ,GAAQ,CAC5B,IAAK,IAAI1Z,EAAI,EAAGA,EAAI0Z,IAAU1Z,EAAG,CAC/B,IAAMK,EAAMmZ,EAAgBC,EAASzZ,GACrCwZ,EAAgBC,EAASzZ,GAAKwZ,EAAgBpZ,EAAMsZ,EAAS1Z,GAC7DwZ,EAAgBpZ,EAAMsZ,EAAS1Z,GAAKK,EAEtCoZ,GAAUC,EACVtZ,GAAOsZ,GAEX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA;;ACyLA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,QAAA,sBAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,uBAAA,EA1MA,IAAAsc,EAAAj0B,QAAA,gBAYO,SAASk0B,EAAsBzc,EAAiBC,EAAQrZ,EAAKsZ,GAMlE,IAHA,IAAIwc,EAAO,EACPva,EAAKnC,EAAgBpZ,EAAMsZ,GAC3BkC,EAAKpC,EAAgBpZ,EAAMsZ,EAAS,GACjCD,EAASrZ,EAAKqZ,GAAUC,EAAQ,CACrC,IAAMmC,EAAKrC,EAAgBC,GACrBqC,EAAKtC,EAAgBC,EAAS,GACpCyc,IAASra,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,EAEP,OAAgB,IAAToa,OAAazwB,EAAYywB,EAAO,EAgBlC,SAASC,EACd3c,EACAC,EACAmX,EACAlX,EACA0c,GAEAA,OAAkB3wB,IAAV2wB,GAAsBA,EAC9B,IAAK,IAAIp2B,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACXq2B,EAAcJ,EAClBzc,EACAC,EACArZ,EACAsZ,GAEF,GAAU,IAAN1Z,GACF,GAAKo2B,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGX5c,EAASrZ,EAEX,OAAO,EAgBF,SAASk2B,EACd9c,EACAC,EACAqX,EACApX,EACA0c,GAEA,IAAK,IAAIp2B,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM4wB,EAAOE,EAAM9wB,GACnB,IAAKm2B,EAAuB3c,EAAiBC,EAAQmX,EAAMlX,EAAQ0c,GACjE,OAAO,EAELxF,EAAKpxB,SACPia,EAASmX,EAAKA,EAAKpxB,OAAS,IAGhC,OAAO,EAgBF,SAAS+2B,EACd/c,EACAC,EACAmX,EACAlX,EACA0c,GAEAA,OAAkB3wB,IAAV2wB,GAAsBA,EAC9B,IAAK,IAAIp2B,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACXq2B,EAAcJ,EAClBzc,EACAC,EACArZ,EACAsZ,IAGM,IAAN1Z,EACKo2B,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,KAE1C,EAAAG,EAAkB,aAAChd,EAAiBC,EAAQrZ,EAAKsZ,GAEnDD,EAASrZ,EAEX,OAAOqZ,EAgBF,SAASgd,EACdjd,EACAC,EACAqX,EACApX,EACA0c,GAEA,IAAK,IAAIp2B,EAAI,EAAGyI,EAAKqoB,EAAMtxB,OAAQQ,EAAIyI,IAAMzI,EAC3CyZ,EAAS8c,EACP/c,EACAC,EACAqX,EAAM9wB,GACN0Z,EACA0c,GAGJ,OAAO3c,EAUF,SAASid,EAAYld,EAAiBoX,GAI3C,IAHA,IAAME,EAAQ,GACVrX,EAAS,EACTkd,EAAe,EACV32B,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GAEjB,GAAKi2B,EAAsBzc,EAAiBC,EAAQrZ,EAAK,GAElD,CACL,GAAqB,IAAjB0wB,EAAMtxB,OACR,SAEFsxB,EAAMA,EAAMtxB,OAAS,GAAG0I,KAAK0oB,EAAK+F,SALlC7F,EAAM5oB,KAAK0oB,EAAKjuB,MAAMg0B,EAAc32B,EAAI,IAO1C22B,EAAe32B,EAAI,EACnByZ,EAASrZ,EAEX,OAAO0wB;;ACgTT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAAA,QAAA,aAAA,EAAA,QAAA,WAAA,EAAA,QAAA,WAAA,EAAA,QAAA,YAAA,EAzfA,IAAA8F,EAAAjzB,EAAA5B,QAAA,oBACA80B,EAAAlzB,EAAA5B,QAAA,eACAsxB,EAAA1vB,EAAA5B,QAAA,wBACAuxB,EAAAvxB,QAAA,qBACAoiB,EAAApiB,QAAA,gBACAwxB,EAAAxxB,QAAA,qBACAD,EAAAC,QAAA,eACA+0B,EAAA/0B,QAAA,2BACA0xB,EAAA1xB,QAAA,qBACAg1B,EAAAh1B,QAAA,8BACAi1B,EAAAj1B,QAAA,oBACA2xB,EAAA3xB,QAAA,kBACA2yB,EAAA3yB,QAAA,sBACAqiB,EAAAriB,QAAA,cACAyxB,EAAAzxB,QAAA,sBACA8mB,EAAA9mB,QAAA,gBAAoD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAEpD,IAMMkxB,EAAOrD,SAAAA,GAAA12B,EAAA+5B,EAASxH,EAAc,SAAvB,IAAApyB,EAAAC,EAAA25B,GAYX,SAAAA,EAAYxf,EAAakY,EAAQiB,GAAM,IAAApzB,EA0DpC,OA1DoCC,EAAAw5B,KAAAA,IACrCz5B,EAAAH,EAAAM,KAAA,OAMKu5B,MAAQ,GAMb15B,EAAK25B,4BAA8B,EAMnC35B,EAAK45B,mBAAqB,KAM1B55B,EAAKq2B,WAAa,EAMlBr2B,EAAKs2B,mBAAqB,EAM1Bt2B,EAAK65B,mBAAqB,EAM1B75B,EAAK85B,yBAA2B,UAEjB7xB,IAAXkqB,GAAwBiB,GAC1BpzB,EAAKw2B,mBACHrE,EAC8BlY,GAEhCja,EAAK05B,MAAQtG,GAEbpzB,EAAKu2B,eAEDtc,EAEFkY,GAEHnyB,EAkTF,OA/SDK,EAAAo5B,EAAA,CAAA,CAAA34B,IAAA,mBAAAC,MAKA,SAAiB00B,GACV,KAAKzZ,iBAGR,EAAAlZ,EAAM,QAAC,KAAKkZ,gBAAiByZ,EAAWnD,sBAFxC,KAAKtW,gBAAkByZ,EAAWnD,qBAAqBntB,QAIzD,KAAKu0B,MAAMhvB,KAAK,KAAKsR,gBAAgBha,QACrC,KAAKkR,YAGP,CAAApS,IAAA,QAAAC,MAKA,WACE,IAAMg5B,EAAU,IAAIN,EAClB,KAAKzd,gBAAgB7W,QACrB,KAAKgtB,OACL,KAAKuH,MAAMv0B,SAGb,OADA40B,EAAQnD,gBAAgB,MACjBmD,IAGT,CAAAj5B,IAAA,iBAAAC,MAOA,SAAewV,EAAGC,EAAG0a,EAAcC,GACjC,OAAIA,GAAqB,EAAAtW,EAAwB,0BAAC,KAAK8F,YAAapK,EAAGC,GAC9D2a,GAEL,KAAKmF,mBAAqB,KAAKrF,gBACjC,KAAKoF,UAAYzf,KAAKsQ,MACpB,EAAAiM,EAAoB,sBAClB,KAAKnX,gBACL,EACA,KAAK0d,MACL,KAAKxd,OACL,IAGJ,KAAKoa,kBAAoB,KAAKrF,gBAEzB,EAAA0C,EAAuB,yBAC5B,KAAK3X,gBACL,EACA,KAAK0d,MACL,KAAKxd,OACL,KAAKma,WACL,EACA9f,EACAC,EACA0a,EACAC,MAIJ,CAAArwB,IAAA,aAAAC,MAKA,SAAWwV,EAAGC,GACZ,OAAO,EAAAwgB,EAAqB,uBAC1B,KAAKgD,6BACL,EACA,KAAKN,MACL,KAAKxd,OACL3F,EACAC,KAIJ,CAAA1V,IAAA,UAAAC,MAKA,WACE,OAAO,EAAAk5B,EAAe,aACpB,KAAKD,6BACL,EACA,KAAKN,MACL,KAAKxd,UAIT,CAAApb,IAAA,iBAAAC,MAaA,SAAe63B,GACb,IAAI5c,EAQJ,YAPc/T,IAAV2wB,GACF5c,EAAkB,KAAKge,6BAA6B70B,SACpD,EAAA4zB,EAAiB,mBAAC/c,EAAiB,EAAG,KAAK0d,MAAO,KAAKxd,OAAQ0c,IAE/D5c,EAAkB,KAAKA,iBAGlB,EAAAuZ,EAAuB,yBAACvZ,EAAiB,EAAG,KAAK0d,MAAO,KAAKxd,UAGtE,CAAApb,IAAA,UAAAC,MAGA,WACE,OAAO,KAAK24B,QAGd,CAAA54B,IAAA,uBAAAC,MAGA,WACE,GAAI,KAAK44B,4BAA8B,KAAK1I,cAAe,CACzD,IAAMiJ,GAAa,EAAA5c,EAAS,WAAC,KAAKqD,aAClC,KAAKiZ,oBAAqB,EAAAzC,EAAuB,yBAC/C,KAAK6C,6BACL,EACA,KAAKN,MACL,KAAKxd,OACLge,EACA,GAEF,KAAKP,2BAA6B,KAAK1I,cAEzC,OAAO,KAAK2I,qBAGd,CAAA94B,IAAA,mBAAAC,MAMA,WACE,OAAO,IAAI41B,EAAK,QAAC,KAAKwD,uBAAwB,SAGhD,CAAAr5B,IAAA,qBAAAC,MAOA,WACE,OAAO,KAAK24B,MAAM13B,SAGpB,CAAAlB,IAAA,gBAAAC,MAUA,SAAc8C,GACZ,OAAIA,EAAQ,GAAK,KAAK61B,MAAM13B,QAAU6B,EAC7B,KAEF,IAAIsyB,EAAU,QACnB,KAAKna,gBAAgB7W,MACT,IAAVtB,EAAc,EAAI,KAAK61B,MAAM71B,EAAQ,GACrC,KAAK61B,MAAM71B,IAEb,KAAKsuB,UAIT,CAAArxB,IAAA,iBAAAC,MAKA,WAME,IALA,IAAMoxB,EAAS,KAAKA,OACdnW,EAAkB,KAAKA,gBACvBoX,EAAO,KAAKsG,MACZ/D,EAAc,GAChB1Z,EAAS,EACJzZ,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACXizB,EAAa,IAAIU,EAAU,QAC/Bna,EAAgB7W,MAAM8W,EAAQrZ,GAC9BuvB,GAEFwD,EAAYjrB,KAAK+qB,GACjBxZ,EAASrZ,EAEX,OAAO+yB,IAGT,CAAA70B,IAAA,6BAAAC,MAGA,WACE,GAAI,KAAK84B,mBAAqB,KAAK5I,cAAe,CAChD,IAAMjV,EAAkB,KAAKA,iBACzB,EAAA2c,EAAsB,wBAAC3c,EAAiB,EAAG,KAAK0d,MAAO,KAAKxd,QAC9D,KAAK4d,yBAA2B9d,GAEhC,KAAK8d,yBAA2B9d,EAAgB7W,QAChD,KAAK20B,yBAAyB93B,QAAS,EAAA+2B,EAAiB,mBACtD,KAAKe,yBACL,EACA,KAAKJ,MACL,KAAKxd,SAGT,KAAK2d,kBAAoB,KAAK5I,cAEhC,OAAO,KAAK6I,2BAGd,CAAAh5B,IAAA,gCAAAC,MAKA,SAA8BiwB,GAC5B,IAAMqD,EAA4B,GAC5BU,EAAiB,GAWvB,OAVAV,EAA0BryB,QAAS,EAAAozB,EAAa,eAC9C,KAAKpZ,gBACL,EACA,KAAK0d,MACL,KAAKxd,OACLtF,KAAKsQ,KAAK8J,GACVqD,EACA,EACAU,GAEK,IAAI0E,EAAQpF,EAA2B,KAAMU,KAGtD,CAAAj0B,IAAA,UAAAC,MAKA,WACE,MAAO,YAGT,CAAAD,IAAA,mBAAAC,MAMA,SAAiBmZ,GACf,OAAO,EAAAoe,EAAyB,2BAC9B,KAAK0B,6BACL,EACA,KAAKN,MACL,KAAKxd,OACLhC,KAIJ,CAAApZ,IAAA,iBAAAC,MAMA,SAAekZ,EAAakY,GAC1B,KAAKuE,UAAUvE,EAAQlY,EAAa,GAC/B,KAAK+B,kBACR,KAAKA,gBAAkB,IAEzB,IAAMoX,GAAO,EAAAW,EAAuB,yBAClC,KAAK/X,gBACL,EACA/B,EACA,KAAKiC,OACL,KAAKwd,OAEP,KAAK1d,gBAAgBha,OAAyB,IAAhBoxB,EAAKpxB,OAAe,EAAIoxB,EAAKA,EAAKpxB,OAAS,GACzE,KAAKkR,cACNumB,EAxXUrD,GAAuB91B,EA2XrBm5B,EAcR,SAASW,EAASzc,EAAQsL,EAAQ1mB,EAAG83B,GAC1C93B,EAAIA,GAAQ,GAGZ,IADA,IAAMyZ,EAAkB,GACfxZ,EAAI,EAAGA,EAAID,IAAKC,GACvB,EAAAM,EAAM,QACJkZ,GACA,EAAAse,EAAY,QAAC3c,EAAQsL,EAAS,EAAIrS,KAAKwK,GAAK5e,EAAKD,EAAG83B,IAIxD,OADAre,EAAgBtR,KAAKsR,EAAgB,GAAIA,EAAgB,IAClD,IAAIyd,EAAQzd,EAAiB,KAAM,CAACA,EAAgBha,SAStD,SAASu4B,EAAWrgB,GACzB,IAAMkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqB,EAAOrB,EAAO,GACd8B,EAAkB,CACtBZ,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAIoe,EAAQzd,EAAiB,KAAM,CAACA,EAAgBha,SAYtD,SAASw4B,EAAWxT,EAAQyT,EAAO/jB,GACxC+jB,EAAQA,GAAgB,GAMxB,IALA,IAAMve,EAAS8K,EAAO0L,YAChBP,EAASnL,EAAO0T,YAChB/c,EAASqJ,EAAO1J,YAChBqd,EAAcze,GAAUue,EAAQ,GAChCze,EAAkB,IAAI/Y,MAAM03B,GACzBn4B,EAAI,EAAGA,EAAIm4B,EAAan4B,GAAK0Z,EAAQ,CAC5CF,EAAgBxZ,GAAK,EACrBwZ,EAAgBxZ,EAAI,GAAK,EACzB,IAAK,IAAIqiB,EAAI,EAAGA,EAAI3I,EAAQ2I,IAC1B7I,EAAgBxZ,EAAIqiB,GAAKlH,EAAOkH,GAGpC,IAAMuO,EAAO,CAACpX,EAAgBha,QACxB+3B,EAAU,IAAIN,EAAQzd,EAAiBmW,EAAQiB,GAErD,OADAwH,EAAYb,EAASpc,EAAQqJ,EAAOC,YAAavQ,GAC1CqjB,EAWF,SAASa,EAAYb,EAASpc,EAAQsL,EAAQvS,GAKnD,IAJA,IAAMsF,EAAkB+d,EAAQzH,qBAC1BpW,EAAS6d,EAAQrH,YACjB+H,EAAQze,EAAgBha,OAASka,EAAS,EAC1C2e,EAAankB,GAAgB,EAC1BlU,EAAI,EAAGA,GAAKi4B,IAASj4B,EAAG,CAC/B,IAAMyZ,EAASzZ,EAAI0Z,EACbxF,EAAQmkB,EAAiC,GAAnB,EAAAxV,EAAM,QAAC7iB,EAAGi4B,GAAa7jB,KAAKwK,GAAMqZ,EAC9Dze,EAAgBC,GAAU0B,EAAO,GAAKsL,EAASrS,KAAKD,IAAID,GACxDsF,EAAgBC,EAAS,GAAK0B,EAAO,GAAKsL,EAASrS,KAAKC,IAAIH,GAE9DqjB,EAAQ7mB,UApGV3S,QAAAC,QAAAF;;ACS0B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,sBAAA,EA7Z1B,IAAA8F,EAAAD,EAAA5B,QAAA,sBACAwL,EAAA5J,EAAA5B,QAAA,gBACAu2B,EAAAv2B,QAAA,qBACA+rB,EAAA/rB,QAAA,aAKAqiB,EAAAriB,QAAA,aAAoC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAA23B,IAAAA,OAAAA,EAAA3xB,oBAAAA,SAAAA,QAAA6H,IAAA7H,QAAA6H,IAAAvI,OAAAqyB,SAAAl6B,EAAAmF,EAAAg1B,GAAAC,IAAAA,EAAAC,EAAAr6B,EAAAmF,GAAAi1B,GAAAA,EAAAA,CAAAE,IAAAA,EAAA9zB,OAAA+zB,yBAAAH,EAAAj1B,GAAAm1B,OAAAA,EAAAlqB,IAAAkqB,EAAAlqB,IAAA9Q,KAAAiF,UAAApD,OAAAnB,EAAAA,EAAAm6B,GAAAG,EAAAp6B,SAAAuE,MAAAF,KAAAA,WAAA,SAAA81B,EAAAn1B,EAAAC,GAAAqB,MAAAA,OAAAnC,UAAAgK,eAAA/O,KAAA4F,EAAAC,IAAAD,QAAAA,EAAAmD,EAAAnD,MAAAA,OAAAA,EAAA,SAAAgB,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAA5H,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAApH,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAKpC,IAAM0H,EAAW,CACforB,SAAU,WACVC,kBAAmB,mBACnBC,SAAU,WACVC,kBAAmB,mBACnBC,QAAS,UACTC,SAAU,WACVC,WAAY,aACZC,MAAO,QACPC,SAAU,WACVC,iBAAkB,mBAMdC,EAAuB,CAM3BxwB,MAAO,SAOIywB,EAAgBC,SAAAA,GAAAv8B,EAAAs8B,EAASv7B,EAAS,SAAlB,IAAAZ,EAAAC,EAAAk8B,GAI3B,SAAAA,EAAYlnB,GAAO,IAAA9U,EAeY,OAfZC,EAAA+7B,KAAAA,IACjBh8B,EAAAH,EAAAM,KAAM47B,KAAAA,EAAqBxwB,QAOtBxL,KAAO+U,EAAM/U,KAOlBC,EAAKE,QAAU4U,EAAM5U,QAAQF,EAC9B,OAAAK,EAAA27B,GApB0BC,GA+C7B17B,QAAAy7B,iBAAAA,EAAA,IA2BME,EAAW5rB,SAAAA,GAAA5Q,EAAAw8B,EAASvtB,EAAU,SAAnB,IAAAE,EAAA/O,EAAAo8B,GAIf,SAAAA,EAAY1rB,GAAS,IAAAzB,EAiDyD,OAjDzD9O,EAAAi8B,KAAAA,IACnBntB,EAAAF,EAAA1O,KAAA,OAKKkN,GAKL0B,EAAKtC,KAKLsC,EAAKvB,GAELgD,EAAUA,GAAW,GAOrBzB,EAAKotB,UAAY,KAMjBptB,EAAKqtB,WAAa1Q,EAAiB,kBAMnC3c,EAAKstB,cAAWp0B,EAEhB8G,EAAKoD,kBAAkBlC,EAAS0rB,WAAY5sB,EAAKutB,0BACjDvtB,EAAKoD,kBAAkBlC,EAAS4rB,SAAU9sB,EAAKwtB,6BAEpBt0B,IAAvBuI,EAAQiQ,YACV1R,EAAKytB,cAAchsB,EAAQiQ,iBAEGxY,IAA5BuI,EAAQisB,iBACV1tB,EAAK2tB,mBAAmBlsB,EAAQisB,iBAGlC1tB,EAAK4tB,iBAAiC10B,IAArBuI,EAAQosB,UAAyBpsB,EAAQosB,UAAkB7tB,EAiP7E,OA9OD1O,EAAA67B,EAAA,CAAA,CAAAp7B,IAAA,kBAAAC,MAGA,WACE,KAAK47B,aAAY,GACjB5B,EAAA7xB,EAAAgzB,EAAAh3B,WAAA/E,kBAAAA,MAAAA,KAAA,QAGF,CAAAW,IAAA,2BAAAC,MAGA,WACE,IAAM0f,EAAa,KAAKgR,gBACpBhR,IACF,KAAK2b,YAAa,EAAA5P,EAA2B,8BAC3C,EAAAiF,EAAa,KAAC,aACdhR,GAEE,KAAK0b,WACP,KAAKzsB,IAAIO,EAASyrB,SAAU,KAAKU,WAAW,KAAKD,eAKvD,CAAAr7B,IAAA,yBAAAC,MAGA,WACE,GAAI,gBAAiB2S,UAAW,CAC9B,IAAMkpB,EAAW,KAAKC,cAClBD,QAA8B30B,IAAlB,KAAKo0B,SACnB,KAAKA,SAAW3oB,UAAUopB,YAAYC,cACpC,KAAKC,gBAAgBt0B,KAAK,MAC1B,KAAKu0B,eAAev0B,KAAK,MACzB,KAAKw0B,sBAEGN,QAA8B30B,IAAlB,KAAKo0B,WAC3B3oB,UAAUopB,YAAYK,WAAW,KAAKd,UACtC,KAAKA,cAAWp0B,MAKtB,CAAAnH,IAAA,kBAAAC,MAIA,SAAgBq8B,GACd,IAAM3T,EAAS2T,EAAS3T,OACxB,KAAK/Z,IAAIO,EAASorB,SAAU5R,EAAO4T,UACnC,KAAK3tB,IACHO,EAASsrB,SACW,OAApB9R,EAAO6T,cAAoBr1B,EAAYwhB,EAAO6T,UAEhD,KAAK5tB,IACHO,EAASurB,kBACmB,OAA5B/R,EAAO8T,sBAA4Bt1B,EAAYwhB,EAAO8T,kBAExD,KAAK7tB,IACHO,EAASwrB,QACU,OAAnBhS,EAAO+T,aAAmBv1B,GAAY,EAAAkd,EAAS,WAACsE,EAAO+T,UAEpD,KAAKrB,WAGR,KAAKA,UAAU,GAAK1S,EAAOgU,UAC3B,KAAKtB,UAAU,GAAK1S,EAAOiU,UAH3B,KAAKvB,UAAY,CAAC1S,EAAOgU,UAAWhU,EAAOiU,UAK7C,IAAMC,EAAoB,KAAKvB,WAAW,KAAKD,WAC/C,KAAKzsB,IAAIO,EAASyrB,SAAUiC,EAAkBx4B,SAC9C,KAAKuK,IAAIO,EAAS2rB,MAAwB,OAAjBnS,EAAOmU,WAAiB31B,EAAYwhB,EAAOmU,OACpE,IAAMtrB,GAAW,EAAAurB,EAAe,UAAC,KAAK1B,UAAW1S,EAAO4T,UACxD/qB,EAAS4N,eAAe,KAAKkc,YAC7B,KAAK1sB,IAAIO,EAASqrB,kBAAmBhpB,GACrC,KAAKY,YAGP,CAAApS,IAAA,iBAAAC,MAIA,SAAe+T,GACb,KAAKnH,cAAc,IAAIquB,EAAiBlnB,MAG1C,CAAAhU,IAAA,cAAAC,MAOA,WACE,OAAwC,KAAKkQ,IAAIhB,EAASorB,YAG5D,CAAAv6B,IAAA,sBAAAC,MAMA,WACE,OACE,KAAKkQ,IAAIhB,EAASqrB,oBAAsB,OAI5C,CAAAx6B,IAAA,cAAAC,MAOA,WACE,OAAwC,KAAKkQ,IAAIhB,EAASsrB,YAG5D,CAAAz6B,IAAA,sBAAAC,MAOA,WACE,OACE,KAAKkQ,IAAIhB,EAASurB,qBAItB,CAAA16B,IAAA,aAAAC,MAQA,WACE,OAAwC,KAAKkQ,IAAIhB,EAASwrB,WAG5D,CAAA36B,IAAA,cAAAC,MAOA,WACE,OACE,KAAKkQ,IAAIhB,EAASyrB,YAItB,CAAA56B,IAAA,gBAAAC,MAOA,WACE,OACE,KAAKkQ,IAAIhB,EAAS0rB,cAItB,CAAA76B,IAAA,WAAAC,MAOA,WACE,OAAwC,KAAKkQ,IAAIhB,EAAS2rB,SAG5D,CAAA96B,IAAA,cAAAC,MAMA,WACE,OAA+B,KAAKkQ,IAAIhB,EAAS4rB,YAGnD,CAAA/6B,IAAA,qBAAAC,MASA,WACE,OACE,KAAKkQ,IAAIhB,EAAS6rB,oBAItB,CAAAh7B,IAAA,gBAAAC,MAOA,SAAc0f,GACZ,KAAK/Q,IAAIO,EAAS0rB,YAAY,EAAAlK,EAAa,KAAChR,MAG9C,CAAA3f,IAAA,cAAAC,MAMA,SAAY67B,GACV,KAAKltB,IAAIO,EAAS4rB,SAAUe,KAG9B,CAAA97B,IAAA,qBAAAC,MASA,SAAmByP,GACjB,KAAKd,IAAIO,EAAS6rB,iBAAkBtrB,OACrC0rB,EAtSc5rB,GAAmBhQ,EAySrB47B,EAAW37B,QAAAC,QAAAF;;AC1W1B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlDA,IAAAA,EAGe,CAMbw9B,UAAW,YAOXC,WAAY,aASZC,WAAY,aASZC,YAAa,cASbC,eAAgB,kBAOlB39B,QAAAC,QAAAF;;ACQmB,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,WAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnDnB,IAKM69B,EAAI,WAIR,SAAAA,EAAY3tB,GAASvQ,EAAAk+B,KAAAA,GACnB3tB,EAAUA,GAAW,GAMrB,KAAK4tB,YAA2Bn2B,IAAlBuI,EAAQ6tB,MAAsB7tB,EAAQ6tB,MAAQ,KAgC7D,OA7BDh+B,EAAA89B,EAAA,CAAA,CAAAr9B,IAAA,QAAAC,MAKA,WACE,IAAMs9B,EAAQ,KAAKC,WACnB,OAAO,IAAIH,EAAK,CACdE,MAAOp7B,MAAMC,QAAQm7B,GAASA,EAAMl5B,QAAUk5B,QAASp2B,MAI3D,CAAAnH,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKq9B,SAGd,CAAAt9B,IAAA,WAAAC,MAMA,SAASs9B,GACP,KAAKD,OAASC,MACfF,EA3CO,GA2CP79B,EAGY69B,EAAI59B,QAAAC,QAAAF;;ACiJnB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,QAAA,wBAAA,EAAA,QAAA,yBAAA,EA5MA,IAAAgE,EAAAC,QAAA,kBACAqiB,EAAAriB,QAAA,iBAYO,SAASg6B,EACdviB,EACAC,EACArZ,EACAsZ,EACAsiB,EACAhkB,EACA+I,GAEA,IAAIhb,EAAG+b,EACD/hB,GAAKK,EAAMqZ,GAAUC,EAC3B,GAAU,IAAN3Z,EACFgG,EAAI0T,OACC,GAAU,IAAN1Z,EACTgG,EAAI0T,EACJqI,EAAIka,OACC,GAAU,IAANj8B,EAAS,CAKlB,IAJA,IAAI4b,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9Bja,EAAS,EACPy8B,EAAoB,CAAC,GAClBj8B,EAAIyZ,EAASC,EAAQ1Z,EAAII,EAAKJ,GAAK0Z,EAAQ,CAClD,IAAMmC,EAAKrC,EAAgBxZ,GACrB8b,EAAKtC,EAAgBxZ,EAAI,GAC/BR,GAAU4U,KAAKsQ,MAAM7I,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DqgB,EAAkB/zB,KAAK1I,GACvBmc,EAAKE,EACLD,EAAKE,EAEP,IAAMzd,EAAS29B,EAAWx8B,EACpB6B,GAAQ,EAAAtC,EAAY,cAACk9B,EAAmB59B,GAC1CgD,EAAQ,GACVygB,GACGzjB,EAAS49B,GAAmB56B,EAAQ,KACpC46B,GAAmB56B,EAAQ,GAAK46B,GAAmB56B,EAAQ,IAC9D0E,EAAI0T,IAAWpY,EAAQ,GAAKqY,GAE5B3T,EAAI0T,EAASpY,EAAQqY,EAGzBqH,EAAYA,EAAY,EAAIA,EAAY,EACxC/I,EAAOA,GAAc,IAAIvX,MAAMsgB,GAC/B,IAAK,IAAI/gB,EAAI,EAAGA,EAAI+gB,IAAa/gB,EAC/BgY,EAAKhY,QACGyF,IAANM,EACI8oB,SACMppB,IAANqc,EACAtI,EAAgBzT,EAAI/F,IACpB,EAAA8iB,EAAI,MAACtJ,EAAgBzT,EAAI/F,GAAIwZ,EAAgBzT,EAAI2T,EAAS1Z,GAAI8hB,GAEtE,OAAO9J,EAYF,SAASkkB,EACd1iB,EACAC,EACArZ,EACAsZ,EACA8I,EACA2Z,GAEA,GAAI/7B,GAAOqZ,EACT,OAAO,KAET,IAAI3F,EACJ,GAAI0O,EAAIhJ,EAAgBC,EAASC,EAAS,GACxC,OAAIyiB,IACFroB,EAAa0F,EAAgB7W,MAAM8W,EAAQA,EAASC,IACzCA,EAAS,GAAK8I,EAClB1O,GAEF,KAET,GAAI0F,EAAgBpZ,EAAM,GAAKoiB,EAC7B,OAAI2Z,IACFroB,EAAa0F,EAAgB7W,MAAMvC,EAAMsZ,EAAQtZ,IACtCsZ,EAAS,GAAK8I,EAClB1O,GAEF,KAGT,GAAI0O,GAAKhJ,EAAgBC,EAASC,EAAS,GACzC,OAAOF,EAAgB7W,MAAM8W,EAAQA,EAASC,GAIhD,IAFA,IAAI0iB,EAAK3iB,EAASC,EACd2iB,EAAKj8B,EAAMsZ,EACR0iB,EAAKC,GAAI,CACd,IAAMl9B,EAAOi9B,EAAKC,GAAO,EACrB7Z,EAAIhJ,GAAiBra,EAAM,GAAKua,EAAS,GAC3C2iB,EAAKl9B,EAELi9B,EAAKj9B,EAAM,EAGf,IAAMm9B,EAAK9iB,EAAgB4iB,EAAK1iB,EAAS,GACzC,GAAI8I,GAAK8Z,EACP,OAAO9iB,EAAgB7W,OAAOy5B,EAAK,GAAK1iB,GAAS0iB,EAAK,GAAK1iB,EAASA,GAEtE,IACMoI,GAAKU,EAAI8Z,IADJ9iB,GAAiB4iB,EAAK,GAAK1iB,EAAS,GACpB4iB,GAC3BxoB,EAAa,GACb,IAAK,IAAI9T,EAAI,EAAGA,EAAI0Z,EAAS,IAAK1Z,EAChC8T,EAAW5L,MACT,EAAA4a,EAAI,MACFtJ,GAAiB4iB,EAAK,GAAK1iB,EAAS1Z,GACpCwZ,EAAgB4iB,EAAK1iB,EAAS1Z,GAC9B8hB,IAKN,OADAhO,EAAW5L,KAAKsa,GACT1O,EAaF,SAASyoB,EACd/iB,EACAC,EACAmX,EACAlX,EACA8I,EACA2Z,EACAK,GAEA,GAAIA,EACF,OAAON,EACL1iB,EACAC,EACAmX,EAAKA,EAAKpxB,OAAS,GACnBka,EACA8I,EACA2Z,GAGJ,IAAIroB,EACJ,GAAI0O,EAAIhJ,EAAgBE,EAAS,GAC/B,OAAIyiB,IACFroB,EAAa0F,EAAgB7W,MAAM,EAAG+W,IAC3BA,EAAS,GAAK8I,EAClB1O,GAEF,KAET,GAAI0F,EAAgBA,EAAgBha,OAAS,GAAKgjB,EAChD,OAAI2Z,IACFroB,EAAa0F,EAAgB7W,MAAM6W,EAAgBha,OAASka,IACjDA,EAAS,GAAK8I,EAClB1O,GAEF,KAET,IAAK,IAAI9T,EAAI,EAAGyI,EAAKmoB,EAAKpxB,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC7C,IAAMI,EAAMwwB,EAAK5wB,GACjB,GAAIyZ,GAAUrZ,EAAd,CAGA,GAAIoiB,EAAIhJ,EAAgBC,EAASC,EAAS,GACxC,OAAO,KAET,GAAI8I,GAAKhJ,EAAgBpZ,EAAM,GAC7B,OAAO87B,EACL1iB,EACAC,EACArZ,EACAsZ,EACA8I,GACA,GAGJ/I,EAASrZ,GAEX,OAAO;;ACxKT,aA3BO,SAASq8B,EAAiBjjB,EAAiBC,EAAQrZ,EAAKsZ,GAI7D,IAHA,IAAIiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9Bja,EAAS,EACJQ,EAAIyZ,EAASC,EAAQ1Z,EAAII,EAAKJ,GAAK0Z,EAAQ,CAClD,IAAMmC,EAAKrC,EAAgBxZ,GACrB8b,EAAKtC,EAAgBxZ,EAAI,GAC/BR,GAAU4U,KAAKsQ,MAAM7I,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,EAEP,OAAOtc,EAUF,SAASk9B,EAAiBljB,EAAiBC,EAAQrZ,EAAKsZ,GAC7D,IAAIijB,EAAYF,EAAiBjjB,EAAiBC,EAAQrZ,EAAKsZ,GACzDjF,EAAK+E,EAAgBpZ,EAAMsZ,GAAUF,EAAgBC,GACrD/E,EAAK8E,EAAgBpZ,EAAMsZ,EAAS,GAAKF,EAAgBC,EAAS,GAExE,OADAkjB,GAAavoB,KAAKsQ,KAAKjQ,EAAKA,EAAKC,EAAKA,GAExC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,QAAA,iBAAA;;ACgRyB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnTzB,IAAA2e,EAAA1vB,EAAA5B,QAAA,wBACAuxB,EAAAvxB,QAAA,qBACAoiB,EAAApiB,QAAA,gBACAwxB,EAAAxxB,QAAA,qBACAyxB,EAAAzxB,QAAA,sBACAD,EAAAC,QAAA,eACAuzB,EAAAvzB,QAAA,sBACA0xB,EAAA1xB,QAAA,qBACA66B,EAAA76B,QAAA,yBACAg1B,EAAAh1B,QAAA,8BACA86B,EAAA96B,QAAA,oBAAkD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAElD,IAMM+2B,EAAUlJ,SAAAA,GAAA12B,EAAA4/B,EAASrN,EAAc,SAAvB,IAAApyB,EAAAC,EAAAw/B,GAMd,SAAAA,EAAYrlB,EAAakY,GAAQ,IAAAnyB,EAuC9B,OAvC8BC,EAAAq/B,KAAAA,IAC/Bt/B,EAAAH,EAAAM,KAAA,OAMKo/B,cAAgB,KAMrBv/B,EAAKw/B,uBAAyB,EAM9Bx/B,EAAKq2B,WAAa,EAMlBr2B,EAAKs2B,mBAAqB,OAEXruB,IAAXkqB,GAAyBlvB,MAAMC,QAAQ+W,EAAY,IAMrDja,EAAKu2B,eAEDtc,EAEFkY,GATFnyB,EAAKw2B,mBACHrE,EAC8BlY,GASjCja,EAiPF,OA9ODK,EAAAi/B,EAAA,CAAA,CAAAx+B,IAAA,mBAAAC,MAKA,SAAiBuV,GACV,KAAK0F,iBAGR,EAAAlZ,EAAM,QAAC,KAAKkZ,gBAAiB1F,GAF7B,KAAK0F,gBAAkB1F,EAAWnR,QAIpC,KAAK+N,YAGP,CAAApS,IAAA,QAAAC,MAKA,WACE,IAAM0+B,EAAa,IAAIH,EACrB,KAAKtjB,gBAAgB7W,QACrB,KAAKgtB,QAGP,OADAsN,EAAW7I,gBAAgB,MACpB6I,IAGT,CAAA3+B,IAAA,iBAAAC,MAOA,SAAewV,EAAGC,EAAG0a,EAAcC,GACjC,OAAIA,GAAqB,EAAAtW,EAAwB,0BAAC,KAAK8F,YAAapK,EAAGC,GAC9D2a,GAEL,KAAKmF,mBAAqB,KAAKrF,gBACjC,KAAKoF,UAAYzf,KAAKsQ,MACpB,EAAA8L,EAAe,iBACb,KAAKhX,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL,IAGJ,KAAKoa,kBAAoB,KAAKrF,gBAEzB,EAAAsC,EAAkB,oBACvB,KAAKvX,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL,KAAKma,WACL,EACA9f,EACAC,EACA0a,EACAC,MAIJ,CAAArwB,IAAA,iBAAAC,MAWA,SAAe6b,GACb,OAAO,EAAAqb,EAAc,SACnB,KAAKjc,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACLU,KAIJ,CAAA9b,IAAA,mBAAAC,MAcA,SAAiBikB,EAAG2Z,GAClB,MAAmB,OAAf,KAAKxM,QAAkC,QAAf,KAAKA,OACxB,MAETwM,OAA8B12B,IAAhB02B,GAA4BA,GACnC,EAAAD,EAAuB,yBAC5B,KAAK1iB,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL8I,EACA2Z,MAIJ,CAAA79B,IAAA,iBAAAC,MAKA,WACE,OAAO,EAAAu0B,EAAkB,oBACvB,KAAKtZ,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,UAIT,CAAApb,IAAA,kBAAAC,MAUA,SAAgBy9B,EAAUhkB,GACxB,OAAO,EAAA+jB,EAAgB,kBACrB,KAAKviB,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACLsiB,EACAhkB,EACA,KAAK0B,UAIT,CAAApb,IAAA,YAAAC,MAKA,WACE,OAAO,EAAAk+B,EAAgB,kBACrB,KAAKjjB,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,UAIT,CAAApb,IAAA,kBAAAC,MAGA,WAKE,OAJI,KAAKy+B,uBAAyB,KAAKvO,gBACrC,KAAKsO,cAAgB,KAAKG,gBAAgB,GAAK,KAAKH,eACpD,KAAKC,sBAAwB,KAAKvO,eAE7B,KAAKsO,gBAGd,CAAAz+B,IAAA,gCAAAC,MAKA,SAA8BiwB,GAC5B,IAAMqD,EAA4B,GAUlC,OATAA,EAA0BryB,QAAS,EAAAuyB,EAAc,gBAC/C,KAAKvY,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACL8U,EACAqD,EACA,GAEK,IAAIiL,EAAWjL,EAA2B,QAGnD,CAAAvzB,IAAA,UAAAC,MAKA,WACE,MAAO,eAGT,CAAAD,IAAA,mBAAAC,MAMA,SAAiBmZ,GACf,OAAO,EAAA6d,EAAoB,sBACzB,KAAK/b,gBACL,EACA,KAAKA,gBAAgBha,OACrB,KAAKka,OACLhC,KAIJ,CAAApZ,IAAA,iBAAAC,MAMA,SAAekZ,EAAakY,GAC1B,KAAKuE,UAAUvE,EAAQlY,EAAa,GAC/B,KAAK+B,kBACR,KAAKA,gBAAkB,IAEzB,KAAKA,gBAAgBha,QAAS,EAAA8xB,EAAkB,oBAC9C,KAAK9X,gBACL,EACA/B,EACA,KAAKiC,QAEP,KAAKhJ,cACNosB,EA9RalJ,GAAuB91B,EAiSxBg/B,EAAU/+B,QAAAC,QAAAF;;ACnFJ,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,WAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,WAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlNrB,IAQMq/B,EAAM,WAIV,SAAAA,EAAYnvB,GAASvQ,EAAA0/B,KAAAA,GACnBnvB,EAAUA,GAAW,GAMrB,KAAK4tB,YAA2Bn2B,IAAlBuI,EAAQ6tB,MAAsB7tB,EAAQ6tB,MAAQ,KAM5D,KAAKuB,SAAWpvB,EAAQqvB,QAMxB,KAAKC,eAAiC73B,IAArBuI,EAAQuvB,SAAyBvvB,EAAQuvB,SAAW,KAMrE,KAAKC,gBAAkBxvB,EAAQyvB,eAM/B,KAAKC,UAAY1vB,EAAQ2vB,SAMzB,KAAKC,YAAc5vB,EAAQ6vB,WAM3B,KAAKC,OAAS9vB,EAAQ6P,MAwJvB,OArJDhgB,EAAAs/B,EAAA,CAAA,CAAA7+B,IAAA,QAAAC,MAKA,WACE,IAAMs9B,EAAQ,KAAKC,WACnB,OAAO,IAAIqB,EAAO,CAChBtB,MAAOp7B,MAAMC,QAAQm7B,GAASA,EAAMl5B,QAAUk5B,QAASp2B,EACvD43B,QAAS,KAAKU,aACdR,SAAU,KAAKS,cAAgB,KAAKA,cAAcr7B,aAAU8C,EAC5Dg4B,eAAgB,KAAKQ,oBACrBN,SAAU,KAAKO,cACfL,WAAY,KAAKM,gBACjBtgB,MAAO,KAAKjD,eAIhB,CAAAtc,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKq9B,SAGd,CAAAt9B,IAAA,aAAAC,MAKA,WACE,OAAO,KAAK6+B,WAGd,CAAA9+B,IAAA,cAAAC,MAKA,WACE,OAAO,KAAK++B,YAGd,CAAAh/B,IAAA,oBAAAC,MAKA,WACE,OAAO,KAAKi/B,kBAGd,CAAAl/B,IAAA,cAAAC,MAKA,WACE,OAAO,KAAKm/B,YAGd,CAAAp/B,IAAA,gBAAAC,MAKA,WACE,OAAO,KAAKq/B,cAGd,CAAAt/B,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKu/B,SAGd,CAAAx/B,IAAA,WAAAC,MAMA,SAASs9B,GACP,KAAKD,OAASC,IAGhB,CAAAv9B,IAAA,aAAAC,MAMA,SAAW8+B,GACT,KAAKD,SAAWC,IAGlB,CAAA/+B,IAAA,cAAAC,MAMA,SAAYg/B,GACV,KAAKD,UAAYC,IAGnB,CAAAj/B,IAAA,oBAAAC,MAMA,SAAkBk/B,GAChB,KAAKD,gBAAkBC,IAGzB,CAAAn/B,IAAA,cAAAC,MAMA,SAAYo/B,GACV,KAAKD,UAAYC,IAGnB,CAAAr/B,IAAA,gBAAAC,MAMA,SAAcs/B,GACZ,KAAKD,YAAcC,IAGrB,CAAAv/B,IAAA,WAAAC,MAMA,SAASsf,GACP,KAAKigB,OAASjgB,MACfsf,EAvMS,GAuMTr/B,EAGYq/B,EAAMp/B,QAAAC,QAAAF;;ACtNpB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EATD,IAAAA,EAGe,CACbsgC,KAAM,EACNC,QAAS,EACTC,OAAQ,EACRv1B,MAAO,EACPw1B,MAAO,GACRxgC,QAAAC,QAAAF;;AC0DD,aAtDO,SAASsa,EAAOkD,EAAMkjB,EAAKxmB,GAMhC,YALavS,IAATuS,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAKsD,EAAK,GAAK,EAAIkjB,EACxBxmB,EAAK,GAAKsD,EAAK,GAAK,EAAIkjB,EACjBxmB,EAQF,SAASymB,EAAQnjB,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,EAU3B,SAAShH,EAAMgH,EAAMojB,EAAO1mB,GAMjC,YALavS,IAATuS,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAMsD,EAAK,GAAKojB,EAAQ,GAAO,EACpC1mB,EAAK,GAAMsD,EAAK,GAAKojB,EAAQ,GAAO,EAC7B1mB,EAYF,SAAS2mB,EAAOrjB,EAAMtD,GAC3B,OAAIvX,MAAMC,QAAQ4a,GACTA,QAEI7V,IAATuS,EACFA,EAAO,CAACsD,EAAMA,IAEdtD,EAAK,GAAKsD,EACVtD,EAAK,GAAKsD,GAELtD,GACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,QAAA,EAAA,QAAA,MAAA,EAAA,QAAA,OAAA;;ACkOyB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtSzB,IAAAhM,EAAAjK,QAAA,cACA68B,EAAA78B,QAAA,cAAkC,SAAAiC,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAWlC,IAQMw5B,EAAU,WAId,SAAAA,EAAY7wB,GAASvQ,EAAAohC,KAAAA,GAKnB,KAAKC,SAAW9wB,EAAQ+wB,QAMxB,KAAKC,gBAAkBhxB,EAAQixB,eAM/B,KAAKC,UAAYlxB,EAAQqN,SAMzB,KAAK8jB,OAASnxB,EAAQsG,MAMtB,KAAK8qB,aAAc,EAAAT,EAAM,QAAC3wB,EAAQsG,OAMlC,KAAK+qB,cAAgBrxB,EAAQsxB,aAM7B,KAAKC,eAAiBvxB,EAAQwxB,cAkO/B,OA/ND3hC,EAAAghC,EAAA,CAAA,CAAAvgC,IAAA,QAAAC,MAKA,WACE,IAAM+V,EAAQ,KAAKmrB,WACnB,OAAO,IAAIZ,EAAW,CACpBE,QAAS,KAAKW,aACdprB,MAAO7T,MAAMC,QAAQ4T,GAASA,EAAM3R,QAAU2R,EAC9C+G,SAAU,KAAKskB,cACfV,eAAgB,KAAKW,oBACrBN,aAAc,KAAKO,kBAAkBl9B,QACrC68B,cAAe,KAAKM,uBAIxB,CAAAxhC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAKugC,WAGd,CAAAxgC,IAAA,oBAAAC,MAKA,WACE,OAAO,KAAKygC,kBAGd,CAAA1gC,IAAA,cAAAC,MAKA,WACE,OAAO,KAAK2gC,YAGd,CAAA5gC,IAAA,WAAAC,MAKA,WACE,OAAO,KAAK4gC,SAGd,CAAA7gC,IAAA,gBAAAC,MAIA,WACE,OAAO,KAAK6gC,cAGd,CAAA9gC,IAAA,kBAAAC,MAKA,WACE,OAAO,KAAK8gC,gBAGd,CAAA/gC,IAAA,mBAAAC,MAKA,WACE,OAAO,KAAKghC,iBAGd,CAAAjhC,IAAA,YAAAC,MAMA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,WAAAC,MAMA,SAASwhC,GACP,OAAO,EAAAv0B,EAAQ,cAGjB,CAAAlN,IAAA,uBAAAC,MAIA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,gBAAAC,MAKA,SAAcwhC,GACZ,OAAO,IAGT,CAAAzhC,IAAA,gBAAAC,MAIA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,eAAAC,MAIA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,YAAAC,MAKA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,UAAAC,MAKA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,kBAAAC,MAMA,SAAgB+gC,GACd,KAAKD,cAAgBC,IAGvB,CAAAhhC,IAAA,aAAAC,MAMA,SAAWwgC,GACT,KAAKD,SAAWC,IAGlB,CAAAzgC,IAAA,oBAAAC,MAMA,SAAkB0gC,GAChB,KAAKD,gBAAkBC,IAGzB,CAAA3gC,IAAA,cAAAC,MAMA,SAAY8c,GACV,KAAK6jB,UAAY7jB,IAGnB,CAAA/c,IAAA,WAAAC,MAMA,SAAS+V,GACP,KAAK6qB,OAAS7qB,EACd,KAAK8qB,aAAc,EAAAT,EAAM,QAACrqB,KAG5B,CAAAhW,IAAA,oBAAAC,MAIA,SAAkBuJ,IAChB,EAAA0D,EAAQ,cAGV,CAAAlN,IAAA,OAAAC,MAIA,YACE,EAAAiN,EAAQ,cAGV,CAAAlN,IAAA,sBAAAC,MAIA,SAAoBuJ,IAClB,EAAA0D,EAAQ,gBACTqzB,EA/Qa,GA+Qb/gC,EAGY+gC,EAAU9gC,QAAAC,QAAAF;;ACxEzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,SAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,cAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,EA9NA,IAAAqR,EAAApN,QAAA,gBACAqiB,EAAAriB,QAAA,aAiBMi+B,EAAgB,oDAQhBC,EAAkB,4BAQjB,SAASC,EAASrE,GACvB,MAAqB,iBAAVA,EACFA,EAEF1mB,EAAS0mB,GAQlB,SAASsE,EAAUtE,GACjB,IAAMuE,EAAKxqB,SAASC,cAAc,OAElC,GADAuqB,EAAG7vB,MAAMsrB,MAAQA,EACM,KAAnBuE,EAAG7vB,MAAMsrB,MAAc,CACzBjmB,SAASyqB,KAAKC,YAAYF,GAC1B,IAAMG,EAAMC,iBAAiBJ,GAAIvE,MAEjC,OADAjmB,SAASyqB,KAAKI,YAAYL,GACnBG,EAET,MAAO,GAOF,IAAMG,EAAc,WASzB,IAKMtf,EAAQ,GAKVuf,EAAY,EAEhB,OAAA,SAKYC,GACR,IAAI/E,EACJ,GAAIza,EAAM1U,eAAek0B,GACvB/E,EAAQza,EAAMwf,OACT,CACL,GAAID,GAtBa,KAsBgB,CAC/B,IAAI3gC,EAAI,EACR,IAAK,IAAM1B,KAAO8iB,EACE,IAAP,EAANphB,cACIohB,EAAM9iB,KACXqiC,GAIR9E,EAAQgF,EAAoBD,GAC5Bxf,EAAMwf,GAAK/E,IACT8E,EAEJ,OAAO9E,GA5Cc,GAwDpB,SAASiF,EAAQjF,GACtB,OAAIp7B,MAAMC,QAAQm7B,GACTA,EAEF6E,EAAW7E,GAQpB,SAASgF,EAAoBD,GAC3B,IAAIze,EAAG4e,EAAGphC,EAAGD,EAAGm8B,EAMhB,GAJIoE,EAAgBe,KAAKJ,KACvBA,EAAIT,EAAUS,IAGZZ,EAAcgB,KAAKJ,GAAI,CAEzB,IACIhtB,EADE7T,EAAI6gC,EAAEphC,OAAS,EAGnBoU,EADE7T,GAAK,EACH,EAEA,EAEN,IAAMkhC,EAAiB,IAANlhC,GAAiB,IAANA,EAC5BoiB,EAAI8B,SAAS2c,EAAEM,OAAO,EAAI,EAAIttB,EAAGA,GAAI,IACrCmtB,EAAI9c,SAAS2c,EAAEM,OAAO,EAAI,EAAIttB,EAAGA,GAAI,IACrCjU,EAAIskB,SAAS2c,EAAEM,OAAO,EAAI,EAAIttB,EAAGA,GAAI,IAEnClU,EADEuhC,EACEhd,SAAS2c,EAAEM,OAAO,EAAI,EAAIttB,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFuO,GAAKA,GAAK,GAAKA,EACf4e,GAAKA,GAAK,GAAKA,EACfphC,GAAKA,GAAK,GAAKA,EACXshC,IACFvhC,GAAKA,GAAK,GAAKA,IAGnBm8B,EAAQ,CAAC1Z,EAAG4e,EAAGphC,EAAGD,EAAI,UACbkhC,EAAEO,WAAW,SAGtBC,EADAvF,EAAQ+E,EAAEj+B,MAAM,GAAI,GAAGmhB,MAAM,KAAKud,IAAI37B,SAE7Bk7B,EAAEO,WAAW,UAEtBtF,EAAQ+E,EAAEj+B,MAAM,GAAI,GAAGmhB,MAAM,KAAKud,IAAI37B,SAChCwC,KAAK,GACXk5B,EAAUvF,KAEV,EAAA7sB,EAAM,SAAC,EAAO,IAEhB,OAAO6sB,EAQF,SAASuF,EAAUvF,GAKxB,OAJAA,EAAM,IAAK,EAAAja,EAAK,OAAEia,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,EAAAja,EAAK,OAAEia,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,EAAAja,EAAK,OAAEia,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,EAAAja,EAAK,OAACia,EAAM,GAAI,EAAG,GACvBA,EAOF,SAAS1mB,EAAS0mB,GACvB,IAAI1Z,EAAI0Z,EAAM,GACV1Z,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI4e,EAAIlF,EAAM,GACVkF,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIphC,EAAIk8B,EAAM,GAKd,OAJIl8B,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGX,QAAUwiB,EAAI,IAAM4e,EAAI,IAAMphC,EAAI,UADlB8F,IAAbo2B,EAAM,GAAmB,EAAIznB,KAAK+O,MAAiB,IAAX0Y,EAAM,IAAY,KACjB,IAO9C,SAASyF,EAAcV,GAI5B,OAHIX,EAAgBzuB,KAAKovB,KACvBA,EAAIT,EAAUS,IAETZ,EAAcxuB,KAAKovB,IAAMA,EAAEO,WAAW,UAAYP,EAAEO,WAAW,QA9GxEpjC,QAAA2iC,WAAAA;;ACvFA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAxBA,IAAAa,EAAAx/B,QAAA,cAmBO,SAASy/B,EAAY3F,GAC1B,OAAIp7B,MAAMC,QAAQm7B,IACT,EAAA1mB,EAAQ,UAAC0mB,GAEXA;;AC0HT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,QAAA,YAAA,EAAA,QAAA,WAAA,EAAA,QAAA,cAAA,EAAA,QAAA,eAAA,EAAA,QAAA,WAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,YAAA,EApJA,IAAArpB,EAAAzQ,QAAA,YAeO,SAAS0/B,EAAsB5jB,EAAOC,EAAQ4jB,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWliC,OAClBkiC,EAAWG,QACXhwB,EAAuB,wBACvB,IAAIE,gBAAgB8L,GAAS,IAAKC,GAAU,KAE5ClI,SAASC,cAAc,UAE9BgI,IACF+jB,EAAO/jB,MAAQA,GAEbC,IACF8jB,EAAO9jB,OAASA,GAIhB8jB,EAAOE,WAAW,KAAMH,GASrB,SAASI,EAAcC,GAC5B,IAAMJ,EAASI,EAAQJ,OACvBA,EAAO/jB,MAAQ,EACf+jB,EAAO9jB,OAAS,EAChBkkB,EAAQC,UAAU,EAAG,EAAG,EAAG,GAUtB,SAASC,EAAWt0B,GACzB,IAAIiQ,EAAQjQ,EAAQu0B,YACd5xB,EAAQiwB,iBAAiB5yB,GAG/B,OAFAiQ,GAASoG,SAAS1T,EAAM6xB,WAAY,IAAMne,SAAS1T,EAAM8xB,YAAa,IAYjE,SAASC,EAAY10B,GAC1B,IAAIkQ,EAASlQ,EAAQ20B,aACfhyB,EAAQiwB,iBAAiB5yB,GAG/B,OAFAkQ,GAAUmG,SAAS1T,EAAMiyB,UAAW,IAAMve,SAAS1T,EAAMkyB,aAAc,IASlE,SAASC,EAAYC,EAASC,GACnC,IAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,GAQ1B,SAASI,EAAWrtB,GACzB,OAAOA,GAAQA,EAAKmtB,WAAantB,EAAKmtB,WAAWrC,YAAY9qB,GAAQ,KAMhE,SAASstB,EAAettB,GAC7B,KAAOA,EAAKutB,WACVvtB,EAAK8qB,YAAY9qB,EAAKutB,WAYnB,SAASC,EAAgBxtB,EAAMytB,GAGpC,IAFA,IAAMC,EAAc1tB,EAAK2tB,WAEhBtjC,EAAI,KAAWA,EAAG,CACzB,IAAMujC,EAAWF,EAAYrjC,GACvBwjC,EAAWJ,EAASpjC,GAG1B,IAAKujC,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOL7tB,EAAK8tB,aAAaD,EAAUD,IAN1B5tB,EAAK8qB,YAAY8C,KACfvjC,GAPF2V,EAAK2qB,YAAYkD;;ACnBrB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,QAAA,kBAAA,QAAA,mBAAA,QAAA,iBAAA,QAAA,aAAA,QAAA,cAAA,QAAA,qBAAA,EA9FK,IAAME,EAAe,YAE5B3lC,QAAA2lC,aAAAA,EAMO,IAAMC,EAAmB,gBAEhC5lC,QAAA4lC,iBAAAA,EAMO,IAAMC,EAAqB,kBAElC7lC,QAAA6lC,mBAAAA,EAMO,IAAMC,EAAoB,iBAEjC9lC,QAAA8lC,kBAAAA,EAMO,IAAMC,EAAgB,aAE7B/lC,QAAA+lC,cAAAA,EAOO,IAAMC,EAAkB,eAE/BhmC,QAAAgmC,gBAAAA,EAIA,IAAMC,EAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACAvuB,KAAK,IACP,KAEIwuB,EAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,EAAoB,SAAUC,GACzC,IAAMC,EAAQD,EAASC,MAAML,GAC7B,IAAKK,EACH,OAAO,KAST,IAPA,IAAM9zB,EAAuC,CAC3C+zB,WAAY,SACZhpB,KAAM,QACN/K,MAAO,SACPg0B,OAAQ,SACRC,QAAS,UAEFxkC,EAAI,EAAGyI,EAAKy7B,EAAoB1kC,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC5D,IAAMzB,EAAQ8lC,EAAMrkC,EAAI,QACVyF,IAAVlH,IACFgS,EAAM2zB,EAAoBlkC,IAAMzB,GAIpC,OADAgS,EAAMk0B,SAAWl0B,EAAMm0B,OAAO5gB,MAAM,QAC7BvT,GACPxS,QAAAomC,kBAAAA;;ACmYF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,QAAA,iBAAA,QAAA,mBAAA,QAAA,eAAA,QAAA,kBAAA,QAAA,iBAAA,QAAA,gBAAA,QAAA,sBAAA,QAAA,gBAAA,QAAA,eAAA,QAAA,YAAA,QAAA,iBAAA,QAAA,kBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,iBAAA,EAnfA,IAAA52B,EAAA5J,EAAA5B,QAAA,iBACAyQ,EAAAzQ,QAAA,aACA+B,EAAA/B,QAAA,aACA4iC,EAAA5iC,QAAA,aACA6iC,EAAA7iC,QAAA,aAA4C,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAoFrC,IAAMikC,EAAc,kBAE3B9mC,QAAA8mC,YAAAA,EAIO,IAAMC,EAAmB,OAEhC/mC,QAAA+mC,iBAAAA,EAIO,IAAMC,EAAiB,QAE9BhnC,QAAAgnC,eAAAA,EAIO,IAAMC,EAAkB,GAE/BjnC,QAAAinC,gBAAAA,EAIO,IAAMC,EAAwB,EAErClnC,QAAAknC,sBAAAA,EAIO,IAAMC,EAAkB,QAE/BnnC,QAAAmnC,gBAAAA,EAIO,IAAMC,EAAoB,GAEjCpnC,QAAAonC,kBAAAA,EAIO,IAAMC,EAAqB,OAElCrnC,QAAAqnC,mBAAAA,EAIO,IAAMC,EAAmB,SAEhCtnC,QAAAsnC,iBAAAA,EAIO,IAAMC,EAAsB,SAEnCvnC,QAAAunC,oBAAAA,EAIO,IAAMC,EAAiB,CAAC,EAAG,EAAG,EAAG,GAExCxnC,QAAAwnC,eAAAA,EAIO,IAAMC,EAAmB,EAEhCznC,QAAAynC,iBAAAA,EAGO,IAAMC,EAAe,IAAIt5B,EAAU,QAE1CpO,QAAA0nC,aAAAA,EAGA,IAKIC,EALAC,EAAiB,KAURC,EAAc,GAE3B7nC,QAAA6nC,YAAAA,EAIO,IAAMC,EAAgB,WAC3B,IAKIC,EAAUC,EALRC,EAAU,IACV1qB,EAAO,QACP2qB,EAAiB,CAAC,YAAa,SAC/B56B,EAAM46B,EAAezmC,OACrB0mC,EAAO,2BASb,SAASC,EAAYC,EAAWC,EAAYC,GAE1C,IADA,IAAIC,GAAY,EACPvmC,EAAI,EAAGA,EAAIqL,IAAOrL,EAAG,CAC5B,IAAMwmC,EAAgBP,EAAejmC,GAKrC,GAJA+lC,EAAiBU,EACfL,EAAY,IAAMC,EAAa,IAAM/qB,EAAOkrB,EAC5CN,GAEEI,GAAcE,EAAe,CAC/B,IAAM3oB,EAAQ4oB,EACZL,EACE,IACAC,EACA,IACA/qB,EACAgrB,EACA,IACAE,EACFN,GAIFK,EAAYA,GAAa1oB,GAASkoB,GAGtC,QAAIQ,EAMN,SAASG,IAGP,IAFA,IAAIpvB,GAAO,EACLqvB,EAAQlB,EAAamB,UAClB5mC,EAAI,EAAGyI,EAAKk+B,EAAMnnC,OAAQQ,EAAIyI,IAAMzI,EAAG,CAC9C,IAAM6mC,EAAOF,EAAM3mC,GACfylC,EAAah3B,IAAIo4B,GAAQb,IACvBG,EAAYrjC,MAAM,KAAM+jC,EAAK/iB,MAAM,SACrC,EAAAxgB,EAAK,OAACsiC,GAEND,EAAiB,KACjBD,OAAcjgC,EACdggC,EAAav4B,IAAI25B,EAAMb,KAEvBP,EAAav4B,IAAI25B,EAAMpB,EAAah3B,IAAIo4B,GAAQ,GAAG,GACnDvvB,GAAO,IAITA,IACFwvB,cAAchB,GACdA,OAAWrgC,GAIf,OAAO,SAAU2+B,GACf,IAAMyC,GAAO,EAAA1C,EAAiB,mBAACC,GAC/B,GAAKyC,EAIL,IADA,IAAMpC,EAAWoC,EAAKpC,SACbzkC,EAAI,EAAGyI,EAAKg8B,EAASjlC,OAAQQ,EAAIyI,IAAMzI,EAAG,CACjD,IAAM0kC,EAASD,EAASzkC,GAClB1B,EAAMuoC,EAAKt2B,MAAQ,KAAOs2B,EAAKtC,OAAS,KAAOG,OACvBj/B,IAA1BggC,EAAah3B,IAAInQ,KACnBmnC,EAAav4B,IAAI5O,EAAK0nC,GAAS,GAC1BG,EAAYU,EAAKt2B,MAAOs2B,EAAKtC,OAAQG,KACxCe,EAAav4B,IAAI5O,EAAK,GAAG,QACRmH,IAAbqgC,IACFA,EAAWiB,YAAYL,EAAO,SAnFb,GA2F7B3oC,QAAA8nC,aAAAA,EAIO,IAAMmB,EAAqB,WAIhC,IAAIC,EACJ,OAAO,SAAU7C,GACf,IAAItmB,EAAS8nB,EAAYxB,GACzB,GAAc3+B,MAAVqY,EAAqB,CACvB,GAAIjM,EAAuB,wBAAE,CAC3B,IAAMg1B,GAAO,EAAA1C,EAAiB,mBAACC,GACzB8C,EAAUC,EAAY/C,EAAU,MAItCtmB,GAHmBkR,MAAMtpB,OAAOmhC,EAAKvC,aACjC,IACA5+B,OAAOmhC,EAAKvC,cAGb4C,EAAQE,wBAA0BF,EAAQG,+BAExCJ,KACHA,EAAiBrxB,SAASC,cAAc,QACzByxB,UAAY,IAC3BL,EAAe12B,MAAMg3B,UAAY,IACjCN,EAAe12B,MAAMi3B,UAAY,OACjCP,EAAe12B,MAAMuN,OAAS,OAC9BmpB,EAAe12B,MAAMk3B,QAAU,IAC/BR,EAAe12B,MAAMm3B,OAAS,OAC9BT,EAAe12B,MAAMqqB,SAAW,WAChCqM,EAAe12B,MAAMo3B,QAAU,QAC/BV,EAAe12B,MAAMq3B,KAAO,YAE9BX,EAAe12B,MAAMs2B,KAAOzC,EAC5BxuB,SAASyqB,KAAKC,YAAY2G,GAC1BnpB,EAASmpB,EAAe1E,aACxB3sB,SAASyqB,KAAKI,YAAYwG,GAE5BrB,EAAYxB,GAAYtmB,EAE1B,OAAOA,GArCuB,GA8ClC,SAASqpB,EAAYN,EAAMX,GAQzB,OAPKP,IACHA,GAAiB,EAAAlE,EAAqB,uBAAC,EAAG,IAExCoF,GAAQnB,IACVC,EAAekB,KAAOA,EACtBnB,EAAcC,EAAekB,MAExBlB,EAAewB,YAAYjB,GAQ7B,SAASO,EAAiBI,EAAMX,GACrC,OAAOiB,EAAYN,EAAMX,GAAMroB,MAU1B,SAASgqB,EAAyBhB,EAAMX,EAAM9kB,GACnD,GAAI8kB,KAAQ9kB,EACV,OAAOA,EAAM8kB,GAEf,IAAMroB,EAAQqoB,EACXpiB,MAAM,MACNgkB,OAAO,SAACh5B,EAAMi5B,GAAI,OAAK3zB,KAAK+D,IAAIrJ,EAAM23B,EAAiBI,EAAMkB,KAAQ,GAExE,OADA3mB,EAAM8kB,GAAQroB,EACPA,EAQF,SAASmqB,EAAkBC,EAAWC,GAQ3C,IAPA,IAAMC,EAAS,GACTC,EAAU,GACVC,EAAa,GACfxqB,EAAQ,EACRyqB,EAAY,EACZxqB,EAAS,EACTwmB,EAAa,EACRtkC,EAAI,EAAGyI,EAAKy/B,EAAO1oC,OAAQQ,GAAKyI,EAAIzI,GAAK,EAAG,CACnD,IAAMkmC,EAAOgC,EAAOloC,GACpB,GAAa,OAATkmC,GAAiBlmC,IAAMyI,EAA3B,CAOA,IAAMo+B,EAAOqB,EAAOloC,EAAI,IAAMioC,EAAUpB,KAClC0B,EAAe9B,EAAiBI,EAAMX,GAC5CiC,EAAOjgC,KAAKqgC,GACZD,GAAaC,EACb,IAAMC,EAAgBxB,EAAkBH,GACxCuB,EAAQlgC,KAAKsgC,GACblE,EAAalwB,KAAK+D,IAAImsB,EAAYkE,QAZhC3qB,EAAQzJ,KAAK+D,IAAI0F,EAAOyqB,GACxBD,EAAWngC,KAAKogC,GAChBA,EAAY,EACZxqB,GAAUwmB,EAWd,MAAO,CAACzmB,MAAAA,EAAOC,OAAAA,EAAQqqB,OAAAA,EAAQC,QAAAA,EAASC,WAAAA,GASnC,SAASI,EAAezG,EAAS3mB,EAAUqtB,EAASC,GACxC,IAAbttB,IACF2mB,EAAQxtB,UAAUk0B,EAASC,GAC3B3G,EAAQ/tB,OAAOoH,GACf2mB,EAAQxtB,WAAWk0B,GAAUC,IAiB1B,SAASC,EACd5G,EACArvB,EACAosB,EACA8J,EACAC,EACAC,EACAC,EACAC,EACAl1B,EACAC,EACAM,GAEA0tB,EAAQkH,OAEQ,IAAZnK,IACFiD,EAAQmH,aAAepK,GAErBpsB,GACFqvB,EAAQoH,aAAatmC,MAAMk/B,EAASrvB,GAGhBk2B,EAAcQ,qBAElCrH,EAAQxtB,UAAUT,EAAGC,GACrBguB,EAAQ1tB,MAAMA,EAAM,GAAIA,EAAM,IAC9Bg1B,EAA+CT,EAAe7G,IACrD1tB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpC0tB,EAAQxtB,UAAUT,EAAGC,GACrBguB,EAAQ1tB,MAAMA,EAAM,GAAIA,EAAM,IAC9B0tB,EAAQuH,UAEJV,EAEFC,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIFjH,EAAQuH,UAEJV,EAEFC,EACAC,EACAC,EACAC,EACAl1B,EACAC,EACAg1B,EAAI10B,EAAM,GACV20B,EAAI30B,EAAM,IAId0tB,EAAQwH,UAOV,SAASF,EAAyBG,EAAOzH,GAEvC,IADA,IAAMqH,EAAsBI,EAAMJ,oBACzBrpC,EAAI,EAAGyI,EAAK4gC,EAAoB7pC,OAAQQ,EAAIyI,EAAIzI,GAAK,EACxDS,MAAMC,QAAQ2oC,EAAoBrpC,EAAI,IACxCgiC,EAAQqH,EAAoBrpC,IAAI8C,MAC9Bk/B,EACAqH,EAAoBrpC,EAAI,IAG1BgiC,EAAQqH,EAAoBrpC,IAAMqpC,EAAoBrpC,EAAI,GApLhEjC,QAAAipC,kBAAAA;;ACgT2B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA3mB3B,IAAA0C,EAAA/lC,EAAA5B,QAAA,qBACA4nC,EAAAhmC,EAAA5B,QAAA,eACAw/B,EAAAx/B,QAAA,eACA6nC,EAAA7nC,QAAA,mBACA4iC,EAAA5iC,QAAA,aACA8nC,EAAA9nC,QAAA,uBAM6B,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAiC7B,IAOM+jC,EAAYC,SAAAA,GAAA7sC,EAAA4sC,EAASjL,EAAU,SAAnB,IAAAxhC,EAAAC,EAAAwsC,GAIhB,SAAAA,EAAY97B,GAAS,IAAAxQ,EAAAC,EAAAqsC,KAAAA,GAInB,IAAM7K,OACuBx5B,IAA3BuI,EAAQixB,gBAA+BjxB,EAAQixB,eA+EnC,OA7EdzhC,EAAAH,EAAAM,KAAM,KAAA,CACJohC,QAAS,EACTE,eAAgBA,EAChB5jB,cAA+B5V,IAArBuI,EAAQqN,SAAyBrN,EAAQqN,SAAW,EAC9D/G,WAAyB7O,IAAlBuI,EAAQsG,MAAsBtG,EAAQsG,MAAQ,EACrDgrB,kBAC2B75B,IAAzBuI,EAAQsxB,aAA6BtxB,EAAQsxB,aAAe,CAAC,EAAG,GAClEE,cAAexxB,EAAQwxB,iBAOpBwK,aAAUvkC,EAMfjI,EAAKysC,oBAAsB,KAM3BzsC,EAAK0sC,WAAyBzkC,IAAjBuI,EAAQm8B,KAAqBn8B,EAAQm8B,KAAO,KAMzD3sC,EAAK4sC,QAAU,CAAC,EAAG,GAMnB5sC,EAAK6sC,QAAUr8B,EAAQs8B,OAMvB9sC,EAAK+sC,aACgB9kC,IAAnBuI,EAAQyY,OAAuBzY,EAAQyY,OAASzY,EAAQw8B,QAM1DhtC,EAAKitC,SAAWz8B,EAAQ08B,QAMxBltC,EAAKmtC,YAA2BllC,IAAlBuI,EAAQkG,MAAsBlG,EAAQkG,MAAQ,EAM5D1W,EAAKotC,aAA6BnlC,IAAnBuI,EAAQ68B,OAAuB78B,EAAQ68B,OAAS,KAM/DrtC,EAAKstC,MAAQ,KAMbttC,EAAKutC,eAAiB,KAEtBvtC,EAAKwtC,SAASxtC,EA6df,OA1dDK,EAAAisC,EAAA,CAAA,CAAAxrC,IAAA,QAAAC,MAKA,WACE,IAAM+V,EAAQ,KAAKmrB,WACblvB,EAAQ,IAAIu5B,EAAa,CAC7BK,KAAM,KAAKc,UAAY,KAAKA,UAAUh7B,aAAUxK,EAChD6kC,OAAQ,KAAKY,YACbzkB,OAAQ,KAAKhC,YACbimB,QAAS,KAAKS,aACdj3B,MAAO,KAAKk3B,WACZP,OAAQ,KAAKQ,YAAc,KAAKA,YAAYp7B,aAAUxK,EACtD4V,SAAU,KAAKskB,cACfV,eAAgB,KAAKW,oBACrBtrB,MAAO7T,MAAMC,QAAQ4T,GAASA,EAAM3R,QAAU2R,EAC9CgrB,aAAc,KAAKO,kBAAkBl9B,QACrC68B,cAAe,KAAKM,qBAGtB,OADAvvB,EAAM+6B,WAAW,KAAK5L,cACfnvB,IAGT,CAAAjS,IAAA,YAAAC,MAMA,WACE,IAAM+c,EAAO,KAAKwvB,MAClB,IAAKxvB,EACH,OAAO,KAET,IAAMgkB,EAAe,KAAKO,kBACpBvrB,EAAQ,KAAKi3B,gBAGnB,MAAO,CACLjwB,EAAK,GAAK,EAAIgkB,EAAa,GAAKhrB,EAAM,GACtCgH,EAAK,GAAK,EAAIgkB,EAAa,GAAKhrB,EAAM,MAI1C,CAAAhW,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKosC,SAGd,CAAArsC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK2rC,QAGd,CAAA5rC,IAAA,UAAAC,MAKA,SAAQ4rC,GACN,KAAKD,MAAQC,EACb,KAAKa,WAGP,CAAA1sC,IAAA,uBAAAC,MAGA,WAIE,OAHK,KAAK0rC,qBACR,KAAKuB,0BAA0B,KAAKT,gBAE/B,KAAKd,sBAGd,CAAA3rC,IAAA,WAAAC,MAMA,SAASwhC,GACP,IAAI0L,EAAQ,KAAKzB,QAAQjK,GACzB,IAAK0L,EAAO,CACV,IAAMC,EAAgB,KAAKX,eACrB/I,GAAU,EAAAP,EAAqB,uBACnCiK,EAAcpwB,KAAOykB,EACrB2L,EAAcpwB,KAAOykB,GAEvB,KAAK4L,MAAMD,EAAe1J,EAASjC,GAEnC0L,EAAQzJ,EAAQJ,OAChB,KAAKoI,QAAQjK,GAAc0L,EAE7B,OAAOA,IAGT,CAAAntC,IAAA,gBAAAC,MAKA,SAAcwhC,GACZ,OAAOA,IAGT,CAAAzhC,IAAA,eAAAC,MAGA,WACE,OAAO,KAAKusC,QAGd,CAAAxsC,IAAA,gBAAAC,MAGA,WACE,OAAOqtC,EAAU,QAACtN,SAGpB,CAAAhgC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAK6rC,UAGd,CAAA9rC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAK8rC,UAGd,CAAA/rC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKgsC,UAGd,CAAAjsC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAKksC,WAGd,CAAAnsC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAKusC,QAGd,CAAAxsC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKqsC,UAGd,CAAAtsC,IAAA,YAAAC,MAKA,SAAUssC,GACR,KAAKD,QAAUC,EACf,KAAKG,WAGP,CAAA1sC,IAAA,oBAAAC,MAGA,SAAkBuJ,MAElB,CAAAxJ,IAAA,OAAAC,MAGA,cAEA,CAAAD,IAAA,sBAAAC,MAGA,SAAoBuJ,MAEpB,CAAAxJ,IAAA,yBAAAC,MAQA,SAAuBo/B,EAAUkO,EAAahO,GAC5C,GACkB,IAAhBgO,GACA,KAAKxB,UAAYnxB,EAAAA,GACH,UAAbykB,GAAqC,UAAbA,EAEzB,OAAOkO,EAwBT,IAAIC,EAAK,KAAKvB,QACVwB,OAAuBtmC,IAAlB,KAAKglC,SAAyBqB,EAAK,KAAKrB,SACjD,GAAIqB,EAAKC,EAAI,CACX,IAAM1rC,EAAMyrC,EACZA,EAAKC,EACLA,EAAK1rC,EAEP,IAAMiqC,OACc7kC,IAAlB,KAAKglC,SAAyB,KAAKJ,QAAyB,EAAf,KAAKA,QAC9C2B,EAAS,EAAI53B,KAAKwK,GAAM0rB,EACxB5qC,EAAIqsC,EAAK33B,KAAKC,IAAI23B,GAElBp4B,EAAIk4B,EADA13B,KAAKsQ,KAAKqnB,EAAKA,EAAKrsC,EAAIA,GAE5B2H,EAAI+M,KAAKsQ,KAAKhlB,EAAIA,EAAIkU,EAAIA,GAC1Bq4B,EAAa5kC,EAAI3H,EACvB,GAAiB,UAAbi+B,GAAwBsO,GAAcpO,EACxC,OAAOoO,EAAaJ,EAetB,IAAMtpB,EAAIspB,EAAc,EAAII,EACtBluB,EAAK8tB,EAAc,GAAMj4B,EAAIvM,GAE7B6kC,EADO93B,KAAKsQ,MAAMonB,EAAKvpB,IAAMupB,EAAKvpB,GAAKxE,EAAIA,GACzB+tB,EACxB,QAAsBrmC,IAAlB,KAAKglC,UAAuC,UAAb9M,EACjC,OAAkB,EAAXuO,EAIT,IAAMC,EAAKL,EAAK13B,KAAKC,IAAI23B,GAEnBI,EAAKL,EADA33B,KAAKsQ,KAAKonB,EAAKA,EAAKK,EAAKA,GAG9BE,EADKj4B,KAAKsQ,KAAKynB,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBxO,EAAY,CACjC,IAAMyO,EAAeD,EAAkBR,EAAe,EAAIE,EAAKD,EAC/D,OAAO,EAAI13B,KAAK+D,IAAI+zB,EAAUI,GAEhC,OAAkB,EAAXJ,IAGT,CAAA5tC,IAAA,sBAAAC,MAIA,WACE,IAIIguC,EAJA5O,EAAWuH,EAAe,gBAC1BrH,EAAa,EACbN,EAAW,KACXE,EAAiB,EAEjBoO,EAAc,EAEd,KAAKjB,UAEa,QADpB2B,EAAc,KAAK3B,QAAQ9O,cAEzByQ,EAAcnH,EAAkB,oBAElCmH,GAAc,EAAA/K,EAAW,aAAC+K,QAEN9mC,KADpBomC,EAAc,KAAKjB,QAAQhwB,cAEzBixB,EAAcrG,EAAgB,kBAEhCjI,EAAW,KAAKqN,QAAQ5M,cACxBP,EAAiB,KAAKmN,QAAQ3M,yBAEbx4B,KADjBk4B,EAAW,KAAKiN,QAAQ1M,iBAEtBP,EAAWuH,EAAe,sBAGTz/B,KADnBo4B,EAAa,KAAK+M,QAAQzM,mBAExBN,EAAasH,EAAiB,oBAIlC,IAAM7jB,EAAM,KAAKkrB,uBAAuB7O,EAAUkO,EAAahO,GACzD4O,EAAYr4B,KAAK+D,IAAI,KAAKoyB,QAAS,KAAKE,UAAY,GAG1D,MAAO,CACL8B,YAAaA,EACbV,YAAaA,EACbvwB,KALWlH,KAAKgP,KAAK,EAAIqpB,EAAYnrB,GAMrCic,SAAUA,EACVE,eAAgBA,EAChBE,SAAUA,EACVE,WAAYA,KAIhB,CAAAv/B,IAAA,SAAAC,MAGA,WACE,KAAKwsC,eAAiB,KAAK2B,sBAC3B,IAAMpxB,EAAO,KAAKyvB,eAAezvB,KACjC,KAAK0uB,QAAU,GACf,KAAKc,MAAQ,CAACxvB,EAAMA,KAGtB,CAAAhd,IAAA,QAAAC,MAMA,SAAMmtC,EAAe1J,EAASjC,GAO5B,GANAiC,EAAQ1tB,MAAMyrB,EAAYA,GAE1BiC,EAAQxtB,UAAUk3B,EAAcpwB,KAAO,EAAGowB,EAAcpwB,KAAO,GAE/D,KAAKqxB,YAAY3K,GAEb,KAAKkI,MAAO,CACd,IAAIrO,EAAQ,KAAKqO,MAAMpO,WACT,OAAVD,IACFA,EAAQiJ,EAAgB,kBAE1B9C,EAAQ4K,WAAY,EAAApL,EAAW,aAAC3F,GAChCmG,EAAQmI,OAEN,KAAKS,UACP5I,EAAQuK,YAAcb,EAAca,YACpCvK,EAAQsG,UAAYoD,EAAcG,YAC9BH,EAAcnO,WAChByE,EAAQ6K,YAAYnB,EAAcnO,UAClCyE,EAAQvE,eAAiBiO,EAAcjO,gBAEzCuE,EAAQrE,SAAW+N,EAAc/N,SACjCqE,EAAQnE,WAAa6N,EAAc7N,WACnCmE,EAAQ6I,YAIZ,CAAAvsC,IAAA,4BAAAC,MAIA,SAA0BmtC,GACxB,GAAI,KAAKxB,MAAO,CACd,IAAIrO,EAAQ,KAAKqO,MAAMpO,WAGnBiD,EAAU,EASd,GARqB,iBAAVlD,IACTA,GAAQ,EAAAiF,EAAO,SAACjF,IAEJ,OAAVA,EACFkD,EAAU,EACDt+B,MAAMC,QAAQm7B,KACvBkD,EAA2B,IAAjBlD,EAAMr8B,OAAeq8B,EAAM,GAAK,GAE5B,IAAZkD,EAAe,CAGjB,IAAMiD,GAAU,EAAAP,EAAqB,uBACnCiK,EAAcpwB,KACdowB,EAAcpwB,MAEhB,KAAK2uB,oBAAsBjI,EAAQJ,OAEnC,KAAKkL,wBAAwBpB,EAAe1J,IAG3C,KAAKiI,sBACR,KAAKA,oBAAsB,KAAK8C,SAAS,MAI7C,CAAAzuC,IAAA,cAAAC,MAIA,SAAYyjC,GACV,IAAIsI,EAAS,KAAKD,QACZ5jB,EAAS,KAAK8jB,QACpB,GAAID,IAAWpxB,EAAAA,EACb8oB,EAAQgL,IAAI,EAAG,EAAGvmB,EAAQ,EAAG,EAAIrS,KAAKwK,QACjC,CACL,IAAM8rB,OAA4BjlC,IAAlB,KAAKglC,SAAyBhkB,EAAS,KAAKgkB,cACtChlC,IAAlB,KAAKglC,WACPH,GAAU,GAIZ,IAFA,IAAMjS,EAAa,KAAKsS,OAASv2B,KAAKwK,GAAK,EACrCquB,EAAQ,EAAI74B,KAAKwK,GAAM0rB,EACpBtqC,EAAI,EAAGA,EAAIsqC,EAAQtqC,IAAK,CAC/B,IAAMktC,EAAS7U,EAAar4B,EAAIitC,EAC1BE,EAAUntC,EAAI,GAAM,EAAIymB,EAASikB,EACvC1I,EAAQoL,OAAOD,EAAU/4B,KAAKD,IAAI+4B,GAASC,EAAU/4B,KAAKC,IAAI64B,IAEhElL,EAAQqL,eAIZ,CAAA/uC,IAAA,0BAAAC,MAKA,SAAwBmtC,EAAe1J,GAErCA,EAAQxtB,UAAUk3B,EAAcpwB,KAAO,EAAGowB,EAAcpwB,KAAO,GAE/D,KAAKqxB,YAAY3K,GAEjBA,EAAQ4K,UAAY9H,EAAgB,iBACpC9C,EAAQmI,OACJ,KAAKS,UACP5I,EAAQuK,YAAcb,EAAca,YACpCvK,EAAQsG,UAAYoD,EAAcG,YAC9BH,EAAcnO,WAChByE,EAAQ6K,YAAYnB,EAAcnO,UAClCyE,EAAQvE,eAAiBiO,EAAcjO,gBAEzCuE,EAAQrE,SAAW+N,EAAc/N,SACjCqE,EAAQnE,WAAa6N,EAAc7N,WACnCmE,EAAQ6I,cAEXf,EArjBeC,GAAmBjsC,EAwjBtBgsC,EAAY/rC,QAAAC,QAAAF;;AC9hBD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7E1B,IAAAwvC,EAAA3pC,EAAA5B,QAAA,sBAA6C,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAiB7C,IAKMwnC,EAAWC,SAAAA,GAAAtwC,EAAAqwC,EAASzD,EAAY,SAArB,IAAAzsC,EAAAC,EAAAiwC,GAIf,SAAAA,EAAYv/B,GACgC,OADvBvQ,EAAA8vC,KAAAA,GACnBv/B,EAAUA,GAAoB,CAACyY,OAAQ,GAAGppB,EAAAM,KAEpC,KAAA,CACJ2sC,OAAQpxB,EAAAA,EACRixB,KAAMn8B,EAAQm8B,KACd1jB,OAAQzY,EAAQyY,OAChBokB,OAAQ78B,EAAQ68B,OAChBv2B,WAAyB7O,IAAlBuI,EAAQsG,MAAsBtG,EAAQsG,MAAQ,EACrD+G,cAA+B5V,IAArBuI,EAAQqN,SAAyBrN,EAAQqN,SAAW,EAC9D4jB,oBAC6Bx5B,IAA3BuI,EAAQixB,gBAA+BjxB,EAAQixB,eACjDK,kBAC2B75B,IAAzBuI,EAAQsxB,aAA6BtxB,EAAQsxB,aAAe,CAAC,EAAG,GAClEE,cAAexxB,EAAQwxB,gBAkC1B,OA9BD3hC,EAAA0vC,EAAA,CAAA,CAAAjvC,IAAA,QAAAC,MAKA,WACE,IAAM+V,EAAQ,KAAKmrB,WACblvB,EAAQ,IAAIg9B,EAAY,CAC5BpD,KAAM,KAAKc,UAAY,KAAKA,UAAUh7B,aAAUxK,EAChDolC,OAAQ,KAAKQ,YAAc,KAAKA,YAAYp7B,aAAUxK,EACtDghB,OAAQ,KAAKhC,YACbnQ,MAAO7T,MAAMC,QAAQ4T,GAASA,EAAM3R,QAAU2R,EAC9C+G,SAAU,KAAKskB,cACfV,eAAgB,KAAKW,oBACrBN,aAAc,KAAKO,kBAAkBl9B,QACrC68B,cAAe,KAAKM,qBAGtB,OADAvvB,EAAM+6B,WAAW,KAAK5L,cACfnvB,IAGT,CAAAjS,IAAA,YAAAC,MAMA,SAAUkoB,GACR,KAAK8jB,QAAU9jB,EACf,KAAKukB,aACNuC,EApDcC,GAAqB1vC,EAuDvByvC,EAAWxvC,QAAAC,QAAAF;;ACoeN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,WAAA,EAjjBpB,IAAA2vC,EAAA9pC,EAAA5B,QAAA,gBACA2rC,EAAA/pC,EAAA5B,QAAA,cACA4rC,EAAAhqC,EAAA5B,QAAA,gBACAoN,EAAApN,QAAA,iBAAqC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAiDrC,IA+FMuoC,EAAK,WAIT,SAAAA,EAAY5/B,GAASvQ,EAAAmwC,KAAAA,GACnB5/B,EAAUA,GAAW,GAMrB,KAAK6/B,UAAY,KAMjB,KAAKC,kBAAoBC,OAEAtoC,IAArBuI,EAAQ8B,UACV,KAAKC,YAAY/B,EAAQ8B,UAO3B,KAAKo6B,WAAyBzkC,IAAjBuI,EAAQm8B,KAAqBn8B,EAAQm8B,KAAO,KAMzD,KAAK6D,YAA2BvoC,IAAlBuI,EAAQy9B,MAAsBz9B,EAAQy9B,MAAQ,KAM5D,KAAKwC,eAAiCxoC,IAArBuI,EAAQkgC,SAAyBlgC,EAAQkgC,SAAW,KAMrE,KAAKC,2BAC8B1oC,IAAjCuI,EAAQogC,qBACJpgC,EAAQogC,qBACR,KAMN,KAAKxD,aAA6BnlC,IAAnBuI,EAAQ68B,OAAuB78B,EAAQ68B,OAAS,KAM/D,KAAKwD,WAAyB5oC,IAAjBuI,EAAQk4B,KAAqBl4B,EAAQk4B,KAAO,KAMzD,KAAKoI,QAAUtgC,EAAQugC,OA2MxB,OAxMD1wC,EAAA+vC,EAAA,CAAA,CAAAtvC,IAAA,QAAAC,MAKA,WACE,IAAIuR,EAAW,KAAKQ,cAMpB,OALIR,GAAgC,WAApB9L,EAAO8L,KACrBA,EACEA,EACAG,SAEG,IAAI29B,EAAM,CACf99B,SAAUA,EACVq6B,KAAM,KAAKc,UAAY,KAAKA,UAAUh7B,aAAUxK,EAChDgmC,MAAO,KAAKsB,WAAa,KAAKA,WAAW98B,aAAUxK,EACnDyoC,SAAU,KAAKM,cACf3D,OAAQ,KAAKQ,YAAc,KAAKA,YAAYp7B,aAAUxK,EACtDygC,KAAM,KAAKuI,UAAY,KAAKA,UAAUx+B,aAAUxK,EAChD8oC,OAAQ,KAAKv9B,gBAIjB,CAAA1S,IAAA,cAAAC,MAMA,WACE,OAAO,KAAK0vC,YAGd,CAAA3vC,IAAA,cAAAC,MAMA,SAAY2vC,GACV,KAAKD,UAAYC,IAGnB,CAAA5vC,IAAA,0BAAAC,MAMA,SAAwB2vC,GACtB,KAAKC,sBAAwBD,IAG/B,CAAA5vC,IAAA,0BAAAC,MAMA,WACE,OAAO,KAAK4vC,wBAGd,CAAA7vC,IAAA,cAAAC,MAOA,WACE,OAAO,KAAKsvC,YAGd,CAAAvvC,IAAA,sBAAAC,MAMA,WACE,OAAO,KAAKuvC,oBAGd,CAAAxvC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK2rC,QAGd,CAAA5rC,IAAA,UAAAC,MAKA,SAAQ4rC,GACN,KAAKD,MAAQC,IAGf,CAAA7rC,IAAA,WAAAC,MAKA,WACE,OAAO,KAAKyvC,SAGd,CAAA1vC,IAAA,WAAAC,MAKA,SAASktC,GACP,KAAKuC,OAASvC,IAGhB,CAAAntC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKqsC,UAGd,CAAAtsC,IAAA,YAAAC,MAKA,SAAUssC,GACR,KAAKD,QAAUC,IAGjB,CAAAvsC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK8vC,QAGd,CAAA/vC,IAAA,UAAAC,MAKA,SAAQ2nC,GACN,KAAKmI,MAAQnI,IAGf,CAAA5nC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAK+vC,UAGd,CAAAhwC,IAAA,cAAAC,MAQA,SAAYuR,GACc,mBAAbA,EACT,KAAKg+B,kBAAoBh+B,EACI,iBAAbA,EAChB,KAAKg+B,kBAAoB,SAAUY,GACjC,OACEA,EAAQjgC,IAAIqB,IAGNA,OAEYrK,IAAbqK,IACT,KAAKg+B,kBAAoB,WACvB,OAAO,IAHT,KAAKA,kBAAoBC,EAM3B,KAAKF,UAAY/9B,IAGnB,CAAAxR,IAAA,YAAAC,MAMA,SAAUgwC,GACR,KAAKD,QAAUC,MAChBX,EA7QQ,GAwRJ,SAASe,EAAW/tC,GACzB,IAAIguC,EAEJ,GAAmB,mBAARhuC,EACTguC,EAAgBhuC,MACX,CAIL,IAAImQ,EACJ,GAAItQ,MAAMC,QAAQE,GAChBmQ,EAASnQ,OAET,EAAAoO,EAAM,QAA+C,mBAApBpO,EAAKoQ,UAA2B,IAEjED,EAAS,CAD2BnQ,GAGtCguC,EAAgB,WACd,OAAO79B,GAGX,OAAO69B,EAMT,IAAIC,EAAgB,KAOb,SAASC,EAAmBJ,EAAStzB,GAM1C,IAAKyzB,EAAe,CAClB,IAAM1E,EAAO,IAAIxO,EAAI,QAAC,CACpBE,MAAO,0BAEHgP,EAAS,IAAI1N,EAAM,QAAC,CACxBtB,MAAO,UACPhe,MAAO,OAETgxB,EAAgB,CACd,IAAIjB,EAAM,CACRnC,MAAO,IAAI8B,EAAW,QAAC,CACrBpD,KAAMA,EACNU,OAAQA,EACRpkB,OAAQ,IAEV0jB,KAAMA,EACNU,OAAQA,KAId,OAAOgE,EAOF,SAASE,IAEd,IAAMh+B,EAAS,GACTi+B,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxBC,EAAO,CAAC,EAAG,IAAK,IAAK,GAmD3B,OAjDAl+B,EAAgB,QAAI,CAClB,IAAI68B,EAAM,CACRzD,KAAM,IAAIxO,EAAI,QAAC,CACbE,MAAO,CAAC,IAAK,IAAK,IAAK,SAI7B9qB,EAAqB,aAAIA,EAAgB,QAEzCA,EAAmB,WAAI,CACrB,IAAI68B,EAAM,CACR/C,OAAQ,IAAI1N,EAAM,QAAC,CACjBtB,MAAOmT,EACPnxB,MAAOA,MAGX,IAAI+vB,EAAM,CACR/C,OAAQ,IAAI1N,EAAM,QAAC,CACjBtB,MAAOoT,EACPpxB,MApBQ,OAwBd9M,EAAwB,gBAAIA,EAAmB,WAE/CA,EAAe,OAAIA,EAAgB,QAAElE,OAAOkE,EAAmB,YAE/DA,EAAc,MAAI,CAChB,IAAI68B,EAAM,CACRnC,MAAO,IAAI8B,EAAW,QAAC,CACrB9mB,OAAQ5I,EACRssB,KAAM,IAAIxO,EAAI,QAAC,CACbE,MAAOoT,IAETpE,OAAQ,IAAI1N,EAAM,QAAC,CACjBtB,MAAOmT,EACPnxB,MAAOA,QAGX0wB,OAAQr1B,EAAAA,KAGZnI,EAAmB,WAAIA,EAAc,MAErCA,EAA2B,mBAAIA,EAAgB,QAAElE,OAC/CkE,EAAmB,WACnBA,EAAc,OAGTA,EAQT,SAASg9B,EAAwBW,GAC/B,OAAOA,EAAQp+B,cAChB,IAAAxS,EAEc8vC,EAAK7vC,QAAAC,QAAAF;;AC+CD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjmBnB,IAAA4vC,EAAA/pC,EAAA5B,QAAA,cACA68B,EAAA78B,QAAA,cAAkC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAoBlC,IAAM6pC,EAAqB,OA+CrBC,EAAI,WAIR,SAAAA,EAAYnhC,GAASvQ,EAAA0xC,KAAAA,GACnBnhC,EAAUA,GAAW,GAMrB,KAAKohC,MAAQphC,EAAQ64B,KAMrB,KAAK3H,UAAYlxB,EAAQqN,SAMzB,KAAK2jB,gBAAkBhxB,EAAQixB,eAM/B,KAAKE,OAASnxB,EAAQsG,MAMtB,KAAK8qB,aAAc,EAAAT,EAAM,aAAmBl5B,IAAlBuI,EAAQsG,MAAsBtG,EAAQsG,MAAQ,GAMxE,KAAK+5B,MAAQrgC,EAAQk4B,KAMrB,KAAKmJ,WAAarhC,EAAQshC,UAM1B,KAAKC,SAAWvhC,EAAQwhC,QAMxB,KAAKC,QAAUzhC,EAAQ0hC,OAMvB,KAAKC,cAAgB3hC,EAAQ4hC,aAM7B,KAAK1F,WACczkC,IAAjBuI,EAAQm8B,KACJn8B,EAAQm8B,KACR,IAAIxO,EAAI,QAAC,CAACE,MAAOqT,IAMvB,KAAKW,eACkBpqC,IAArBuI,EAAQ8hC,SAAyB9hC,EAAQ8hC,SAAW17B,KAAKwK,GAAK,EAMhE,KAAKmxB,gBACmBtqC,IAAtBuI,EAAQgiC,UAA0BhiC,EAAQgiC,UAAY,QAMxD,KAAKC,YAAcjiC,EAAQkiC,SAM3B,KAAKtF,aAA6BnlC,IAAnBuI,EAAQ68B,OAAuB78B,EAAQ68B,OAAS,KAM/D,KAAKsF,cAA+B1qC,IAApBuI,EAAQ06B,QAAwB16B,EAAQ06B,QAAU,EAMlE,KAAK0H,cAA+B3qC,IAApBuI,EAAQ26B,QAAwB36B,EAAQ26B,QAAU,EAMlE,KAAK0H,gBAAkBriC,EAAQsiC,eAC3BtiC,EAAQsiC,eACR,KAMJ,KAAKC,kBAAoBviC,EAAQwiC,iBAC7BxiC,EAAQwiC,iBACR,KAMJ,KAAKC,cAA+BhrC,IAApBuI,EAAQy5B,QAAwB,KAAOz5B,EAAQy5B,QAoZhE,OAjZD5pC,EAAAsxC,EAAA,CAAA,CAAA7wC,IAAA,QAAAC,MAKA,WACE,IAAM+V,EAAQ,KAAKmrB,WACnB,OAAO,IAAI0P,EAAK,CACdtI,KAAM,KAAK6J,UACXV,UAAW,KAAKW,eAChBjB,OAAQ,KAAKkB,YACbd,SAAU,KAAKe,cACfX,SAAU,KAAKY,cACfz1B,SAAU,KAAKskB,cACfV,eAAgB,KAAKW,oBACrBtrB,MAAO7T,MAAMC,QAAQ4T,GAASA,EAAM3R,QAAU2R,EAC9C4xB,KAAM,KAAKuI,UACXa,UAAW,KAAKyB,eAChBvB,QAAS,KAAKwB,aACdpB,aAAc,KAAKqB,kBACnB9G,KAAM,KAAKc,UAAY,KAAKA,UAAUh7B,aAAUxK,EAChDolC,OAAQ,KAAKQ,YAAc,KAAKA,YAAYp7B,aAAUxK,EACtDijC,QAAS,KAAKwI,aACdvI,QAAS,KAAKwI,aACdb,eAAgB,KAAKc,oBACjB,KAAKA,oBAAoBnhC,aACzBxK,EACJ+qC,iBAAkB,KAAKa,sBACnB,KAAKA,sBAAsBphC,aAC3BxK,EACJgiC,QAAS,KAAK6J,mBAAgB7rC,MAIlC,CAAAnH,IAAA,cAAAC,MAKA,WACE,OAAO,KAAK0xC,YAGd,CAAA3xC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK6wC,QAGd,CAAA9wC,IAAA,cAAAC,MAKA,WACE,OAAO,KAAKsxC,YAGd,CAAAvxC,IAAA,eAAAC,MAKA,WACE,OAAO,KAAKwxC,aAGd,CAAAzxC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKkxC,UAGd,CAAAnxC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAK4xC,WAGd,CAAA7xC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAK6xC,WAGd,CAAA9xC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK2rC,QAGd,CAAA5rC,IAAA,oBAAAC,MAKA,WACE,OAAO,KAAKygC,kBAGd,CAAA1gC,IAAA,cAAAC,MAKA,WACE,OAAO,KAAK2gC,YAGd,CAAA5gC,IAAA,WAAAC,MAKA,WACE,OAAO,KAAK4gC,SAGd,CAAA7gC,IAAA,gBAAAC,MAIA,WACE,OAAO,KAAK6gC,cAGd,CAAA9gC,IAAA,YAAAC,MAKA,WACE,OAAO,KAAKqsC,UAGd,CAAAtsC,IAAA,UAAAC,MAKA,WACE,OAAO,KAAK8vC,QAGd,CAAA/vC,IAAA,eAAAC,MAKA,WACE,OAAO,KAAK8wC,aAGd,CAAA/wC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAKgxC,WAGd,CAAAjxC,IAAA,kBAAAC,MAKA,WACE,OAAO,KAAKoxC,gBAGd,CAAArxC,IAAA,oBAAAC,MAKA,WACE,OAAO,KAAK8xC,kBAGd,CAAA/xC,IAAA,sBAAAC,MAKA,WACE,OAAO,KAAKgyC,oBAGd,CAAAjyC,IAAA,aAAAC,MAKA,WACE,OAAO,KAAKkyC,WAGd,CAAAnyC,IAAA,cAAAC,MAMA,SAAY2xC,GACV,KAAKD,UAAYC,IAGnB,CAAA5xC,IAAA,UAAAC,MAMA,SAAQsoC,GACN,KAAKuI,MAAQvI,IAGf,CAAAvoC,IAAA,cAAAC,MAMA,SAAYuxC,GACV,KAAKD,UAAYC,IAGnB,CAAAxxC,IAAA,aAAAC,MAMA,SAAWmqC,GACT,KAAKyH,SAAWzH,IAGlB,CAAApqC,IAAA,aAAAC,MAMA,SAAWoqC,GACT,KAAKyH,SAAWzH,IAGlB,CAAArqC,IAAA,eAAAC,MAMA,SAAayxC,GACX,KAAKD,WAAaC,IAGpB,CAAA1xC,IAAA,YAAAC,MAKA,SAAUmxC,GACR,KAAKD,QAAUC,IAGjB,CAAApxC,IAAA,oBAAAC,MAMA,SAAkB0gC,GAChB,KAAKD,gBAAkBC,IAGzB,CAAA3gC,IAAA,UAAAC,MAMA,SAAQ4rC,GACN,KAAKD,MAAQC,IAGf,CAAA7rC,IAAA,cAAAC,MAMA,SAAY8c,GACV,KAAK6jB,UAAY7jB,IAGnB,CAAA/c,IAAA,WAAAC,MAMA,SAAS+V,GACP,KAAK6qB,OAAS7qB,EACd,KAAK8qB,aAAc,EAAAT,EAAM,aAAWl5B,IAAV6O,EAAsBA,EAAQ,KAG1D,CAAAhW,IAAA,YAAAC,MAMA,SAAUssC,GACR,KAAKD,QAAUC,IAGjB,CAAAvsC,IAAA,UAAAC,MAMA,SAAQ2nC,GACN,KAAKmI,MAAQnI,IAGf,CAAA5nC,IAAA,eAAAC,MAMA,SAAa+wC,GACX,KAAKD,WAAaC,IAGpB,CAAAhxC,IAAA,aAAAC,MAMA,SAAWixC,GACT,KAAKD,SAAWC,IAGlB,CAAAlxC,IAAA,kBAAAC,MAMA,SAAgBqxC,GACd,KAAKD,cAAgBC,IAGvB,CAAAtxC,IAAA,oBAAAC,MAMA,SAAkB4rC,GAChB,KAAKkG,gBAAkBlG,IAGzB,CAAA7rC,IAAA,sBAAAC,MAMA,SAAoBssC,GAClB,KAAK0F,kBAAoB1F,IAG3B,CAAAvsC,IAAA,aAAAC,MAMA,SAAWkpC,GACT,KAAKgJ,SAAWhJ,MACjB0H,EA1hBO,GA0hBPrxC,EAGYqxC,EAAIpxC,QAAAC,QAAAF;;ACllBlB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAdD,IAAAA,EAGe,CACbyzC,QAAS,UACTC,QAAS,UACTrxB,OAAQ,SACRsxB,QAAS,SACTC,eAAgB,gBAChBC,eAAgB,gBAChBC,SAAU,UACVC,SAAU,UACVC,OAAQ,SACRC,IAAK,OACNh0C,QAAAC,QAAAF;;AC2XuB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1YxB,IAAAyP,EAAA5J,EAAA5B,QAAA,iBACAiwC,EAAAruC,EAAA5B,QAAA,kBACAiK,EAAAjK,QAAA,cACAoN,EAAApN,QAAA,iBACAqiB,EAAAriB,QAAA,cAAiC,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAkzB,IAAAA,OAAAA,EAAA3xB,oBAAAA,SAAAA,QAAA6H,IAAA7H,QAAA6H,IAAAvI,OAAAqyB,SAAAl6B,EAAAmF,EAAAg1B,GAAAC,IAAAA,EAAAC,EAAAr6B,EAAAmF,GAAAi1B,GAAAA,EAAAA,CAAAE,IAAAA,EAAA9zB,OAAA+zB,yBAAAH,EAAAj1B,GAAAm1B,OAAAA,EAAAlqB,IAAAkqB,EAAAlqB,IAAA9Q,KAAAiF,UAAApD,OAAAnB,EAAAA,EAAAm6B,GAAAG,EAAAp6B,SAAAuE,MAAAF,KAAAA,WAAA,SAAA81B,EAAAn1B,EAAAC,GAAAqB,MAAAA,OAAAnC,UAAAgK,eAAA/O,KAAA4F,EAAAC,IAAAD,QAAAA,EAAAmD,EAAAnD,MAAAA,OAAAA,EAAA,SAAArG,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GA6CjC,IAUMksC,EAASnkC,SAAAA,GAAA5Q,EAAA+0C,EAAS9lC,EAAU,SAAnB,IAAA9O,EAAAC,EAAA20C,GAIb,SAAAA,EAAYjkC,GAAS,IAAAxQ,EAAAC,EAAAw0C,KAAAA,IACnBz0C,EAAAH,EAAAM,KAAA,OAKKkN,GAKLrN,EAAKyM,KAKLzM,EAAKwN,GAMLxN,EAAK00C,YAAclkC,EAAQmkC,WAK3B,IAAMniC,EAAanL,OAAO8H,OAAO,GAAIqB,GAoClB,MAnCe,WAA9BhK,EAAOgK,EAAQgC,qBACVA,EAAWA,WAClBnL,OAAO8H,OAAOqD,EAAYhC,EAAQgC,aAGpCA,EAAWoiC,EAAa,QAACb,cACH9rC,IAApBuI,EAAQ+wB,QAAwB/wB,EAAQ+wB,QAAU,GACpD,EAAA/vB,EAAM,QAA8C,iBAAtCgB,EAAWoiC,EAAa,QAACb,SAAuB,IAE9DvhC,EAAWoiC,EAAa,QAACZ,cACH/rC,IAApBuI,EAAQqkC,SAAwBrkC,EAAQqkC,QAC1CriC,EAAWoiC,EAAa,QAACX,SAAWzjC,EAAQugC,OAC5Cv+B,EAAWoiC,EAAa,QAACV,qBACGjsC,IAA1BuI,EAAQskC,cAA8BtkC,EAAQskC,cAAgBp5B,EAAAA,EAChElJ,EAAWoiC,EAAa,QAACT,qBACGlsC,IAA1BuI,EAAQukC,cAA8BvkC,EAAQukC,cAAgB,EAChEviC,EAAWoiC,EAAa,QAACP,eACHpsC,IAApBuI,EAAQwkC,QAAwBxkC,EAAQwkC,SAAWt5B,EAAAA,EACrDlJ,EAAWoiC,EAAa,QAACR,eACHnsC,IAApBuI,EAAQykC,QAAwBzkC,EAAQykC,QAAUv5B,EAAAA,EAMpD1b,EAAKk1C,gBACsBjtC,IAAzBuK,EAAW2iC,UAA0B3iC,EAAW2iC,UAAY,kBACvD3iC,EAAW2iC,UAElBn1C,EAAKiP,cAAcuD,GAMnBxS,EAAKo1C,OAAS,KAAKp1C,EAyQpB,OAtQDK,EAAAo0C,EAAA,CAAA,CAAA3zC,IAAA,gBAAAC,MAIA,WACE,OAAO,KAAK2zC,cAGd,CAAA5zC,IAAA,eAAAC,MAGA,WACE,OAAO,KAAKm0C,aAGd,CAAAp0C,IAAA,gBAAAC,MAOA,SAAcs0C,GAEZ,IAAMC,EACJ,KAAKF,QACa,CAChBG,MAAO,KACPF,aAAqBptC,IAAZotC,GAA+BA,GAEtCtE,EAAS,KAAKv9B,YAWpB,OAVA8hC,EAAM/T,SAAU,EAAAnd,EAAK,OAACxN,KAAK+O,MAA0B,IAApB,KAAKuc,cAAsB,IAAK,EAAG,GACpEoT,EAAMT,QAAU,KAAKW,aACrBF,EAAMp7B,OAAS,KAAKyG,YACpB20B,EAAMvE,YAAoB9oC,IAAX8oC,GAAyBuE,EAAMD,QAAqBtE,EAAXr1B,EAAAA,EACxD45B,EAAMR,cAAgB,KAAKW,mBAC3BH,EAAMP,cAAgBn+B,KAAK+D,IAAI,KAAK+6B,mBAAoB,GACxDJ,EAAMN,QAAU,KAAKW,aACrBL,EAAML,QAAU,KAAKW,aACrB,KAAKR,OAASE,EAEPA,IAGT,CAAAx0C,IAAA,iBAAAC,MAMA,SAAewP,GACb,OAAO,EAAAvC,EAAQ,cAGjB,CAAAlN,IAAA,sBAAAC,MAMA,SAAoB80C,GAClB,OAAO,EAAA7nC,EAAQ,cAGjB,CAAAlN,IAAA,YAAAC,MAOA,WACE,OACE,KAAKkQ,IAAI2jC,EAAa,QAACjyB,UAI3B,CAAA7hB,IAAA,mBAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACV,kBAGvD,CAAApzC,IAAA,mBAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACT,kBAGvD,CAAArzC,IAAA,aAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACP,YAGvD,CAAAvzC,IAAA,aAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACR,YAGvD,CAAAtzC,IAAA,aAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACb,WAGvD,CAAAjzC,IAAA,iBAAAC,MAIA,WACE,OAAO,EAAAiN,EAAQ,cAGjB,CAAAlN,IAAA,aAAAC,MAOA,WACE,OAA+B,KAAKkQ,IAAI2jC,EAAa,QAACZ,WAGxD,CAAAlzC,IAAA,YAAAC,MAOA,WACE,OAA8B,KAAKkQ,IAAI2jC,EAAa,QAACX,WAGvD,CAAAnzC,IAAA,gBAAAC,MAIA,SAAc4zC,GACZ,KAAKD,YAAcC,EACnB,KAAKzhC,YAGP,CAAApS,IAAA,YAAAC,MAOA,SAAUmZ,GACR,KAAKxK,IAAIklC,EAAa,QAACjyB,OAAQzI,KAGjC,CAAApZ,IAAA,mBAAAC,MAMA,SAAiB+zC,GACf,KAAKplC,IAAIklC,EAAa,QAACV,eAAgBY,KAGzC,CAAAh0C,IAAA,mBAAAC,MAMA,SAAiBg0C,GACf,KAAKrlC,IAAIklC,EAAa,QAACT,eAAgBY,KAGzC,CAAAj0C,IAAA,aAAAC,MAQA,SAAWk0C,GACT,KAAKvlC,IAAIklC,EAAa,QAACR,SAAUa,KAGnC,CAAAn0C,IAAA,aAAAC,MAQA,SAAWi0C,GACT,KAAKtlC,IAAIklC,EAAa,QAACP,SAAUW,KAGnC,CAAAl0C,IAAA,aAAAC,MAMA,SAAWwgC,IACT,EAAA/vB,EAAM,QAAoB,iBAAZ+vB,EAAsB,IACpC,KAAK7xB,IAAIklC,EAAa,QAACb,QAASxS,KAGlC,CAAAzgC,IAAA,aAAAC,MAMA,SAAW8zC,GACT,KAAKnlC,IAAIklC,EAAa,QAACZ,QAASa,KAGlC,CAAA/zC,IAAA,YAAAC,MAOA,SAAU+0C,GACR,KAAKpmC,IAAIklC,EAAa,QAACX,QAAS6B,KAGlC,CAAAh1C,IAAA,kBAAAC,MAGA,WACM,KAAKq0C,SACP,KAAKA,OAAOG,MAAQ,KACpB,KAAKH,OAAS,MAEhBra,EAAA7xB,EAAAurC,EAAAvvC,WAAA/E,kBAAAA,MAAAA,KAAA,UACDs0C,EA5UYnkC,GAAmBhQ,EA+UnBm0C,EAASl0C,QAAAC,QAAAF;;ACnYvB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAND,IAAAA,EAGe,CACby1C,UAAW,EACXC,YAAa,GACdz1C,QAAAC,QAAAF;;ACCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAPD,IAAAA,EAGe,CACb21C,OAAQ,SACRC,WAAY,aACZC,SAAU,YACX51C,QAAAC,QAAAF;;ACGoC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,QAAA,sBAAA,EAN9B,IAAM81C,EAAmB,GAEhC71C,QAAA61C,iBAAAA,EAIO,IAAMC,EAAoB,IAAI91C,QAAA81C,kBAAAA;;ACgErC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,KAAA,EA3EA,IAAAzvB,EAAAriB,QAAA,aAaO,SAAS+xC,EAAap8B,EAAQq8B,EAAYC,GAC/C,OAAA,SASY74B,EAAQC,EAAYE,EAAM24B,EAAUC,GAC5C,GAAK/4B,EAAL,CAGA,IAAKC,IAAe24B,EAClB,OAAO54B,EAET,IAAMg5B,EAAYJ,EAAa,EAAIz4B,EAAK,GAAKF,EACvCg5B,EAAaL,EAAa,EAAIz4B,EAAK,GAAKF,EACxCi5B,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC1Ct7B,EAAOlB,EAAO,GAAKy8B,EAAY,EAAIE,EACnCv7B,EAAOpB,EAAO,GAAKy8B,EAAY,EAAIE,EACnCx7B,EAAOnB,EAAO,GAAK08B,EAAa,EAAIE,EACpCv7B,EAAOrB,EAAO,GAAK08B,EAAa,EAAIE,EAIpC17B,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAIzB,IAAI9E,GAAI,EAAA6N,EAAK,OAACzG,EAAO,GAAIvC,EAAME,GAC3B9E,GAAI,EAAA4N,EAAK,OAACzG,EAAO,GAAItC,EAAME,GAG/B,GAAIk7B,GAAYD,GAAU54B,EAAY,CACpC,IAAMsjB,EAAQ,GAAKtjB,EACnBrH,IACG2qB,EAAQtqB,KAAKkM,IAAI,EAAIlM,KAAK+D,IAAI,EAAGS,EAAOuC,EAAO,IAAMujB,GACtDA,EAAQtqB,KAAKkM,IAAI,EAAIlM,KAAK+D,IAAI,EAAGgD,EAAO,GAAKrC,GAAQ4lB,GACvD1qB,IACG0qB,EAAQtqB,KAAKkM,IAAI,EAAIlM,KAAK+D,IAAI,EAAGU,EAAOsC,EAAO,IAAMujB,GACtDA,EAAQtqB,KAAKkM,IAAI,EAAIlM,KAAK+D,IAAI,EAAGgD,EAAO,GAAKpC,GAAQ2lB,GAGzD,MAAO,CAAC3qB,EAAGC,KASV,SAASgU,EAAK7M,GACnB,OAAOA;;ACmKT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,wBAAA,EA7OA,IAAAiJ,EAAAriB,QAAA,aACAoiB,EAAApiB,QAAA,eACAD,EAAAC,QAAA,cAeA,SAASwyC,EACPn5B,EACAo5B,EACAC,EACAC,GAEA,IAAMC,GAAc,EAAA/5B,EAAQ,UAAC45B,GAAaC,EAAa,GACjDG,GAAc,EAAA/5B,EAAS,WAAC25B,GAAaC,EAAa,GAExD,OAAIC,EACKtgC,KAAK8D,IAAIkD,EAAYhH,KAAK+D,IAAIw8B,EAAaC,IAE7CxgC,KAAK8D,IAAIkD,EAAYhH,KAAK8D,IAAIy8B,EAAaC,IAepD,SAASC,EAA2Bz5B,EAAYk3B,EAAeC,GAC7D,IAAI9rC,EAAS2N,KAAK8D,IAAIkD,EAAYk3B,GAalC,OAVA7rC,GACE2N,KAAKkM,IAAI,EAHG,GAGSlM,KAAK+D,IAAI,EAAGiD,EAAak3B,EAAgB,IAHlD,GAIZ,EACEC,IACF9rC,EAAS2N,KAAK+D,IAAI1R,EAAQ8rC,GAC1B9rC,GACE2N,KAAKkM,IAAI,EARC,GAQWlM,KAAK+D,IAAI,EAAGo6B,EAAgBn3B,EAAa,IARpD,GAUV,IAEG,EAAAwG,EAAK,OAACnb,EAAQ8rC,EAAgB,EAAmB,EAAhBD,GAUnC,SAASwC,EACdC,EACAf,EACAQ,EACAE,GAGA,OADAV,OAAoBvuC,IAAXuuC,GAAuBA,EAChC,SAQY54B,EAAYtb,EAAWwb,EAAM24B,GACrC,QAAmBxuC,IAAf2V,EAA0B,CAC5B,IAAMk3B,EAAgByC,EAAY,GAC5BxC,EAAgBwC,EAAYA,EAAYv1C,OAAS,GACjDw1C,EAAeR,EACjBD,EACEjC,EACAkC,EACAl5B,EACAo5B,GAEFpC,EAGJ,GAAI2B,EACF,OAAKD,EAGEa,EACLz5B,EACA45B,EACAzC,IALO,EAAA3wB,EAAK,OAACxG,EAAYm3B,EAAeyC,GAS5C,IAAMC,EAAS7gC,KAAK8D,IAAI88B,EAAc55B,GAChC85B,EAAI9gC,KAAKkK,OAAM,EAAA1e,EAAiB,mBAACm1C,EAAaE,EAAQn1C,IAC5D,OAAIi1C,EAAYG,GAAKF,GAAgBE,EAAIH,EAAYv1C,OAAS,EACrDu1C,EAAYG,EAAI,GAElBH,EAAYG,KAgBpB,SAASC,EACdC,EACA9C,EACAC,EACAyB,EACAQ,EACAE,GAKA,OAHAV,OAAoBvuC,IAAXuuC,GAAuBA,EAChCzB,OAAkC9sC,IAAlB8sC,EAA8BA,EAAgB,EAE9D,SAQYn3B,EAAYtb,EAAWwb,EAAM24B,GACrC,QAAmBxuC,IAAf2V,EAA0B,CAC5B,IAAM45B,EAAeR,EACjBD,EACEjC,EACAkC,EACAl5B,EACAo5B,GAEFpC,EAGJ,GAAI2B,EACF,OAAKD,EAGEa,EACLz5B,EACA45B,EACAzC,IALO,EAAA3wB,EAAK,OAACxG,EAAYm3B,EAAeyC,GAS5C,IACMK,EAAejhC,KAAKgP,KACxBhP,KAAKkM,IAAIgyB,EAAgB0C,GAAgB5gC,KAAKkM,IAAI80B,GAFlC,MAIZ37B,GAAU3Z,GAAa,GAJX,MAI8B,GAC1Cm1C,EAAS7gC,KAAK8D,IAAI88B,EAAc55B,GAChCk6B,EAAkBlhC,KAAKkK,MAC3BlK,KAAKkM,IAAIgyB,EAAgB2C,GAAU7gC,KAAKkM,IAAI80B,GAAS37B,GAEjD87B,EAAYnhC,KAAK+D,IAAIk9B,EAAcC,GACnCE,EAAgBlD,EAAgBl+B,KAAK8O,IAAIkyB,EAAOG,GACtD,OAAO,EAAA3zB,EAAK,OAAC4zB,EAAejD,EAAeyC,KAe5C,SAASS,EACdnD,EACAC,EACAyB,EACAQ,EACAE,GAIA,OAFAV,OAAoBvuC,IAAXuuC,GAAuBA,EAEhC,SAQY54B,EAAYtb,EAAWwb,EAAM24B,GACrC,QAAmBxuC,IAAf2V,EAA0B,CAC5B,IAAM45B,EAAeR,EACjBD,EACEjC,EACAkC,EACAl5B,EACAo5B,GAEFpC,EAEJ,OAAK0B,GAAWC,EAGTY,EACLz5B,EACA45B,EACAzC,IALO,EAAA3wB,EAAK,OAACxG,EAAYm3B,EAAeyC;;AClJlD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,QAAA,EAAA,QAAA,KAAA,EAhFA,IAAA5wB,EAAAriB,QAAA,aAUO,SAASinB,EAAQ3N,GACtB,QAAiB5V,IAAb4V,EACF,OAAO,EASJ,SAAS2M,EAAK3M,GACnB,QAAiB5V,IAAb4V,EACF,OAAOA,EASJ,SAASq6B,EAAc31C,GAC5B,IAAM41C,EAAS,EAAIvhC,KAAKwK,GAAM7e,EAC9B,OAAA,SAMYsb,EAAU44B,GAClB,OAAIA,EACK54B,OAGQ5V,IAAb4V,EACFA,EAAWjH,KAAKkK,MAAMjD,EAAWs6B,EAAQ,IAAOA,OADlD,GAaC,SAASC,EAAiB57B,GAE/B,OADAA,EAAYA,IAAa,EAAA2I,EAAS,WAAC,GACnC,SAMYtH,EAAU44B,GAClB,OAAIA,EACK54B,OAGQ5V,IAAb4V,EACEjH,KAAK6F,IAAIoB,IAAarB,EACjB,EAEFqB,OAJT;;ACjBN,aA/CO,SAASw6B,EAAO/zB,GACrB,OAAO1N,KAAK8O,IAAIpB,EAAG,GASd,SAASg0B,EAAQh0B,GACtB,OAAO,EAAI+zB,EAAO,EAAI/zB,GASjB,SAASi0B,EAASj0B,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,EAS1B,SAASk0B,EAAOl0B,GACrB,OAAOA,EAWF,SAASm0B,EAAUn0B,GACxB,OAAIA,EAAI,GACCi0B,EAAS,EAAIj0B,GAEf,EAAIi0B,EAAS,GAAKj0B,EAAI,KAC/B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,QAAA,EAAA,QAAA,SAAA,EAAA,QAAA,OAAA,EAAA,QAAA,UAAA;;ACkjEmB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAA,QAAA,2BAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,gBAAA,EAxmEnB,IAAAvU,EAAA5J,EAAA5B,QAAA,gBACAm0C,EAAAvyC,EAAA5B,QAAA,kBACAo0C,EAAAxyC,EAAA5B,QAAA,sBACAq0C,EAAAr0C,QAAA,wBACA+rB,EAAA/rB,QAAA,aAUA8B,EAAA9B,QAAA,kBACA6mB,EAAA7mB,QAAA,mBAMAoN,EAAApN,QAAA,gBACAs0C,EAAAt0C,QAAA,yBACAqiB,EAAAriB,QAAA,aACAu0C,EAAAv0C,QAAA,6BAKAw0C,EAAAx0C,QAAA,2BAMAy0C,EAAAz0C,QAAA,eACA8rB,EAAA9rB,QAAA,eAOAD,EAAAC,QAAA,cACAu2B,EAAAv2B,QAAA,qBAAkE,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAnI,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GAmLlE,IAAM0wC,EAAmB,EAqFnBC,EAAI5oC,SAAAA,GAAA5Q,EAAAw5C,EAASvqC,EAAU,SAAnB,IAAA9O,EAAAC,EAAAo5C,GAIR,SAAAA,EAAY1oC,GAAS,IAAAxQ,EAuGS,OAvGTC,EAAAi5C,KAAAA,IACnBl5C,EAAAH,EAAAM,KAAA,OAKKkN,GAKLrN,EAAKyM,KAKLzM,EAAKwN,GAELgD,EAAUnJ,OAAO8H,OAAO,GAAIqB,GAM5BxQ,EAAKm5C,OAAS,CAAC,EAAG,GAMlBn5C,EAAKo5C,YAAc,GAMnBp5C,EAAKq5C,oBAOLr5C,EAAKs5C,aAAc,EAAAjsB,EAAgB,kBAAC7c,EAAQiQ,WAAY,aAMxDzgB,EAAKu5C,cAAgB,CAAC,IAAK,KAM3Bv5C,EAAKw5C,cAAgB,KAMrBx5C,EAAKy5C,kBAMLz5C,EAAK05C,gBAML15C,EAAK25C,YAAc,KAMnB35C,EAAK45C,gBAML55C,EAAK65C,cAML75C,EAAK85C,mBAAgB7xC,EAEjBuI,EAAQiQ,aACV,EAAA8K,EAAwB,4BAEtB/a,EAAQmN,SACVnN,EAAQmN,QAAS,EAAAsR,EAAkB,oBAACze,EAAQmN,OAAQ3d,EAAKs5C,cAEvD9oC,EAAQ0J,SACV1J,EAAQ0J,QAAS,EAAAkV,EAAc,gBAAC5e,EAAQ0J,OAAQla,EAAKs5C,cAGvDt5C,EAAK+5C,cAAcvpC,GAASxQ,EAo9C7B,OAj9CDK,EAAA64C,EAAA,CAAA,CAAAp4C,IAAA,gBAAAC,MAIA,SAAcyP,GACZ,IAAMgC,EAAanL,OAAO8H,OAAO,GAAIqB,GACrC,IAAK,IAAM1P,KAAOk5C,EAAY,eACrBxnC,EAAW1R,GAEpB,KAAKmO,cAAcuD,GAAY,GAE/B,IAAMynC,EAA2BC,EAA2B1pC,GAM5D,KAAK2pC,eAAiBF,EAAyBnF,cAM/C,KAAKsF,eAAiBH,EAAyBlF,cAM/C,KAAKsF,YAAcJ,EAAyBK,WAM5C,KAAKC,aAAe/pC,EAAQ+mC,YAM5B,KAAKtE,SAAWziC,EAAQy5B,QAMxB,KAAKuQ,SAAWP,EAAyBjF,QAEzC,IAAMyF,EAAmBC,EAAuBlqC,GAC1CmqC,EAAuBV,EAAyBW,WAChDC,EAAqBC,EAAyBtqC,GAMpD,KAAKuqC,aAAe,CAClBp9B,OAAQ88B,EACR78B,WAAY+8B,EACZ98B,SAAUg9B,GAGZ,KAAKG,iBAAiC/yC,IAArBuI,EAAQqN,SAAyBrN,EAAQqN,SAAW,GACrE,KAAKo9B,uBACgBhzC,IAAnBuI,EAAQmN,OAAuBnN,EAAQmN,OAAS,WAEvB1V,IAAvBuI,EAAQoN,WACV,KAAKs9B,cAAc1qC,EAAQoN,iBACD3V,IAAjBuI,EAAQ2qC,MACjB,KAAKC,QAAQ5qC,EAAQ2qC,QAIzB,CAAAr6C,IAAA,UAAAmQ,IASA,WACE,OAAO,KAAKgiC,UACbvjC,IACD,SAAYu6B,GACV,IAAIoR,EAAa,KAAKpI,SACtB,KAAKA,SAAWhJ,EAChB,IAAMtsB,EAAS,KAAK29B,oBACpB,GAAI39B,EAAQ,CACV,IAAM49B,EAAatR,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCoR,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,IAAMz9B,EAAa,KAAK49B,gBAClBtQ,EACHttB,EAAa,GACb29B,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDpQ,EACHvtB,EAAa,GACb29B,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9D,KAAKN,kBAAkB,CAACt9B,EAAO,GAAKutB,EAASvtB,EAAO,GAAKwtB,OAI7D,CAAArqC,IAAA,qBAAAC,MAQA,SAAmB06C,GACjB,IAAMjrC,EAAU,KAAKmC,gBAerB,YAZ2B1K,IAAvBuI,EAAQoN,WACVpN,EAAQoN,WAAa,KAAK49B,gBAE1BhrC,EAAQ2qC,KAAO,KAAKO,UAItBlrC,EAAQmN,OAAS,KAAK29B,oBAGtB9qC,EAAQqN,SAAW,KAAKskB,cAEjB96B,OAAO8H,OAAO,GAAIqB,EAASirC,KAGpC,CAAA36C,IAAA,UAAAC,MAiCA,SAAQ46C,GACF,KAAKC,UAAY,KAAKC,gBACxB,KAAKC,mBAAmB,GAG1B,IADA,IAAMnxB,EAAO,IAAI1nB,MAAMmC,UAAUpD,QACxBQ,EAAI,EAAGA,EAAImoB,EAAK3oB,SAAUQ,EAAG,CACpC,IAAIgO,EAAUpL,UAAU5C,GACpBgO,EAAQmN,UACVnN,EAAUnJ,OAAO8H,OAAO,GAAIqB,IACpBmN,QAAS,EAAAsR,EAAkB,oBACjCze,EAAQmN,OACR,KAAK8T,kBAGLjhB,EAAQyf,UACVzf,EAAUnJ,OAAO8H,OAAO,GAAIqB,IACpByf,QAAS,EAAAhB,EAAkB,oBACjCze,EAAQyf,OACR,KAAKwB,kBAGT9G,EAAKnoB,GAAKgO,EAEZ,KAAKurC,gBAAgBz2C,MAAM,KAAMqlB,KAGnC,CAAA7pB,IAAA,kBAAAC,MAGA,SAAgB46C,GACd,IACI/+B,EADAo/B,EAAiB52C,UAAUpD,OAG7Bg6C,EAAiB,GACwB,mBAAlC52C,UAAU42C,EAAiB,KAElCp/B,EAAWxX,UAAU42C,EAAiB,KACpCA,GAIJ,IADA,IAAIx5C,EAAI,EACDA,EAAIw5C,IAAmB,KAAKJ,UAAWp5C,EAAG,CAE/C,IAAM8yC,EAAQlwC,UAAU5C,GACpB8yC,EAAM33B,QACR,KAAKs9B,kBAAkB3F,EAAM33B,aAEZ1V,IAAfqtC,EAAM6F,KACR,KAAKC,QAAQ9F,EAAM6F,MACV7F,EAAM13B,YACf,KAAKs9B,cAAc5F,EAAM13B,iBAEJ3V,IAAnBqtC,EAAMz3B,UACR,KAAKm9B,YAAY1F,EAAMz3B,UAG3B,GAAIrb,IAAMw5C,EAAV,CAYA,IALA,IAAIt8B,EAAQu8B,KAAKC,MACbv+B,EAAS,KAAK67B,cAAcr0C,QAC5ByY,EAAa,KAAK67B,kBAClB57B,EAAW,KAAK67B,gBACdyC,EAAS,GACR35C,EAAIw5C,IAAkBx5C,EAAG,CAC9B,IAAMgO,EAA2CpL,UAAU5C,GAErD45C,EAAY,CAChB18B,MAAOA,EACP28B,UAAU,EACVpsB,OAAQzf,EAAQyf,OAChBqsB,cAA+Br0C,IAArBuI,EAAQ8rC,SAAyB9rC,EAAQ8rC,SAAW,IAC9DC,OAAQ/rC,EAAQ+rC,QAAUhE,EAAQ,SAClC37B,SAAUA,GAmBZ,GAhBIpM,EAAQmN,SACVy+B,EAAUI,aAAe7+B,EACzBy+B,EAAUK,aAAejsC,EAAQmN,OAAOxY,QACxCwY,EAASy+B,EAAUK,mBAGAx0C,IAAjBuI,EAAQ2qC,MACViB,EAAUM,iBAAmB9+B,EAC7Bw+B,EAAUO,iBAAmB,KAAKC,qBAAqBpsC,EAAQ2qC,MAC/Dv9B,EAAaw+B,EAAUO,kBACdnsC,EAAQoN,aACjBw+B,EAAUM,iBAAmB9+B,EAC7Bw+B,EAAUO,iBAAmBnsC,EAAQoN,WACrCA,EAAaw+B,EAAUO,uBAGA10C,IAArBuI,EAAQqN,SAAwB,CAClCu+B,EAAUS,eAAiBh/B,EAC3B,IAAMiJ,GACJ,EAAAzB,EAAM,QAAC7U,EAAQqN,SAAWA,EAAWjH,KAAKwK,GAAI,EAAIxK,KAAKwK,IAAMxK,KAAKwK,GACpEg7B,EAAUU,eAAiBj/B,EAAWiJ,EACtCjJ,EAAWu+B,EAAUU,eAInBC,EAAgBX,GAClBA,EAAUC,UAAW,EAGrB38B,GAAS08B,EAAUE,SAErBH,EAAOzxC,KAAK0xC,GAEd,KAAKhD,YAAY1uC,KAAKyxC,GACtB,KAAKa,QAAQC,EAAQ,QAAClH,UAAW,GACjC,KAAKmH,yBA1DCtgC,GACFugC,EAAkBvgC,GAAU,KA4DlC,CAAA9b,IAAA,eAAAC,MAKA,WACE,OAAO,KAAKo4C,OAAO8D,EAAQ,QAAClH,WAAa,IAG3C,CAAAj1C,IAAA,iBAAAC,MAKA,WACE,OAAO,KAAKo4C,OAAO8D,EAAQ,QAACjH,aAAe,IAG7C,CAAAl1C,IAAA,mBAAAC,MAIA,WAEE,IAAIkvB,EADJ,KAAK+sB,QAAQC,EAAQ,QAAClH,WAAY,KAAKoD,OAAO8D,EAAQ,QAAClH,YAEvD,IAAK,IAAIvzC,EAAI,EAAGyI,EAAK,KAAKmuC,YAAYp3C,OAAQQ,EAAIyI,IAAMzI,EAAG,CACzD,IAAM25C,EAAS,KAAK/C,YAAY52C,GAIhC,GAHI25C,EAAO,GAAGv/B,UACZugC,EAAkBhB,EAAO,GAAGv/B,UAAU,IAEnCqT,EACH,IAAK,IAAIpL,EAAI,EAAG6E,EAAKyyB,EAAOn6C,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CAC/C,IAAMu3B,EAAYD,EAAOt3B,GACzB,IAAKu3B,EAAUC,SAAU,CACvBpsB,EAASmsB,EAAUnsB,OACnB,QAKR,KAAKmpB,YAAYp3C,OAAS,EAC1B,KAAK83C,cAAgB7pB,EACrB,KAAK0pB,YAAc,KACnB,KAAKC,gBAAkBvoB,IACvB,KAAKwoB,cAAgBxoB,MAGvB,CAAAvwB,IAAA,oBAAAC,MAGA,WAKE,QAJiCkH,IAA7B,KAAKoxC,sBACP+D,qBAAqB,KAAK/D,qBAC1B,KAAKA,yBAAsBpxC,GAExB,KAAK4zC,eAAV,CAKA,IAFA,IAAMK,EAAMD,KAAKC,MACbmB,GAAO,EACF76C,EAAI,KAAK42C,YAAYp3C,OAAS,EAAGQ,GAAK,IAAKA,EAAG,CAGrD,IAFA,IAAM25C,EAAS,KAAK/C,YAAY52C,GAC5B86C,GAAiB,EACZz4B,EAAI,EAAG6E,EAAKyyB,EAAOn6C,OAAQ6iB,EAAI6E,IAAM7E,EAAG,CAC/C,IAAMu3B,EAAYD,EAAOt3B,GACzB,IAAIu3B,EAAUC,SAAd,CAGA,IAAMkB,EAAUrB,EAAME,EAAU18B,MAC5B8e,EACF4d,EAAUE,SAAW,EAAIiB,EAAUnB,EAAUE,SAAW,EACtD9d,GAAY,GACd4d,EAAUC,UAAW,EACrB7d,EAAW,GAEX8e,GAAiB,EAEnB,IAAME,EAAWpB,EAAUG,OAAO/d,GAClC,GAAI4d,EAAUI,aAAc,CAC1B,IAAMv+B,EAAKm+B,EAAUI,aAAa,GAC5Bt+B,EAAKk+B,EAAUI,aAAa,GAC5Br+B,EAAKi+B,EAAUK,aAAa,GAC5Br+B,EAAKg+B,EAAUK,aAAa,GAClC,KAAK9C,YAAcyC,EAAUK,aAC7B,IAAMlmC,EAAI0H,EAAKu/B,GAAYr/B,EAAKF,GAC1BzH,EAAI0H,EAAKs/B,GAAYp/B,EAAKF,GAChC,KAAKs7B,cAAgB,CAACjjC,EAAGC,GAE3B,GAAI4lC,EAAUM,kBAAoBN,EAAUO,iBAAkB,CAC5D,IAAM/+B,EACS,IAAb4/B,EACIpB,EAAUO,iBACVP,EAAUM,iBACVc,GACGpB,EAAUO,iBAAmBP,EAAUM,kBAChD,GAAIN,EAAUnsB,OAAQ,CACpB,IAAMnS,EAAO,KAAK2/B,iBAAiB,KAAKtb,eAClCub,EAAwB,KAAK3C,aAAan9B,WAC9CA,EACA,EACAE,GACA,GAEF,KAAK07B,cAAgB,KAAKmE,oBACxBD,EACAtB,EAAUnsB,QAGd,KAAK2pB,gBAAkBwC,EAAUO,iBACjC,KAAKlD,kBAAoB77B,EACzB,KAAKggC,mBAAkB,GAEzB,QAC+B31C,IAA7Bm0C,EAAUS,qBACmB50C,IAA7Bm0C,EAAUU,eACV,CACA,IAAMj/B,EACS,IAAb2/B,GACI,EAAAn4B,EAAM,QAAC+2B,EAAUU,eAAiBlmC,KAAKwK,GAAI,EAAIxK,KAAKwK,IACpDxK,KAAKwK,GACLg7B,EAAUS,eACVW,GACGpB,EAAUU,eAAiBV,EAAUS,gBAC9C,GAAIT,EAAUnsB,OAAQ,CACpB,IAAM4tB,EAAsB,KAAK9C,aAAal9B,SAC5CA,GACA,GAEF,KAAK27B,cAAgB,KAAKsE,sBACxBD,EACAzB,EAAUnsB,QAGd,KAAK4pB,cAAgBuC,EAAUU,eAC/B,KAAKpD,gBAAkB77B,EAIzB,GAFA,KAAK+/B,mBAAkB,GACvBP,GAAO,GACFjB,EAAUC,SACb,OAGJ,GAAIiB,EAAgB,CAClB,KAAKlE,YAAY52C,GAAK,KACtB,KAAKw6C,QAAQC,EAAQ,QAAClH,WAAY,GAClC,KAAK4D,YAAc,KACnB,KAAKC,gBAAkBvoB,IACvB,KAAKwoB,cAAgBxoB,IACrB,IAAMzU,EAAWu/B,EAAO,GAAGv/B,SACvBA,GACFugC,EAAkBvgC,GAAU,IAKlC,KAAKw8B,YAAc,KAAKA,YAAY2E,OAAOn0C,SACvCyzC,QAAqCp1C,IAA7B,KAAKoxC,sBACf,KAAKA,oBAAsB2E,sBACzB,KAAKd,kBAAkBx0C,KAAK,WAKlC,CAAA5H,IAAA,wBAAAC,MAKA,SAAsB8c,EAAUoS,GAC9B,IAAItS,EACEsgC,EAAgB,KAAK3C,oBAM3B,YALsBrzC,IAAlBg2C,IACFtgC,EAAS,CAACsgC,EAAc,GAAKhuB,EAAO,GAAIguB,EAAc,GAAKhuB,EAAO,KAClE,EAAAiuB,EAAgB,QAACvgC,EAAQE,EAAW,KAAKskB,gBACzC,EAAAgc,EAAa,KAACxgC,EAAQsS,IAEjBtS,IAGT,CAAA7c,IAAA,sBAAAC,MAKA,SAAoB6c,EAAYqS,GAC9B,IAAItS,EACEsgC,EAAgB,KAAK3C,oBACrB8C,EAAoB,KAAK5C,qBACTvzC,IAAlBg2C,QAAqDh2C,IAAtBm2C,IAOjCzgC,EAAS,CALPsS,EAAO,GACNrS,GAAcqS,EAAO,GAAKguB,EAAc,IAAOG,EAEhDnuB,EAAO,GACNrS,GAAcqS,EAAO,GAAKguB,EAAc,IAAOG,IAGpD,OAAOzgC,IAGT,CAAA7c,IAAA,mBAAAC,MAMA,SAAiB8c,GACf,IAAMC,EAAO,KAAKy7B,cAClB,GAAI17B,EAAU,CACZ,IAAM2tB,EAAI1tB,EAAK,GACT2tB,EAAI3tB,EAAK,GACf,MAAO,CACLlH,KAAK6F,IAAI+uB,EAAI50B,KAAKD,IAAIkH,IAAajH,KAAK6F,IAAIgvB,EAAI70B,KAAKC,IAAIgH,IACzDjH,KAAK6F,IAAI+uB,EAAI50B,KAAKC,IAAIgH,IAAajH,KAAK6F,IAAIgvB,EAAI70B,KAAKD,IAAIkH,KAG7D,OAAOC,IAGT,CAAAhd,IAAA,kBAAAC,MAOA,SAAgB+c,GACd,KAAKy7B,cAAgBt2C,MAAMC,QAAQ4a,GAAQA,EAAK3Y,QAAU,CAAC,IAAK,KAC3D,KAAK02C,gBACR,KAAKC,mBAAmB,KAI5B,CAAAh7C,IAAA,YAAAC,MAMA,WACE,IAAM4c,EAAS,KAAK29B,oBACpB,OAAK39B,GAGE,EAAAqR,EAAgB,kBAACrR,EAAQ,KAAK8T,iBAF5B9T,IAKX,CAAA7c,IAAA,oBAAAC,MAIA,WACE,OACE,KAAKkQ,IAAI+oC,EAAY,QAAC/D,UAI1B,CAAAn1C,IAAA,iBAAAC,MAGA,WACE,OAAO,KAAKg6C,eAGd,CAAAj6C,IAAA,yBAAAC,MAGA,WACE,OAAO,KAAKkQ,IAAI,yBAGlB,CAAAnQ,IAAA,WAAAC,MAIA,SAASs9C,GACP,YAAcp2C,IAAVo2C,GACFA,EAAM,GAAK,KAAKlF,OAAO,GACvBkF,EAAM,GAAK,KAAKlF,OAAO,GAChBkF,GAEF,KAAKlF,OAAOh0C,UAGrB,CAAArE,IAAA,kBAAAC,MAUA,SAAgB+c,GACd,IAAM5D,EAAS,KAAKokC,wBAAwBxgC,GAC5C,OAAO,EAAAqR,EAAY,cAACjV,EAAQ,KAAKuX,mBAGnC,CAAA3wB,IAAA,0BAAAC,MAKA,SAAwB+c,GACtBA,EAAOA,GAAQ,KAAKygC,+BACpB,IAAM5gC,EACJ,KAAK29B,qBAEP,EAAA9pC,EAAM,QAACmM,EAAQ,GACf,IAAMC,EAAqC,KAAK49B,iBAChD,EAAAhqC,EAAM,aAAgBvJ,IAAf2V,EAA0B,GACjC,IAAMC,EAAmC,KAAKskB,cAG9C,OAFA,EAAA3wB,EAAM,aAAcvJ,IAAb4V,EAAwB,IAExB,EAAAH,EAAiB,mBAACC,EAAQC,EAAYC,EAAUC,KAGzD,CAAAhd,IAAA,mBAAAC,MAKA,WACE,OAAO,KAAKo5C,iBAGd,CAAAr5C,IAAA,mBAAAC,MAKA,WACE,OAAO,KAAKq5C,iBAGd,CAAAt5C,IAAA,aAAAC,MAKA,WACE,OACE,KAAKy9C,qBAAqB,KAAKpE,kBAInC,CAAAt5C,IAAA,aAAAC,MAKA,SAAWo6C,GACT,KAAKpB,cAAc,KAAK0E,mBAAmB,CAACxJ,QAASkG,OAGvD,CAAAr6C,IAAA,aAAAC,MAKA,WACE,OACE,KAAKy9C,qBAAqB,KAAKrE,kBAInC,CAAAr5C,IAAA,aAAAC,MAKA,SAAWo6C,GACT,KAAKpB,cAAc,KAAK0E,mBAAmB,CAACzJ,QAASmG,OAGvD,CAAAr6C,IAAA,yBAAAC,MAKA,SAAuB29C,GACrB,KAAK3E,cAAc,KAAK0E,mBAAmB,CAACE,oBAAqBD,OAGnE,CAAA59C,IAAA,gBAAAC,MAKA,WACE,OAAO,KAAKu4C,cAGd,CAAAx4C,IAAA,gBAAAC,MAMA,WACE,OAAwC,KAAKkQ,IAAI+oC,EAAY,QAAC9D,cAGhE,CAAAp1C,IAAA,iBAAAC,MAMA,WACE,OAAO,KAAKw5C,eAGd,CAAAz5C,IAAA,yBAAAC,MAQA,SAAuBmZ,EAAQ4D,GAC7B,OAAO,KAAK8gC,gCACV,EAAAxvB,EAAc,gBAAClV,EAAQ,KAAKuX,iBAC5B3T,KAIJ,CAAAhd,IAAA,iCAAAC,MAOA,SAA+BmZ,EAAQ4D,GACrCA,EAAOA,GAAQ,KAAKygC,+BACpB,IAAMpH,GAAc,EAAA/5B,EAAQ,UAAClD,GAAU4D,EAAK,GACtCs5B,GAAc,EAAA/5B,EAAS,WAACnD,GAAU4D,EAAK,GAC7C,OAAOlH,KAAK+D,IAAIw8B,EAAaC,KAG/B,CAAAt2C,IAAA,gCAAAC,MAMA,SAA8B62C,GAC5BA,EAAQA,GAAS,EACjB,IAAM9C,EAAgB,KAAK+J,yBAAyB,KAAK1E,gBACnDpF,EAAgB,KAAKqF,eACrBz/B,EAAM/D,KAAKkM,IAAIgyB,EAAgBC,GAAiBn+B,KAAKkM,IAAI80B,GAC/D,OAAA,SAKY72C,GAER,OADmB+zC,EAAgBl+B,KAAK8O,IAAIkyB,EAAO72C,EAAQ4Z,MAMjE,CAAA7Z,IAAA,cAAAC,MAMA,WACE,OAA8B,KAAKkQ,IAAI+oC,EAAY,QAAC7D,YAGtD,CAAAr1C,IAAA,gCAAAC,MAMA,SAA8B62C,GAC5B,IAAMkH,EAAWloC,KAAKkM,IAAI80B,GAAS,GAC7B9C,EAAgB,KAAK+J,yBAAyB,KAAK1E,gBACnDpF,EAAgB,KAAKqF,eACrBz/B,EAAM/D,KAAKkM,IAAIgyB,EAAgBC,GAAiB+J,EACtD,OAAA,SAKYlhC,GAER,OADchH,KAAKkM,IAAIgyB,EAAgBl3B,GAAckhC,EAAWnkC,KAMtE,CAAA7Z,IAAA,+BAAAC,MAMA,SAA6B8c,GAC3B,IAAIC,EAAO,KAAK2/B,iBAAiB5/B,GAC3BosB,EAAU,KAAKgJ,SAOrB,OANIhJ,IACFnsB,EAAO,CACLA,EAAK,GAAKmsB,EAAQ,GAAKA,EAAQ,GAC/BnsB,EAAK,GAAKmsB,EAAQ,GAAKA,EAAQ,KAG5BnsB,IAGT,CAAAhd,IAAA,WAAAC,MAGA,WACE,IAAM0f,EAAa,KAAKgR,gBAClB7T,EAAa,KAAK49B,gBAClB39B,EAAW,KAAKskB,cAClBxkB,EACF,KAAK29B,oBAEDrR,EAAU,KAAKgJ,SACrB,GAAIhJ,EAAS,CACX,IAAM8U,EAAc,KAAKR,+BACzB5gC,EAASqhC,EACPrhC,EACA,KAAK8/B,mBACL,CAACsB,EAAY,GAAK,EAAI9U,EAAQ,GAAI8U,EAAY,GAAK,EAAI9U,EAAQ,IAC/DrsB,EACAC,GAGJ,MAAO,CACLF,OAAQA,EAAOxY,MAAM,GACrBsb,gBAA2BxY,IAAfwY,EAA2BA,EAAa,KACpD7C,WAAYA,EACZqhC,WAAY,KAAKtF,YACjBuF,eAAgB,KAAKtF,gBACrBuF,aAAc,KAAKtF,cACnBh8B,SAAUA,EACVs9B,KAAM,KAAKO,aAIf,CAAA56C,IAAA,wBAAAC,MAGA,WACE,MAAO,CACLq+C,UAAW,KAAKC,WAChBnlC,OAAQ,KAAKolC,qBAIjB,CAAAx+C,IAAA,UAAAC,MAOA,WACE,IAAIo6C,EACEv9B,EAAa,KAAK49B,gBAIxB,YAHmBvzC,IAAf2V,IACFu9B,EAAO,KAAKqD,qBAAqB5gC,IAE5Bu9B,IAGT,CAAAr6C,IAAA,uBAAAC,MAMA,SAAqB6c,GACnB,IACIjD,EAAK2/B,EADLr+B,EAAS,KAAKu+B,UAAY,EAE9B,GAAI,KAAKD,aAAc,CACrB,IAAMgF,GAAU,EAAAn9C,EAAiB,mBAAC,KAAKm4C,aAAc38B,EAAY,GACjE3B,EAASsjC,EACT5kC,EAAM,KAAK4/B,aAAagF,GAEtBjF,EADEiF,GAAW,KAAKhF,aAAav4C,OAAS,EAC3B,EAEA2Y,EAAM,KAAK4/B,aAAagF,EAAU,QAGjD5kC,EAAM,KAAKw/B,eACXG,EAAa,KAAKD,YAEpB,OAAOp+B,EAASrF,KAAKkM,IAAInI,EAAMiD,GAAchH,KAAKkM,IAAIw3B,KAGxD,CAAAx5C,IAAA,uBAAAC,MAMA,SAAqBo6C,GACnB,GAAI,KAAKZ,aAAc,CACrB,GAAI,KAAKA,aAAav4C,QAAU,EAC9B,OAAO,EAET,IAAMw9C,GAAY,EAAAp7B,EAAK,OACrBxN,KAAKkK,MAAMq6B,GACX,EACA,KAAKZ,aAAav4C,OAAS,GAEvBs4C,EACJ,KAAKC,aAAaiF,GAAa,KAAKjF,aAAaiF,EAAY,GAC/D,OACE,KAAKjF,aAAaiF,GAClB5oC,KAAK8O,IAAI40B,GAAY,EAAAl2B,EAAK,OAAC+2B,EAAOqE,EAAW,EAAG,IAGpD,OACE,KAAKrF,eAAiBvjC,KAAK8O,IAAI,KAAK20B,YAAac,EAAO,KAAKX,YAIjE,CAAA15C,IAAA,MAAAC,MAUA,SAAI0+C,EAAkBjvC,GAEpB,IAAI8B,EAOJ,IANA,EAAAd,EAAM,QACJvO,MAAMC,QAAQu8C,IAEV,mBADwBA,EAAkBptC,sBAE9C,IAEEpP,MAAMC,QAAQu8C,GAAmB,EACnC,EAAAjuC,EAAM,UAAE,EAAAvL,EAAO,SAACw5C,GAAmB,IACnC,IAAMvlC,GAAS,EAAAkV,EAAc,gBAACqwB,EAAkB,KAAKhuB,iBACrDnf,GAAW,EAAAotC,EAAiB,YAACxlC,QACxB,GAAmC,WAA/BulC,EAAiBj2B,UAAwB,CAClD,IAAMtP,GAAS,EAAAkV,EAAc,gBAC3BqwB,EAAiB9+B,YACjB,KAAK8Q,kBAEPnf,GAAW,EAAAotC,EAAiB,YAACxlC,IACpBzD,OAAO,KAAK0rB,eAAe,EAAA7kB,EAAS,WAACpD,QACzC,CACL,IAAMyU,GAAiB,EAAAG,EAAiB,qBAEtCxc,EADEqc,EAEA8wB,EACGhtC,QACA0C,UAAUwZ,EAAgB,KAAK8C,iBAGzBguB,EAIf,KAAKE,YAAYrtC,EAAU9B,KAG7B,CAAA1P,IAAA,2BAAAC,MAKA,SAAyBuR,GAUvB,IATA,IAAMuL,EAAW,KAAKskB,cAChB9Z,EAAWzR,KAAKD,IAAIkH,GACpByK,EAAW1R,KAAKC,KAAKgH,GACrB4L,EAASnX,EAASggB,qBAClBpW,EAAS5J,EAASogB,YACpBktB,EAAWlkC,EAAAA,EACXmkC,EAAWnkC,EAAAA,EACXokC,GAAWpkC,EAAAA,EACXqkC,GAAWrkC,EAAAA,EACNlZ,EAAI,EAAGyI,EAAKwe,EAAOznB,OAAQQ,EAAIyI,EAAIzI,GAAK0Z,EAAQ,CACvD,IAAM8jC,EAAOv2B,EAAOjnB,GAAK6lB,EAAWoB,EAAOjnB,EAAI,GAAK8lB,EAC9C23B,EAAOx2B,EAAOjnB,GAAK8lB,EAAWmB,EAAOjnB,EAAI,GAAK6lB,EACpDu3B,EAAUhpC,KAAK8D,IAAIklC,EAASI,GAC5BH,EAAUjpC,KAAK8D,IAAImlC,EAASI,GAC5BH,EAAUlpC,KAAK+D,IAAImlC,EAASE,GAC5BD,EAAUnpC,KAAK+D,IAAIolC,EAASE,GAE9B,MAAO,CAACL,EAASC,EAASC,EAASC,KAGrC,CAAAj/C,IAAA,cAAAC,MAIA,SAAYuR,EAAU9B,GAEpB,IAAIsN,GADJtN,EAAUA,GAAW,IACFsN,KACdA,IACHA,EAAO,KAAKygC,gCAEd,IAGIxJ,EAHE9K,OACgBhiC,IAApBuI,EAAQy5B,QAAwBz5B,EAAQy5B,QAAU,CAAC,EAAG,EAAG,EAAG,GACxDsV,OAA8Bt3C,IAApBuI,EAAQ+uC,SAAwB/uC,EAAQ+uC,QAGtDxK,OAD4B9sC,IAA1BuI,EAAQukC,cACMvkC,EAAQukC,mBACK9sC,IAApBuI,EAAQykC,QACD,KAAK2H,qBAAqBpsC,EAAQykC,SAElC,EAGlB,IAAMiL,EAAgB,KAAKC,yBAAyB7tC,GAGhDsL,EAAa,KAAKghC,+BAA+BsB,EAAe,CAClEpiC,EAAK,GAAKmsB,EAAQ,GAAKA,EAAQ,GAC/BnsB,EAAK,GAAKmsB,EAAQ,GAAKA,EAAQ,KAEjCrsB,EAAa4T,MAAM5T,GACfm3B,EACAn+B,KAAK+D,IAAIiD,EAAYm3B,GACzBn3B,EAAa,KAAKihC,yBAAyBjhC,EAAY2hC,EAAU,EAAI,GAGrE,IAAM1hC,EAAW,KAAKskB,cAChB7Z,EAAW1R,KAAKC,IAAIgH,GACpBwK,EAAWzR,KAAKD,IAAIkH,GACpBuiC,GAAY,EAAA9iC,EAAS,WAAC4iC,GAC5BE,EAAU,KAAQnW,EAAQ,GAAKA,EAAQ,IAAM,EAAKrsB,EAClDwiC,EAAU,KAAQnW,EAAQ,GAAKA,EAAQ,IAAM,EAAKrsB,EAClD,IAAMyiC,EAAUD,EAAU,GAAK/3B,EAAW+3B,EAAU,GAAK93B,EACnDg4B,EAAUF,EAAU,GAAK/3B,EAAW+3B,EAAU,GAAK93B,EACnD3K,EAAS,KAAK4iC,qBAAqB,CAACF,EAASC,GAAU1iC,GACvDhB,EAAWpM,EAAQoM,SAAWpM,EAAQoM,SAAWlY,EAAI,UAElCuD,IAArBuI,EAAQ8rC,SACV,KAAKP,gBACH,CACEn+B,WAAYA,EACZD,OAAQA,EACR2+B,SAAU9rC,EAAQ8rC,SAClBC,OAAQ/rC,EAAQ+rC,QAElB3/B,IAGF,KAAK68B,kBAAoB77B,EACzB,KAAK47B,cAAgB77B,EACrB,KAAKigC,mBAAkB,GAAO,GAC9BT,EAAkBvgC,GAAU,MAIhC,CAAA9b,IAAA,WAAAC,MAOA,SAASuV,EAAYwH,EAAMsf,GACzB,KAAKojB,kBACH,EAAAvxB,EAAkB,oBAAC3Y,EAAY,KAAKmb,iBACpC3T,EACAsf,KAIJ,CAAAt8B,IAAA,mBAAAC,MAKA,SAAiBuV,EAAYwH,EAAMsf,GACjC,KAAK6d,kBACH+D,EACE1oC,EACAwH,EACAsf,EACA,KAAKoe,gBACL,KAAKrZ,kBAKX,CAAArhC,IAAA,uBAAAC,MAQA,SAAqB4c,EAAQC,EAAYC,EAAUC,GACjD,IAAI44B,EACEzM,EAAU,KAAKgJ,SACrB,GAAIhJ,GAAWtsB,EAAQ,CACrB,IAAMohC,EAAc,KAAKR,8BAA8B1gC,GACjD4iC,EAAgBzB,EACpBrhC,EACAG,EACA,CAACihC,EAAY,GAAK,EAAI9U,EAAQ,GAAI8U,EAAY,GAAK,EAAI9U,EAAQ,IAC/DrsB,EACAC,GAEF64B,EAAc,CACZ/4B,EAAO,GAAK8iC,EAAc,GAC1B9iC,EAAO,GAAK8iC,EAAc,IAG9B,OAAO/J,IAGT,CAAA51C,IAAA,QAAAC,MAGA,WACE,QAAS,KAAKu6C,0BAAgDrzC,IAAzB,KAAKuzC,kBAG5C,CAAA16C,IAAA,eAAAC,MAKA,SAAa2/C,GACX,IAAM/iC,GAAS,EAAAqR,EAAgB,kBAAC,KAAKwqB,cAAe,KAAK/nB,iBACzD,KAAKkvB,UAAU,CACbhjC,EAAO,GAAK+iC,EAAiB,GAC7B/iC,EAAO,GAAK+iC,EAAiB,OAIjC,CAAA5/C,IAAA,uBAAAC,MAIA,SAAqB2/C,GACnB,IAAM/iC,EAAS,KAAK67B,cACpB,KAAKyB,kBAAkB,CACrBt9B,EAAO,GAAK+iC,EAAiB,GAC7B/iC,EAAO,GAAK+iC,EAAiB,OAIjC,CAAA5/C,IAAA,mBAAAC,MAOA,SAAiBmgC,EAAOjR,GACtBA,EAASA,IAAU,EAAAhB,EAAkB,oBAACgB,EAAQ,KAAKwB,iBACnD,KAAKmvB,yBAAyB1f,EAAOjR,KAGvC,CAAAnvB,IAAA,2BAAAC,MAMA,SAAyBmgC,EAAOjR,GAC9B,IAAMwmB,EAAW,KAAKoF,gBAAkB,KAAKgF,iBACvC/iC,EAAO,KAAK2/B,iBAAiB,KAAKtb,eAClC6V,EAAgB,KAAK+C,aAAan9B,WACtC,KAAK67B,kBAAoBvY,EACzB,EACApjB,EACA24B,GAGExmB,IACF,KAAKupB,cAAgB,KAAKmE,oBAAoB3F,EAAe/nB,IAG/D,KAAKwpB,mBAAqBvY,EAC1B,KAAK0c,sBAGP,CAAA98C,IAAA,aAAAC,MAOA,SAAW+lB,EAAOmJ,GAChB,KAAK6wB,iBAAiBlqC,KAAK8O,IAAI,KAAK20B,aAAcvzB,GAAQmJ,KAG5D,CAAAnvB,IAAA,iBAAAC,MAOA,SAAe+lB,EAAOmJ,GAChBA,IACFA,GAAS,EAAAhB,EAAkB,oBAACgB,EAAQ,KAAKwB,kBAE3C,KAAKsvB,uBAAuBj6B,EAAOmJ,KAGrC,CAAAnvB,IAAA,yBAAAC,MAIA,SAAuB+lB,EAAOmJ,GAC5B,IAAMwmB,EAAW,KAAKoF,gBAAkB,KAAKgF,iBACvCG,EAAc,KAAKjG,aAAal9B,SACpC,KAAK67B,gBAAkB5yB,EACvB2vB,GAEExmB,IACF,KAAKupB,cAAgB,KAAKsE,sBAAsBkD,EAAa/wB,IAE/D,KAAKypB,iBAAmB5yB,EACxB,KAAK82B,sBAGP,CAAA98C,IAAA,YAAAC,MAMA,SAAU4c,GACR,KAAKs9B,kBACHt9B,GAAS,EAAAsR,EAAkB,oBAACtR,EAAQ,KAAK8T,iBAAmB9T,KAIhE,CAAA7c,IAAA,oBAAAC,MAIA,SAAkB4c,GAChB,KAAK67B,cAAgB77B,EACrB,KAAKigC,sBAGP,CAAA98C,IAAA,UAAAC,MAKA,SAAQ+G,EAAMgf,GAGZ,OAFA,KAAKqyB,OAAOrxC,IAASgf,EACrB,KAAK5T,UACE,KAAKimC,OAAOrxC,KAGrB,CAAAhH,IAAA,gBAAAC,MAMA,SAAc6c,GACZ,KAAK67B,kBAAoB77B,EACzB,KAAKggC,sBAGP,CAAA98C,IAAA,cAAAC,MAMA,SAAY8c,GACV,KAAK67B,gBAAkB77B,EACvB,KAAK+/B,sBAGP,CAAA98C,IAAA,UAAAC,MAKA,SAAQo6C,GACN,KAAKD,cAAc,KAAK0B,qBAAqBzB,MAG/C,CAAAr6C,IAAA,oBAAAC,MAQA,SAAkBkgD,EAAkBC,GAClC,IAAMzK,EACJ,KAAKoF,gBAAkB,KAAKgF,kBAAoBK,EAG5CF,EAAc,KAAKjG,aAAal9B,SACpC,KAAK67B,gBACLjD,GAEI34B,EAAO,KAAK2/B,iBAAiBuD,GAC7BhJ,EAAgB,KAAK+C,aAAan9B,WACtC,KAAK67B,kBACL,EACA37B,EACA24B,GAEI0K,EAAY,KAAKpG,aAAap9B,OAClC,KAAK67B,cACLxB,EACAl6B,EACA24B,EACA,KAAK2K,qBACH,KAAK5H,cACLxB,EACAgJ,EACAljC,IAIA,KAAK7M,IAAI+oC,EAAY,QAAC7D,YAAc6K,GACtC,KAAKtxC,IAAIsqC,EAAY,QAAC7D,SAAU6K,GAE9B,KAAK/vC,IAAI+oC,EAAY,QAAC9D,cAAgB8B,IACxC,KAAKtoC,IAAIsqC,EAAY,QAAC9D,WAAY8B,GAClC,KAAKtoC,IAAI,OAAQ,KAAKgsC,WAAW,IAGhCyF,GACA,KAAKlwC,IAAI+oC,EAAY,QAAC/D,UACtB,EAAA1yC,EAAM,QAAC,KAAK0N,IAAI+oC,EAAY,QAAC/D,QAASkL,IAEvC,KAAKzxC,IAAIsqC,EAAY,QAAC/D,OAAQkL,GAG5B,KAAKtF,iBAAmBoF,GAC1B,KAAKI,mBAEP,KAAKvH,mBAAgB7xC,IAGvB,CAAAnH,IAAA,qBAAAC,MASA,SAAmBu7C,EAAUgF,EAAqBrxB,GAChDqsB,OAAwBr0C,IAAbq0C,EAAyBA,EAAW,IAC/C,IAAMh6C,EAAYg/C,GAAuB,EAEnCN,EAAc,KAAKjG,aAAal9B,SAAS,KAAK67B,iBAC9C57B,EAAO,KAAK2/B,iBAAiBuD,GAC7BhJ,EAAgB,KAAK+C,aAAan9B,WACtC,KAAK67B,kBACLn3C,EACAwb,GAEIqjC,EAAY,KAAKpG,aAAap9B,OAClC,KAAK67B,cACLxB,EACAl6B,GACA,EACA,KAAKsjC,qBACH,KAAK5H,cACLxB,EACAgJ,EACAljC,IAIJ,GAAiB,IAAbw+B,IAAmB,KAAKxC,cAK1B,OAJA,KAAKL,kBAAoBzB,EACzB,KAAK0B,gBAAkBsH,EACvB,KAAKxH,cAAgB2H,OACrB,KAAKvD,oBAIP3tB,EAASA,IAAwB,IAAbqsB,EAAiB,KAAKxC,mBAAgB7xC,GAC1D,KAAK6xC,mBAAgB7xC,EAGnB,KAAKuzC,kBAAoBxD,GACzB,KAAK7V,gBAAkB6e,GACtB,KAAK1F,sBACL,EAAA/3C,EAAM,QAAC,KAAK+3C,oBAAqB6F,KAE9B,KAAKtF,gBACP,KAAKwF,mBAGP,KAAKtF,gBAAgB,CACnBl+B,SAAUmjC,EACVrjC,OAAQwjC,EACRvjC,WAAYo6B,EACZsE,SAAUA,EACVC,OAAQjE,EAAO,QACfroB,OAAQA,OAKd,CAAAnvB,IAAA,mBAAAC,MAMA,WACE,KAAK+6C,mBAAmB,GAExB,KAAKkB,QAAQC,EAAQ,QAACjH,YAAa,KAGrC,CAAAl1C,IAAA,iBAAAC,MAQA,SAAeu7C,EAAUgF,EAAqBrxB,GAC5CA,EAASA,IAAU,EAAAhB,EAAkB,oBAACgB,EAAQ,KAAKwB,iBACnD,KAAK8vB,uBAAuBjF,EAAUgF,EAAqBrxB,KAG7D,CAAAnvB,IAAA,yBAAAC,MAOA,SAAuBu7C,EAAUgF,EAAqBrxB,GAC/C,KAAK4wB,mBAGV,KAAK7D,QAAQC,EAAQ,QAACjH,aAAc,GACpC,KAAK8F,mBAAmBQ,EAAUgF,EAAqBrxB,MAGzD,CAAAnvB,IAAA,uBAAAC,MAOA,SAAqB07C,EAAcE,GACjC,IAAM7+B,EAAO,KAAK2/B,iBAAiB,KAAKtb,eACxC,OAAO,KAAK4Y,aAAap9B,OACvB8+B,EACAE,GAAoB,KAAKnB,gBACzB19B,KAIJ,CAAAhd,IAAA,qBAAAC,MASA,SAAmBygD,EAAYl/C,GAC7B,IAAMm/C,EAAY,KAAK7E,qBAAqB4E,GAC5C,OAAO,KAAKhD,qBACV,KAAKK,yBAAyB4C,EAAWn/C,MAI7C,CAAAxB,IAAA,2BAAAC,MASA,SAAyB47C,EAAkBr6C,GACzCA,EAAYA,GAAa,EACzB,IAAMwb,EAAO,KAAK2/B,iBAAiB,KAAKtb,eAExC,OAAO,KAAK4Y,aAAan9B,WAAW++B,EAAkBr6C,EAAWwb,OAClEo7B,EA/jDO5oC,GAskDV,SAAS6sC,EAAkBvgC,EAAU8kC,GACnCC,WAAW,WACT/kC,EAAS8kC,IACR,GAOE,SAAShH,EAAuBlqC,GACrC,QAAuBvI,IAAnBuI,EAAQ0J,OAAsB,CAChC,IAAMs8B,OAC+BvuC,IAAnCuI,EAAQoxC,wBACJpxC,EAAQoxC,uBAEd,OAAO,EAAAtL,EAAY,cAAC9lC,EAAQ0J,OAAQ1J,EAAQqxC,oBAAqBrL,GAGnE,IAAM/1B,GAAa,EAAA4M,EAAgB,kBAAC7c,EAAQiQ,WAAY,aACxD,IAA2B,IAAvBjQ,EAAQsxC,YAAuBrhC,EAAWshC,WAAY,CACxD,IAAM7nC,EAASuG,EAAWE,YAAYxb,QAGtC,OAFA+U,EAAO,IAAMwB,EAAAA,EACbxB,EAAO,GAAKwB,EAAAA,GACL,EAAA46B,EAAY,cAACp8B,GAAQ,GAAO,GAGrC,OAAO8nC,EAAU,KAQZ,SAAS9H,EAA2B1pC,GACzC,IAAImqC,EACA7F,EACAC,EAOAC,OACkB/sC,IAApBuI,EAAQwkC,QAAwBxkC,EAAQwkC,QAAUiE,EAEhDhE,OACkBhtC,IAApBuI,EAAQykC,QAAwBzkC,EAAQykC,QAPnB,GASjBqF,OACmBryC,IAAvBuI,EAAQ8pC,WAA2B9pC,EAAQ8pC,WATnB,EAWpBwH,OACmB75C,IAAvBuI,EAAQsxC,YAA2BtxC,EAAQsxC,WAEvCtL,OACmCvuC,IAAvCuI,EAAQyxC,4BACJzxC,EAAQyxC,2BAGR/K,OACuBjvC,IAA3BuI,EAAQ0mC,gBAA+B1mC,EAAQ0mC,eAE3Cz2B,GAAa,EAAA4M,EAAgB,kBAAC7c,EAAQiQ,WAAY,aAClDyhC,EAAazhC,EAAWE,YAC1BkhC,EAAsBrxC,EAAQqxC,oBAC9B3nC,EAAS1J,EAAQ0J,OAMrB,GALK4nC,GAAe5nC,IAAUuG,EAAWshC,aACvCF,GAAsB,EACtB3nC,EAASgoC,QAGiBj6C,IAAxBuI,EAAQ+mC,YAA2B,CACrC,IAAMA,EAAc/mC,EAAQ+mC,YAC5BzC,EAAgByC,EAAYvC,GAC5BD,OAC2B9sC,IAAzBsvC,EAAYtC,GACRsC,EAAYtC,GACZsC,EAAYA,EAAYv1C,OAAS,GAGrC24C,EADEnqC,EAAQmuC,qBACa,EAAArH,EAAuB,yBAC5CC,EACAf,GACCqL,GAAuB3nC,EACxBg9B,IAGqB,EAAAe,EAAsB,wBAC3CnD,EACAC,EACAyB,GACCqL,GAAuB3nC,EACxBg9B,OAGC,CAEL,IAKMiL,GALQD,EAGVtrC,KAAK+D,KAAI,EAAAyC,EAAQ,UAAC8kC,IAAa,EAAA7kC,EAAS,WAAC6kC,IADxC,IAAM/gC,EAAe,gBAACwG,QAAWlH,EAAW6L,oBAIxC+pB,EAAiB,kBAAGz/B,KAAK8O,IA/DV,EA+DiCuzB,GAEnDmJ,EACJD,EACAvrC,KAAK8O,IAnEiB,EADH,GAoE0BuzB,QAIzBhxC,KADtB6sC,EAAgBtkC,EAAQskC,eAEtBE,EAAU,EAEVF,EAAgBqN,EAAuBvrC,KAAK8O,IAAI40B,EAAYtF,QAKxC/sC,KADtB8sC,EAAgBvkC,EAAQukC,iBAIlBA,OAFoB9sC,IAApBuI,EAAQykC,aACoBhtC,IAA1BuI,EAAQskC,cACMA,EAAgBl+B,KAAK8O,IAAI40B,EAAYrF,GAErCkN,EAAuBvrC,KAAK8O,IAAI40B,EAAYrF,GAG9CmN,GAKpBnN,EACED,EACAp+B,KAAKkK,MACHlK,KAAKkM,IAAIgyB,EAAgBC,GAAiBn+B,KAAKkM,IAAIw3B,IAEvDvF,EAAgBD,EAAgBl+B,KAAK8O,IAAI40B,EAAYrF,EAAUD,GAG7D2F,EADEnqC,EAAQmuC,qBACa,EAAAhH,EAAiB,mBACtC2C,EACAxF,EACAC,EACAyB,GACCqL,GAAuB3nC,EACxBg9B,IAGqB,EAAAe,EAAsB,wBAC3CnD,EACAC,EACAyB,GACCqL,GAAuB3nC,EACxBg9B,GAIN,MAAO,CACL0D,WAAYD,EACZ7F,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACTsF,WAAYA,GAQT,SAASQ,EAAyBtqC,GAGvC,QAD6BvI,IAA3BuI,EAAQ6xC,gBAA+B7xC,EAAQ6xC,eAC7B,CAClB,IAAMC,EAAoB9xC,EAAQ8xC,kBAClC,YAA0Br6C,IAAtBq6C,IAAyD,IAAtBA,GAC9B,EAAAlK,EAAgB,qBAEC,IAAtBkK,EACKC,EAAY,KAEY,iBAAtBD,GACF,EAAApK,EAAa,eAACoK,GAEhBC,EAAY,KAErB,OAAO/2B,EAAO,QAQT,SAASuxB,EAAgBX,GAC9B,QAAIA,EAAUI,cAAgBJ,EAAUK,gBACjC,EAAA+F,EAAgB,QAACpG,EAAUI,aAAcJ,EAAUK,iBAItDL,EAAUM,mBAAqBN,EAAUO,kBAGzCP,EAAUS,iBAAmBT,EAAUU,gBAc7C,SAASkC,EAAkB1oC,EAAYwH,EAAMsf,EAAUxf,EAAYC,GAEjE,IAAMwK,EAAWzR,KAAKD,KAAKkH,GACvByK,EAAW1R,KAAKC,KAAKgH,GACrBmiC,EAAO1pC,EAAW,GAAK+R,EAAW/R,EAAW,GAAKgS,EAClD23B,EAAO3pC,EAAW,GAAK+R,EAAW/R,EAAW,GAAKgS,EAStD,MAAO,EARP03B,IAASliC,EAAK,GAAK,EAAIsf,EAAS,IAAMxf,GAKfyK,GAJvB43B,IAAS7iB,EAAS,GAAKtf,EAAK,GAAK,GAAKF,IAGtC0K,GAAYA,GAEI23B,EAAO53B,EAAW23B,EAAO13B,GAG1C,IAAAhoB,EAEc44C,EAAI34C,QAAAC,QAAAF;;AChmDC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,OAAA,EAxgBpB,IAAAmiD,EAAAt8C,EAAA5B,QAAA,cACAyI,EAAA7G,EAAA5B,QAAA,2BACAiwC,EAAAruC,EAAA5B,QAAA,kBACAm+C,EAAAv8C,EAAA5B,QAAA,2BACAo+C,EAAAx8C,EAAA5B,QAAA,eACAoN,EAAApN,QAAA,iBACAoiB,EAAApiB,QAAA,gBACA0I,EAAA1I,QAAA,gBAAmD,SAAA4B,EAAA/C,GAAAA,OAAAA,GAAAA,EAAAmD,WAAAnD,EAAA5C,CAAAA,QAAA4C,GAAA,SAAAoD,EAAApD,GAAAoD,OAAAA,EAAAC,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAtD,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAqD,mBAAAA,QAAArD,EAAAuD,cAAAF,QAAArD,IAAAqD,OAAAvB,UAAA9B,gBAAAA,IAAAA,GAAA,SAAAnD,EAAA2G,EAAAC,GAAAD,KAAAA,aAAAC,GAAAC,MAAAA,IAAAA,UAAA,qCAAA,SAAAC,EAAAlG,EAAAmG,GAAAxE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAwE,EAAAhF,OAAAQ,IAAAyE,CAAAA,IAAAA,EAAAD,EAAAxE,GAAAyE,EAAAC,WAAAD,EAAAC,aAAAD,EAAAA,EAAAE,cAAAF,EAAAA,UAAAA,IAAAA,EAAAG,UAAAC,GAAAA,OAAAC,eAAAzG,EAAA0G,EAAAN,EAAAnG,KAAAmG,IAAA,SAAA5G,EAAAwG,EAAAW,EAAAC,GAAAZ,OAAAW,GAAAT,EAAAF,EAAA3B,UAAAsC,GAAAC,GAAAV,EAAAF,EAAAY,GAAAJ,OAAAC,eAAAT,EAAAO,YAAAA,CAAAA,UAAAP,IAAAA,EAAA,SAAAU,EAAAG,GAAA5G,IAAAA,EAAA6G,EAAAD,EAAAlB,UAAAA,MAAA1F,WAAA0F,EAAA1F,GAAAA,EAAA8G,OAAA9G,GAAA,SAAA6G,EAAAE,EAAAC,GAAAtB,GAAAqB,WAAArB,EAAAqB,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAApB,OAAAuB,aAAAD,QAAAE,IAAAF,EAAA1D,CAAAA,IAAAA,EAAA0D,EAAA5H,KAAA0H,EAAAC,GAAAtB,WAAAA,GAAAnC,WAAAmC,EAAAnC,GAAAA,OAAAA,EAAAyC,MAAAA,IAAAA,UAAAgB,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GAAA,SAAAkzB,IAAAA,OAAAA,EAAA3xB,oBAAAA,SAAAA,QAAA6H,IAAA7H,QAAA6H,IAAAvI,OAAAqyB,SAAAl6B,EAAAmF,EAAAg1B,GAAAC,IAAAA,EAAAC,EAAAr6B,EAAAmF,GAAAi1B,GAAAA,EAAAA,CAAAE,IAAAA,EAAA9zB,OAAA+zB,yBAAAH,EAAAj1B,GAAAm1B,OAAAA,EAAAlqB,IAAAkqB,EAAAlqB,IAAA9Q,KAAAiF,UAAApD,OAAAnB,EAAAA,EAAAm6B,GAAAG,EAAAp6B,SAAAuE,MAAAF,KAAAA,WAAA,SAAA81B,EAAAn1B,EAAAC,GAAAqB,MAAAA,OAAAnC,UAAAgK,eAAA/O,KAAA4F,EAAAC,IAAAD,QAAAA,EAAAmD,EAAAnD,MAAAA,OAAAA,EAAA,SAAArG,EAAAyI,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAtB,OAAAsB,EAAAtB,MAAAA,IAAAA,UAAAqB,sDAAAA,EAAAjD,UAAAmC,OAAAgB,OAAAD,GAAAA,EAAAlD,UAAAyB,CAAAA,YAAA5F,CAAAA,MAAAoH,EAAAf,UAAAD,EAAAA,cAAAE,KAAAA,OAAAC,eAAAa,EAAAf,YAAAA,CAAAA,UAAAgB,IAAAA,GAAAE,EAAAH,EAAAC,GAAA,SAAAE,EAAAC,EAAAC,GAAAF,OAAAA,EAAAjB,OAAAoB,eAAApB,OAAAoB,eAAAC,OAAAJ,SAAAC,EAAAC,GAAAD,OAAAA,EAAAI,UAAAH,EAAAD,IAAAA,EAAAC,GAAA,SAAA1I,EAAA8I,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAAC,EAAAD,EAAAE,EAAAN,GAAAC,GAAAA,EAAAM,CAAAA,IAAAA,EAAAD,EAAAvC,MAAAA,YAAAsC,EAAAG,QAAAC,UAAAL,EAAA5D,UAAA+D,QAAAF,EAAAD,EAAA1D,MAAAF,KAAAA,WAAAkE,OAAAA,EAAAL,KAAAA,IAAA,SAAAK,EAAAC,EAAApJ,GAAAA,GAAAA,IAAAA,WAAAqG,EAAArG,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA2G,IAAA3G,EAAA2G,MAAAA,IAAAA,UAAA0C,4DAAAA,OAAAA,EAAAD,GAAA,SAAAC,EAAAD,GAAAA,QAAAE,IAAAF,EAAAE,MAAAA,IAAAA,eAAAF,6DAAAA,OAAAA,EAAA,SAAAT,IAAAM,GAAAA,oBAAAA,UAAAA,QAAAC,UAAAD,OAAAA,EAAAA,GAAAA,QAAAC,UAAAK,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAC,OAAAD,QAAA1E,UAAA4E,QAAA3J,KAAAiJ,QAAAC,UAAAO,QAAAC,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAAX,EAAAX,GAAAW,OAAAA,EAAA7B,OAAAoB,eAAApB,OAAA0C,eAAArB,OAAAQ,SAAAX,GAAAA,OAAAA,EAAAI,WAAAtB,OAAA0C,eAAAxB,KAAAA,GA+DnD,IA0BMq6C,EAAKC,SAAAA,GAAAnjD,EAAAkjD,EAASnO,EAAS,SAAlB,IAAA50C,EAAAC,EAAA8iD,GAIT,SAAAA,EAAYpyC,GAAS,IAAAxQ,EAAAC,EAAA2iD,KAAAA,GACnB,IAAME,EAAcz7C,OAAO8H,OAAO,GAAIqB,UAC/BsyC,EAAYnzC,QAEnB3P,EAAAH,EAAAM,KAAM2iD,KAAAA,IAKDz1C,GAKLrN,EAAKyM,KAKLzM,EAAKwN,GAMLxN,EAAK+iD,kBAAoB,KAMzB/iD,EAAKgjD,cAAgB,KAMrBhjD,EAAKijD,iBAAmB,KAMxBjjD,EAAKywC,UAAY,KAMjBzwC,EAAKkjD,cAAe,EAMpBljD,EAAKmjD,UAAW,EAGZ3yC,EAAQg9B,SACVxtC,EAAKwtC,OAASh9B,EAAQg9B,QAGpBh9B,EAAQqzB,KACV7jC,EAAKojD,OAAO5yC,EAAQqzB,KAGtB7jC,EAAKmS,kBACHyiC,EAAa,QAACN,OACdt0C,EAAKqjD,6BAGP,IAAM1zC,EAASa,EAAQb,OACQa,EAAQb,OACnC,KACmB,OAAvB3P,EAAKsjD,UAAU3zC,GAAQ3P,EAiUxB,OA9TDK,EAAAuiD,EAAA,CAAA,CAAA9hD,IAAA,iBAAAC,MAIA,SAAewP,GAGb,OAFAA,EAAQA,GAAgB,IAClB7F,KAAK,MACJ6F,IAGT,CAAAzP,IAAA,sBAAAC,MAIA,SAAoB80C,GAGlB,OAFAA,EAASA,GAAkB,IACpBnrC,KAAK,KAAK64C,iBACV1N,IAGT,CAAA/0C,IAAA,YAAAC,MAMA,WACE,OAAkC,KAAKkQ,IAAI2jC,EAAa,QAACN,SAAY,OAGvE,CAAAxzC,IAAA,kBAAAC,MAGA,WACE,OAAO,KAAKyiD,cAGd,CAAA1iD,IAAA,iBAAAC,MAGA,WACE,IAAM4O,EAAS,KAAK6zC,YACpB,OAAQ7zC,EAAuBA,EAAO0vC,WAArB,cAGnB,CAAAv+C,IAAA,sBAAAC,MAGA,WACE,KAAKmS,UACD,KAAKgwC,cAAgD,UAAhC,KAAKM,YAAYnE,aAG1C,KAAK6D,cAAe,EACpB,KAAKv1C,cAAc,kBAGrB,CAAA7M,IAAA,8BAAAC,MAGA,WAA8B,IAAAgO,EAAA,KACxB,KAAKk0C,oBACP,EAAAn2C,EAAa,eAAC,KAAKm2C,kBACnB,KAAKA,iBAAmB,MAE1B,KAAKC,cAAe,EACpB,IAAMvzC,EAAS,KAAK6zC,YAChB7zC,IACF,KAAKszC,kBAAmB,EAAA12C,EAAM,QAC5BoD,EACA/B,EAAS,QAACtC,OACV,KAAKm4C,oBACL,MAEwB,UAAtB9zC,EAAO0vC,aACT,KAAK6D,cAAe,EACpBvB,WAAW,WACT5yC,EAAKpB,cAAc,gBAClB,KAGP,KAAKuF,YAGP,CAAApS,IAAA,cAAAC,MAKA,SAAY2iD,GACV,OAAK,KAAKjT,UAGH,KAAKA,UAAUkT,YAAYD,GAFzBh+C,QAAQE,QAAQ,MAK3B,CAAA9E,IAAA,UAAAC,MAIA,SAAQ2iD,GACN,OAAK,KAAKjT,WAAc,KAAK0S,SAGtB,KAAK1S,UAAUmT,QAAQF,GAFrB,OAKX,CAAA5iD,IAAA,YAAAC,MASA,SAAU8iD,GAAM,IACVC,EAgBAC,EAjBUC,EAAA,KAERngB,EAAM,KAAKogB,kBACZJ,GAAQhgB,IACXggB,EAAOhgB,EAAIqgB,aAGXJ,EADED,aAAgB3K,EAAI,QACT,CACXkG,UAAWyE,EAAKxE,WAChBnlC,OAAQ2pC,EAAKvE,mBAGFuE,GAECM,kBAAoBtgB,IAClCigB,EAAWK,iBAAmBtgB,EAAIugB,gBAAgBC,uBAIlDN,EADED,EAAWK,iBACAL,EAAWK,iBAAiBG,KACvC,SAACP,GAAU,OAAKA,EAAWxO,QAAUyO,IAG1B,KAAKT,gBAGpB,IAAMgB,EAAc,KAAK5jC,YAEzB,OACE6jC,EAAOT,EAAYD,EAAW1E,cAC5BmF,IAAe,EAAArlC,EAAU,YAACqlC,EAAaT,EAAW5pC,WAIxD,CAAApZ,IAAA,kBAAAC,MAOA,SAAgB8iD,GACd,IAAK,KAAKY,UAAUZ,GAClB,MAAO,GAET,IAAIa,EACE/0C,EAAS,KAAK6zC,YAIpB,GAHI7zC,IACF+0C,EAAkB/0C,EAAO+0C,oBAEtBA,EACH,MAAO,GAET,IAEIC,EAAeD,EADjBb,aAAgB3K,EAAI,QAAG2K,EAAKe,wBAA0Bf,GAKxD,OAHK5gD,MAAMC,QAAQyhD,KACjBA,EAAe,CAACA,IAEXA,IAGT,CAAA7jD,IAAA,SAAAC,MAQA,SAAO+iD,EAAYjjD,GACjB,IAAMgkD,EAAgB,KAAK7T,cAE3B,OAAI6T,EAAcC,aAAahB,IAC7B,KAAKX,UAAW,EACT0B,EAAcE,YAAYjB,EAAYjjD,IAExC,OAGT,CAAAC,IAAA,WAAAC,MAGA,WACE,KAAKoiD,UAAW,IAGlB,CAAAriD,IAAA,iBAAAC,MAIA,SAAe8iC,GACRA,GACH,KAAKmhB,WAEP,KAAKt1C,IAAIklC,EAAa,QAACL,IAAK1Q,KAG9B,CAAA/iC,IAAA,iBAAAC,MAIA,WACE,OAAO,KAAKkQ,IAAI2jC,EAAa,QAACL,OAGhC,CAAAzzC,IAAA,SAAAC,MAWA,SAAO8iC,GACD,KAAKkf,qBACP,EAAAj2C,EAAa,eAAC,KAAKi2C,mBACnB,KAAKA,kBAAoB,MAEtBlf,GACH,KAAK3wB,UAEH,KAAK8vC,iBACP,EAAAl2C,EAAa,eAAC,KAAKk2C,eACnB,KAAKA,cAAgB,MAEnBnf,IACF,KAAKkf,mBAAoB,EAAAx2C,EAAM,QAC7Bs3B,EACAohB,EAAe,QAACjnB,WAChB,SAAU/8B,GACR,IAEMkjD,EADiDljD,EAClB6iD,WAAWK,iBAC1CJ,EAAa,KAAKR,eAAc,IAEtC,EAAA/xC,EAAM,SACH2yC,EAAiBe,KAAK,SAAUC,GAC/B,OAAOA,EAAgB5P,QAAUwO,EAAWxO,QAE9C,IAEF4O,EAAiBz5C,KAAKq5C,IAExB,MAEF,KAAKf,eAAgB,EAAAz2C,EAAM,QAAC,KAAMqB,EAAS,QAACtC,OAAQu4B,EAAI2J,OAAQ3J,GAChE,KAAK3wB,aAIT,CAAApS,IAAA,YAAAC,MAMA,SAAU4O,GACR,KAAKD,IAAIklC,EAAa,QAACN,OAAQ3kC,KAGjC,CAAA7O,IAAA,cAAAC,MAIA,WAIE,OAHK,KAAK0vC,YACR,KAAKA,UAAY,KAAK2U,kBAEjB,KAAK3U,YAGd,CAAA3vC,IAAA,cAAAC,MAGA,WACE,QAAS,KAAK0vC,YAGhB,CAAA3vC,IAAA,iBAAAC,MAKA,WACE,OAAO,OAGT,CAAAD,IAAA,kBAAAC,MAGA,WACM,KAAK0vC,YACP,KAAKA,UAAU4U,iBACR,KAAK5U,WAGd,KAAK6S,UAAU,MACfvoB,EAAA7xB,EAAA05C,EAAA19C,WAAA/E,kBAAAA,MAAAA,KAAA,UACDyiD,EA/YQC,GAyZJ,SAAS2B,EAAOT,EAAY3E,GACjC,IAAK2E,EAAWlP,QACd,OAAO,EAET,IAAMj3B,EAAawhC,EAAUxhC,WAC7B,GACEA,EAAammC,EAAWhP,eACxBn3B,GAAcmmC,EAAWjP,cAEzB,OAAO,EAET,IAAMqG,EAAOiE,EAAUjE,KACvB,OAAOA,EAAO4I,EAAW/O,SAAWmG,GAAQ4I,EAAW9O,QACxD,IAAA30C,EAEcsiD,EAAKriD,QAAAC,QAAAF;;;AC1gBpB,IAAA,GADA,SAAA,EAAA,GAAA,iBAAA,SAAA,oBAAA,OAAA,OAAA,QAAA,IAAA,mBAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,MAAA,MAAA,IAAA,CAAA,KAAA,WAAA,aAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,KAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAA,QAAA,IAAA,IAAA,EAAA,GAAA,KAAA,YAAA,KAAA,IAAA,EAAA,GAAA,KAAA,YAAA,KAAA,IAAA,EAAA,KAAA,KAAA,GAAA,KAAA,cAAA,KAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,QAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,KAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,KAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,KAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,KAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,SAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,SAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,CAAA,EAAA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","file":"desafio-estag-petrec-2020.74b6d9d0.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/defaults.js';\n","import {Map, View} from \"ol\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport TileWMS from \"ol/source/TileWMS\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\n\r\nimport {\r\n    Attribution,\r\n    ScaleLine,\r\n    OverviewMap,\r\n    ZoomToExtent,\r\n    defaults as defaultControls\r\n} from \"ol/control\";\r\n\r\nlet basemapLayer = new TileLayer({\r\n    source: new OSM({\r\n      url: \"https://cartocdn_{s}.global.ssl.fastly.net/base-midnight/{z}/{x}/{y}.png\",\r\n    }),\r\n});\r\n  \r\nlet overviewLayer = new TileLayer({\r\n    source: new OSM({\r\n      url: \"https://cartocdn_{s}.global.ssl.fastly.net/base-midnight/{z}/{x}/{y}.png\",\r\n    }),\r\n});\r\n\r\n\r\nlet overviewMapControl = new OverviewMap({\r\n    className: \"ol-overviewmap ol-custom-overviewmap\",\r\n    layers: [overviewLayer],\r\n    collapsed: false,\r\n});\r\n\r\nlet zoomToExtentControl = new ZoomToExtent({\r\n    // ESPG:3857\r\n    extent: [-15000000, -24000000, 15000000, 29000000],\r\n});\r\n\r\nfunction getScaleControl() {\r\n    let control = new ScaleLine({\r\n      units: \"metric\",\r\n      bar: false,\r\n      steps: 4,\r\n      text: true,\r\n      minWidth: 140,\r\n    });\r\n    return control;\r\n}\r\n\r\nlet BrasilFrequencyLayer = new TileLayer({\r\n    source: new TileWMS({\r\n      url: \"https://sedac.ciesin.columbia.edu/geoserver/wms\",\r\n      params: {\r\n        LAYERS: \"ndh:ndh-earthquake-frequency-distribution\",\r\n        TILES: true,\r\n      },\r\n    }),\r\n});\r\n\r\nlet BrasilVectorLayer = new VectorLayer({\r\n    source: new VectorSource ({\r\n        format: new GeoJSON(),\r\n        url:\r\n        // \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\",\r\n        \".\\htdocs\\GitHub\\desafio-estag-petrec-2020\\estados.geojson\"\r\n        \r\n\r\n    })\r\n});\r\n\r\nconst map = new Map({\r\n    target: 'map',\r\n    layers: [ basemapLayer,BrasilFrequencyLayer,BrasilVectorLayer\r\n    ],\r\n    view: new View({\r\n        center: [0,0],\r\n        zoom: 0\r\n    }),\r\n    controls: defaultControls({\r\n        attributionOptions: { collapsible: true },\r\n      }).extend([overviewMapControl,zoomToExtentControl, getScaleControl()]),\r\n});"]}