{"version":3,"sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/AssertionError.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/color.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/css.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/size.js","node_modules/ol/Map.js","node_modules/rbush/rbush.min.js","node_modules/ol/ImageState.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/Text.js","node_modules/ol/style/flat.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/common.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/VectorTile.js","node_modules/ol/VectorTile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/Source.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/featureloader.js","node_modules/ol/source/VectorTile.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["BaseEvent","type","_classCallCheck","propagationStopped","defaultPrevented","target","_createClass","key","value","preventDefault","stopPropagation","evt","_default","exports","default","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","Number","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Target","_Disposable","_super","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","_super2","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","messages","AssertionError","_Error","code","message","name","_wrapNativeSuper","_AssertionError","assert","assertion","errorCode","_Object","_asserts","Feature","_BaseObject","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","styles","getZIndex","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","options","window","error","_has","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","f","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","transformStringDiv","transformString","join","node","document","createElement","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","METERS_PER_UNIT","PI","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_math","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getLength","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","none","level","setLevel","args","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","forEach","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","_Geometry2","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","GeometryCollection","_Geometry","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","power","transformExtentWithOptions","_Feature","JSONFeature","_FeatureFormat","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","SimpleGeometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_segments","_contains","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingLength","perimeter","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_interpolate","_intersectsextent","_length","LineString","_SimpleGeometry","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","_LineString","MultiLineString","ends_","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","Point","_Point","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","linearRing","twiceArea","linearRings","linearRingss","_area","LinearRing","linearRingArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","_LinearRing","_interiorpoint","_orient","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","_MultiPoint","_Polygon","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_GeometryCollection","_JSONFeature2","_MultiLineString","_MultiPolygon","_Feature2","GeoJSON","_JSONFeature","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","map","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","rightHanded","ADD","REMOVE","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","array","unique_","unique","array_","assertUnique_","updateLength_","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","substr","startsWith","normalize","isStringColor","_color","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","colorString","shared","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","BaseLayer","background_","background","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","_this3","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","layerState","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","_IconImageCache","_Layer","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","_dom","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","_Map","_canvas","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","_Collection","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","EMPTY","_PriorityQueue2","_interopRequireWildcard","_TileState","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","has","newObj","hasPropertyDescriptor","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","num","hasArea","toSize","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","_size","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","asColorLike","_ImageState","_Image","_colorlike","RegularShape","_ImageStyle","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","getFill","getRadius2","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","ImageState","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","strokeStyle","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","Fill","color_","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_Circle","_Fill","_Stroke","Style","geometryFunction_","defaultGeometryFunction","image_","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","ImageBase","_ImageBase2","ImageWrapper","_ImageBase","imageLoadFunction","src_","context_","unlisten_","imageLoadFunction_","HTMLCanvasElement","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","catch","unlisten","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","imageState_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","_IconImage","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","onload","imageSize","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_Icon","_Style","_Text","toStyle","flatStyle","prefix","iconSrc","iconImg","icon","shapePoints","shape","circleRadius","Circle","_Layer2","_rbush","_flat","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","RBush","setRenderOrder","renderOrder","styleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","insert","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","_Executor","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","_Tile2","ImageTile","_Tile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","_ImageTile","_TileRange","CanvasTileLayerRenderer","_CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","tileSource","getPreload","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","toTransformString","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","expireCache","preload","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","_style","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","_BuilderGroup","_ExecutorGroup","_TileLayer","_hitdetect","_vector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","_CanvasTileLayerRende","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","_loop","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","CanvasBuilderGroup","getSquaredRenderTolerance","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","getOverlaps","tt","lastIndexOf","_loop2","executorGroup","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","getTileRenderTransform","worldOffset","renderMode","replayTypes","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","resetTransform","scaleTransform","pixelScale","translateTransform","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_BaseVector","_VectorTileLayer","_TileProperty","VectorTileLayer","_BaseVectorLayer","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","VectorTile","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","pruneExceptNewestZ","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","_TileGrid","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_Source2","_TileCache","_tilegrid","TileSource","_Source","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","url","urls","startCharCode","charCodeAt","stopCharCode","charCode","stop","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","VectorRenderTile","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","addFeatures","setWithCredentials","xhrWithCredentials","_VectorTile","_UrlTile2","_VectorRenderTile","_featureloader","_UrlTile","defaultLoadFunction","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","cacheKey","bufferExtent","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","empty","newTile","_GeoJSON","_VectorTile2","_style2","replacer","rawType","tags","fetch","json","tileIndex","geojsonvt","debug","vectorSource","VectorTileSource","geojson","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","v","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":"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AVnD;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA,IA0BMkzC,KAAK,0BAAAC,UAAA;EAAAxzC,SAAA,CAAAuzC,KAAA,EAAAC,UAAA;EAAA,IAAAvxC,MAAA,GAAAvB,YAAA,CAAA6yC,KAAA;EACT;AACF;AACA;EACE,SAAAA,MAAYjnC,OAAO,EAAE;IAAA,IAAApK,KAAA;IAAAjK,eAAA,OAAAs7C,KAAA;IACnB,IAAME,WAAW,GAAGv0C,MAAM,CAAC0I,MAAM,CAAC,CAAC,CAAC,EAAE0E,OAAO,CAAC;IAC9C,OAAOmnC,WAAW,CAAClrC,MAAM;IAEzBrG,KAAA,GAAAD,MAAA,CAAAjF,IAAA,OAAMy2C,WAAW;;IAEjB;AACJ;AACA;IACIvxC,KAAA,CAAKsD,EAAE;;IAEP;AACJ;AACA;IACItD,KAAA,CAAK4C,IAAI;;IAET;AACJ;AACA;IACI5C,KAAA,CAAKyD,EAAE;;IAEP;AACJ;AACA;AACA;IACIzD,KAAA,CAAKwxC,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACIxxC,KAAA,CAAKyxC,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACIzxC,KAAA,CAAK0xC,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACI1xC,KAAA,CAAK2xC,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACI3xC,KAAA,CAAK4xC,YAAY,GAAG,KAAK;;IAEzB;A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AEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9FA,IA+FMmtE,KAAK;EACT;AACF;AACA;EACE,SAAAA,MAAYvgE,OAAO,EAAE;IAAArU,eAAA,OAAA40E,KAAA;IACnBvgE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACmpD,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACqX,iBAAiB,GAAGC,uBAAuB;IAEhD,IAAIzgE,OAAO,CAACtC,QAAQ,KAAKlK,SAAS,EAAE;MAClC,IAAI,CAACmK,WAAW,CAACqC,OAAO,CAACtC,QAAQ,CAAC;IACpC;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAAC49D,KAAK,GAAGt7D,OAAO,CAACu7D,IAAI,KAAK/nE,SAAS,GAAGwM,OAAO,CAACu7D,IAAI,GAAG,IAAI;;IAE7D;AACJ;AACA;AACA;IACI,IAAI,CAACmF,MAAM,GAAG1gE,OAAO,CAACs8D,KAAK,KAAK9oE,SAAS,GAAGwM,OAAO,CAACs8D,KAAK,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI,IAAI,CAAC/0B,SAAS,GAAGvnC,OAAO,CAACq2D,QAAQ,KAAK7iE,SAAS,GAAGwM,OAAO,CAACq2D,QAAQ,GAAG,IAAI;;IAEzE;AACJ;AACA;AACA;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","file":"desafio-estag-petrec-2020.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","import GeoJSON from 'ol/format/GeoJSON.js';\r\nimport Map from 'ol/Map.js';\r\nimport Projection from 'ol/proj/Projection.js';\r\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\r\nimport VectorTileSource from 'ol/source/VectorTile.js';\r\nimport View from 'ol/View.js';\r\nimport {Fill, Style} from 'ol/style.js';\r\n\r\n// Converts geojson-vt data to GeoJSON\r\nconst replacer = function (key, value) {\r\n  if (!value || !value.geometry) {\r\n    return value;\r\n  }\r\n\r\n  let type;\r\n  const rawType = value.type;\r\n  let geometry = value.geometry;\r\n  if (rawType === 1) {\r\n    type = 'MultiPoint';\r\n    if (geometry.length == 1) {\r\n      type = 'Point';\r\n      geometry = geometry[0];\r\n    }\r\n  } else if (rawType === 2) {\r\n    type = 'MultiLineString';\r\n    if (geometry.length == 1) {\r\n      type = 'LineString';\r\n      geometry = geometry[0];\r\n    }\r\n  } else if (rawType === 3) {\r\n    type = 'Polygon';\r\n    if (geometry.length > 1) {\r\n      type = 'MultiPolygon';\r\n      geometry = [geometry];\r\n    }\r\n  }\r\n\r\n  return {\r\n    'type': 'Feature',\r\n    'geometry': {\r\n      'type': type,\r\n      'coordinates': geometry,\r\n    },\r\n    'properties': value.tags,\r\n  };\r\n};\r\n\r\nconst style = new Style({\r\n  fill: new Fill({\r\n    color: '#eeeeee',\r\n  }),\r\n});\r\n\r\nconst layer = new VectorTileLayer({\r\n  background: '#1a2b39',\r\n  style: function (feature) {\r\n    const color = feature.get('COLOR') || '#eeeeee';\r\n    style.getFill().setColor(color);\r\n    return style;\r\n  },\r\n});\r\n\r\nconst map = new Map({\r\n  layers: [layer],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [0, 0],\r\n    zoom: 2,\r\n  }),\r\n});\r\n\r\n// const url = 'https://openlayers.org/data/vector/ecoregions.json';\r\nconst url = 'https://www.rocklabdigital.com/static/geojson/estado.geojson';\r\n// const geojsonObject = '.\\htdocs\\GitHub\\desafio-estag-petrec-2020\\estados.geojson';\r\nfetch(url)\r\n  .then(function (response) {\r\n    return response.json();\r\n  })\r\n  .then(function (json) {\r\n    const tileIndex = geojsonvt(json, {\r\n      extent: 4096,\r\n      debug: 1,\r\n    });\r\n    const format = new GeoJSON({\r\n      // Data returned from geojson-vt is in tile pixel units\r\n      dataProjection: new Projection({\r\n        code: 'TILE_PIXELS',\r\n        units: 'tile-pixels',\r\n        extent: [0, 0, 4096, 4096],\r\n      }),\r\n    });\r\n    const vectorSource = new VectorTileSource({\r\n      tileUrlFunction: function (tileCoord) {\r\n        // Use the tile coordinate as a pseudo URL for caching purposes\r\n        return JSON.stringify(tileCoord);\r\n      },\r\n      tileLoadFunction: function (tile, url) {\r\n        const tileCoord = JSON.parse(url);\r\n        const data = tileIndex.getTile(\r\n          tileCoord[0],\r\n          tileCoord[1],\r\n          tileCoord[2]\r\n        );\r\n        const geojson = JSON.stringify(\r\n          {\r\n            type: 'FeatureCollection',\r\n            features: data ? data.features : [],\r\n          },\r\n          replacer\r\n        );\r\n        const features = format.readFeatures(geojson, {\r\n          extent: vectorSource.getTileGrid().getTileCoordExtent(tileCoord),\r\n          featureProjection: map.getView().getProjection(),\r\n        });\r\n        tile.setFeatures(features);\r\n      },\r\n    });\r\n    layer.setSource(vectorSource);\r\n  });\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}